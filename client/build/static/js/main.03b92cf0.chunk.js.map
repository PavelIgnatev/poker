{"version":3,"sources":["components/NotificationService/NotificationService.module.scss","components/Loader/Loader.module.scss","components/BaseTable/BaseTable.module.scss","store/Alias/state.ts","api/ConfigApi.ts","api/index.ts","store/Alias/init.ts","constants.ts","components/LevelBlocks/index.tsx","components/NotificationService/NotificationService.tsx","store/Select/state.ts","store/Select/init.ts","store/Config/state.ts","store/Config/init.ts","store/Password/state.ts","components/PasswordSection/PasswordSection.tsx","store/Password/init.ts","components/SingleSelect/SingleSelect.tsx","components/Admin.AliasesSection/__Form/index.tsx","components/ConfirmationDialog/index.tsx","components/UserSettings/__Table/index.tsx","components/UserSettings/__Info/index.tsx","components/UserSettings/index.tsx","components/Admin.AliasesSection/__List/index.tsx","components/Admin.AliasesSection/index.tsx","store/Rules/state.ts","store/Rules/init.ts","components/BaseButton/BaseButton.tsx","components/ElementsToggle/index.tsx","helpers/getUniqueElemKeyGetter.tsx","components/Admin.RulesSection/constants.ts","components/Admin.RulesSection/__Rules/index.tsx","helpers/validateNumber.ts","components/Admin.RulesSection/index.tsx","store/Email/state.ts","store/Email/init.ts","components/EmailSection/index.tsx","pages/AdminPage/AdminPage.tsx","components/BaseTable/Thead/Thead.tsx","components/BaseTable/Tbody/Tbody.tsx","components/Loader/Loader.tsx","components/BaseTable/BaseTable.tsx","pages/InfoPage/InfoPage.tsx","hooks/useIntervalWorker.ts","components/NumberInput/NumberInput.tsx","components/MultiSelect/MultiSelect.tsx","components/Checkbox/Checkbox.tsx","store/Store/state.ts","store/Store/init.ts","helpers/getDate.ts","helpers/getTimeBySec.ts","helpers/isSat.ts","helpers/isSuperTurbo.ts","helpers/isTurbo.ts","helpers/isNormal.ts","store/Filter/state.ts","store/Filter/init.ts","helpers/dateToTimeString.ts","helpers/timeStringToMilliseconds.ts","store/Table/state.ts","helpers/getTimeByMS.ts","helpers/getStatus.ts","helpers/isRebuy.ts","helpers/getWeekday.ts","store/Table/init.ts","components/BaseSettings/BaseSettings.tsx","components/BaseTournaments/BaseTournaments.tsx","components/BaseFooter/BaseFooter.tsx","pages/MainPage/MainPage.tsx","pages/index.tsx","store/Settings/state.ts","store/Settings/init.ts","store/Update/state.ts","store/Update/init.ts","index.tsx","components/BaseSettings/BaseSettings.module.scss"],"names":["module","exports","$aliases","createStore","ConfigApi","_classCallCheck","_createClass","key","value","_postConfigRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","password","wrap","_context","prev","next","axios","post","abrupt","sent","stop","_x","_x2","apply","arguments","_patchConfigRequest","_callee2","alias","_context2","patch","_x3","_x4","_x5","_deleteConfig","_callee3","data","_context3","delete","_x6","Api","_ConfigApi","_inherits","_super","_createSuper","_get","url","params","_yield$axios","fullUrl","URLSearchParams","toString","t1","t0","t2","_addSettings","settings","_addAlias","_checkAdminPassword","_callee4","_context4","_postEmail","_callee5","email","_context5","_postRules","_callee6","rules","_context6","_x7","_patchRules","_callee7","_context7","_x8","_deleteRules","_callee8","_context8","_x9","_postUpdate","_callee9","_context9","api","aliasesEvents","createApi","addAlias","store","concat","_toConsumableArray","deleteAlias","filter","a","getAliasesRequest","createEffect","_ref","level","get","on","doneData","aliases","LEVELS_ARRAY","Array","fill","map","_","index","EFFMU","b","b_","with","LevelBlocks","selectedLevel","onLevelChange","_jsx","className","children","ButtonGroup","variant","Button","size","onClick","color","undefined","useLevelBlocks","_React$useState","React","useState","_React$useState2","_slicedToArray","setSelectedLevel","handleLevelChange","ErrNot","content","toast","error","classes","NotificationContent","TIMEZONES","label","TIMERANGE","NETWORKS","SHORT_NETWORKS","DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS","network","time","timezone","timezoneTable","prizepoolStart","prizepoolEnd","moneyStart","moneyEnd","KO","turbo","superTurbo","freezout","normal","dateStart","dateEnd","$tournamentsSettings","editableTournamentsSettings","handleChangeNetwork","setting","_objectSpread","handleChangeTime","handleChangeTimezonetable","handleChangeMoneyStart","handleChangeMoneyEnd","handleChangePrizepoolStart","handleChangePrizepoolEnd","handleChangeDateStart","String","Number","handleChangeDateEnd","handleChangeKo","handleChangeTurbo","handleChangeSuperTurbo","handleChangeFreezout","handleChangeNormal","handleChangeTimezone","$config","DEFAULT_EDITABLE_CONFIG","networks","$editableConfig","configDomain","createDomain","clearConfig","getConfigRequest","postConfigRequest","_ref2","patchConfigRequest","_ref4","_ref3","deleteConfigRequest","_ref5","deleteConfig","onCreateEffect","effect","fail","watch","_ref6","_error$response","_error$response$data","response","message","editableConfigEvents","setConfig","setConfig2","handleChangeEffmu","_ref7","effmu","_defineProperty","handleChangeLevel","_ref8","handleAllLevelsChange","Object","keys","reduce","acc","handleChangePassword","handleTimezoneChange","handleChangeEffmuAll","PasswordSectionType","$password","_localStorage$getItem","localStorage","getItem","$isValidAdminPassword","v","setItem","setIsValidAdminPassword","validateAdminPasswordRequest","result","checkAdminPassword","theme","createTheme","useStyles","makeStyles","createStyles","formControl","minWidth","SingleSelect","options","onSingleChange","defaultValue","props","_objectWithoutProperties","_excluded","_useState","_useState2","selectedOption","setSelectedOption","ThemeProvider","_jsxs","FormControl","required","InputLabel","Select","onChange","event","option","find","target","MenuItem","form","display","flexDirection","alignItems","background","gap","maxWidth","marginTop","select","width","button","minHeight","AliasesSectionForm","setAlias","_useState3","_useState4","setPassword","_useState5","_useState6","setTZone","adminPassword","useStore","handleSubmit","e","preventDefault","onSubmit","Typography","gutterBottom","TextField","name","currentTarget","autoComplete","fullWidth","_option$value","type","ConfirmationDialog","isOpen","title","onConfirm","onCancel","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","levelsOptions","tableCell","border","UserSettingsTable","renderContent","useMemo","defaultOption","TableRow","TableCell","TableContainer","component","Paper","Table","TableHead","TableBody","UserSettingsInfo","isAdminPage","defaultTimezoneOption","useEffect","handlePasswordChange","UserSettings","editableConfig","listItem","borderRadius","maxHeight","flexBasis","cursor","borderColor","list","flexWrap","justifyContent","AliasesSectionList","selectedUser","setSelectedUser","selectedAlias","setSelectedAlias","isModalOpen","setIsModalOpen","classes2","selectedConfig","newPassword","handleCloseModal","handleAliasClick","handleAliasDelete","handleDialogClose","Box","sx","textAlign","length","List","user","ListItem","ListItemText","primary","IconButton","stopPropagation","handleOpenModal","DeleteIcon","paper","style","Close","AliasesSection","_useLevelBlocks","isAllLevels","root","height","padding","boxShadow","input","marginBottom","PasswordSection","login","setLogin","isAlias","ALIAS","handleChangeLogin","useCallback","$rules","getRulesRequest","postRulesRequest","postRules","deleteRulesRequest","rule","deleteRules","patchRules","useElementsToggle","defaultElem","selectedElement","setElement","handleElementChange","elem","getUniqueElemKeyGetter","getter","prefix","RULES_TYPES_TO_FIELDS","BidEqual","placeholder","BidFrom","BidTo","PrizepoolEqual","PrizepoolFrom","PrizepoolTo","AbilityEqual","AbilityFrom","AbilityTo","EntrantsEqual","EntrantsFrom","EntrantsTo","StartRegEqual","StartRegFrom","StartRegTo","LateRegEqual","LateRegFrom","LateRegTo","Name","NotName","StartDay","Flags","Class","Structure","Game","RULES_TYPES","RulesSectionRules","savedRules","types","setTypes","values","setValues","_useState7","_useState8","handleAddRuleRow","editableRule","ruleIndex","i","_values$ruleIndex$i","_values$ruleIndex","handleRulesCancel","handleSaveRule","handleTypeChange","rowIndex","_e$value","newTypes","newValues","handleValues","fieldIndex","status","uniqueElemKeyGetter","ruleRows","isComposite","isEditable","isSaveBtnDisabled","getIsSaveBtnDisabled","uniqueRuleKeyGetter","composite","ruleRow","ruleType","ruleValues","fields","isLastRow","uniqueRowKeyGetter","disabled","field","_field$options","elementType","isTime","isNum","uniqueFieldKeyGetter","Math","random","substr","backgroundColor","fontSize","outline","min","max","replace","validateNumber","splice","handleRemoveRuleRow","rowKey","fieldKeysCount","fieldKey","Status","Colors","ColorsValues","RulesSection","selectedEffmu","_useElementsToggle2","selectedKO","handleKOChange","_useElementsToggle3","selectedStatus","handleStatusChange","_useElementsToggle4","selectedColor","handleColorChange","selectedNetwork","setSelectedNetwork","_Fragment","k","$email","getEmail","postEmail","handleChangeEmail","EmailSection","validator","validate","AdminPage","isAdmin","ADMIN","Thead","_cx","_tournamentsSettings$","_cx2","_cx3","_cx4","_cx5","_cx6","_cx7","_cx8","setSortedKey","sortedKey","setIsReverse","isReverse","tournamentsSettings","handleClick","newSortedKey","thead","tr","cx","th","active","reverse","Tbody","tbody","slice","sort","_a$sortedKey","_b$sortedKey","dataA","toLowerCase","dataB","numberDataA","numberDataB","isNumberDataA","isNaN","isNumberDataB","item","_item$LateRegEndDate","td","Loader","wrapper","BaseTable","loading","section","id","table","nodata","InfoPage","setResult","urlSearchParams","window","location","search","fromEntries","entries","fetchData","handlers","worker","blob","Blob","workerScript","URL","createObjectURL","Worker","onmessage","createIntervalWorker","NumberInput","_ref$max","toUpperCase","newValue","parseInt","inputProps","MultiSelect","_ref$value","onMultiChange","Autocomplete","multiple","getOptionLabel","filterSelectedOptions","renderInput","Checkbox","selected","rest","FormControlLabel","control","MuiCheckbox","checked","$store","ability1","getStoreRequest","getDate","date","Date","toLocaleString","hour12","day","month","hour","timeZone","minute","getTimeBySec","timestamp","hours","floor","minutes","seconds","padStart","join","isSat","tournament","_tournament$Name","_tournament$Flags","sat","includes","isSuperTurbo","isTurbo","_flags","_flags2","flags","superturbo","isNormal","$filterContent","fetchFilterContent","_Function","Function","dateToTimeString","ms","getUTCHours","getUTCMinutes","timeStringToMilliseconds","timeString","_timeString$split$map","split","_timeString$split$map2","$tableState","$filtredTableState","tournaments","getState","_$tournamentsSettings","isKOQ","isTurboQ","isSTurboQ","isFreezoutQ","isNormalQ","_a$ScheduledStartDat","_b$ScheduledStartDat","_networks$network","_tournament$Stake","_tournament$Rake","_tournament$Schedule","_tournament$LateRegE","_ability1$network","_ability1$network$tim","_ability1$network$tim2","_tournament$Guarante","_tournament$PrizePoo","_tournament$Entrants","_tournament$ReEntrie","_tournament$Stake2","_tournament$TotalEnt","_tournament$ReEntrie2","_tournament$Stake3","_tournament$GameClas","_tournament$GameClas2","_tournament$Flags2","_ref2$level","bid","toFixed","isStartDate","isRegDate","startDate","regDate","bounty","getStatus","rebuy","isRebuy","info","ability","duration","round","_$$","_$$$split","_$$$split$","$","prizepool","pp","weekday","console","log","difficulty","valid","percent","d","Set","_item$ScheduledStart","_startDate$split","_startDate$split$","_startDate$split$$spl","add","_$tournamentsSettings2","res","fetchUserReposFx","_tournamentsSettings$2","_tournamentsSettings$3","SettingsWidgetWrapper","styled","position","bottom","spacing","right","palette","shadows","UpdateWidgetWrapper","BaseSettings","setIsOpen","handleClose","then","transform","SettingsIcon","menu","inputWrapper","inputBuyIn","checkboxWrapper","Grid","container","xs","Divider","RefreshIcon","green","secondary","pink","pagination","head","fontWeight","tableContainer","tableRow","action","hover","loaderContainer","cell","cellHead","BaseTournaments","pending","page","setPage","rowsPerPage","setRowsPerPage","rows","abs","CircularProgress","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","footer","BaseFooter","MainPage","_useIntervalWorker","setIntervalWorker","handler","timeout","nanoid","postMessage","clearIntervalWorker","clearAllIntervals","forEach","useUnmount","useIntervalWorker","reload","CustomToastContainer","ToastContainer","Pages","BrowserRouter","Switch","Route","path","hideProgressBar","$settings","fetchSettings","json","addSettings","$update","isUpdated","getUpdate","postUpdate","update","process","TZ","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03b92cf0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationSuccess\":\"NotificationService_NotificationSuccess__kWrEi\",\"icon\":\"NotificationService_icon__3lsCE\",\"NotificationError\":\"NotificationService_NotificationError__VPWSw\",\"NotificationContent\":\"NotificationService_NotificationContent__f35iv\",\"NotificationIcon\":\"NotificationService_NotificationIcon__gYYu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3hasz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"BaseTable_table__3Jlir\",\"thead\":\"BaseTable_thead__3LLdP\",\"tbody\":\"BaseTable_tbody__C8YI5\",\"tr\":\"BaseTable_tr__2Gh8U\",\"nodata\":\"BaseTable_nodata__oEkzP\",\"th\":\"BaseTable_th__1eiTa\",\"active\":\"BaseTable_active__17yZ7\",\"reverse\":\"BaseTable_reverse__2P3D9\",\"td\":\"BaseTable_td__2tYFY\",\"section\":\"BaseTable_section__24GGI\",\"select\":\"BaseTable_select__3Uud_\",\"effmu\":\"BaseTable_effmu__6LEo8\"};","import { createStore } from \"effector\";\n\nexport const $aliases = createStore<string[]>([]);\n","import { defaultConfigModel } from \"../@types/configModel\";\nimport axios from \"axios\";\nimport { ConfigModel } from \"../@types/configModel\";\n\nclass ConfigApi {\n  async postConfigRequest(config: defaultConfigModel, password: string) {\n    return await axios.post(`/api/config`, { config, password });\n  }\n  async patchConfigRequest(alias: string, config: ConfigModel, password: string) {\n    return await axios.patch(`/api/config`, { config, alias, password });\n  }\n  async deleteConfig(data: { alias: string; password: string }) {\n    return await axios.delete(`/api/config`, { data });\n  }\n}\nexport default ConfigApi;\n","import { rulesModel } from \"./../@types/rulesModel\";\nimport axios from \"axios\";\nimport ConfigApi from \"./ConfigApi\";\nclass Api extends ConfigApi {\n  async get<T>(url: string, params?: any) {\n    let fullUrl: string = url;\n    if (params) {\n      fullUrl += \"?\" + new URLSearchParams(params).toString();\n    }\n    return (await axios(fullUrl))?.data as T;\n  }\n  async addSettings(settings: any) {\n    return await axios.post(`/api/settings`, settings);\n  }\n  async addAlias(settings: any) {\n    return await axios.post(`/api/aliases`, settings);\n  }\n  async checkAdminPassword(password: string) {\n    return await axios.post(`/api/password/admin`, { password });\n  }\n  async postEmail(email: string) {\n    return await axios.post(`/api/email`, { email });\n  }\n  async postRules(rules: rulesModel[]) {\n    return await axios.post(`/api/rules`, { rules });\n  }\n  async patchRules(rules: rulesModel[]) {\n    return await axios.patch(`/api/rules`, { rules });\n  }\n  async deleteRules(data: rulesModel[]) {\n    return await axios.delete(`/api/rules`, { data });\n  }\n  async postUpdate() {\n    return await axios.post(`/api/update`);\n  }\n}\n\nconst api = new Api();\n\nexport default api;\n","import { createEffect, createApi } from \"effector\";\nimport { $aliases } from \"./state\";\nimport api from \"../../api\";\n\nexport const aliasesEvents = createApi($aliases, {\n  addAlias: (store, alias: string) => [...store, alias],\n  deleteAlias: (store, alias: string) => store.filter((a) => a !== alias),\n});\n\nexport const getAliasesRequest = createEffect(async (level?: number) => {\n  return await api.get<string[]>(\"/api/aliases\", { level });\n});\n\n$aliases.on(getAliasesRequest.doneData, (store, aliases) => aliases);\n","import { Effmu } from \"./@types/common\";\n\nexport const LEVELS_COUNT = 10;\nexport const LEVELS_ARRAY = new Array(LEVELS_COUNT).fill(null).map((_, index) => index + 1);\n\nexport const EFFMU: Effmu[] = [\"A\"];\n","import b_ from \"b_\";\nimport React, { FC } from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\n\nimport { LEVELS_ARRAY } from \"../../constants\";\n\ninterface Props {\n  selectedLevel: number | null;\n  onLevelChange: (level: number) => () => void;\n}\n\nexport const ALL_LEVELS = -1;\n\nconst b = b_.with(\"level-blocks\");\n\nexport const LevelBlocks: FC<Props> = ({ selectedLevel, onLevelChange }) => (\n  <div className={b()}>\n    <ButtonGroup variant=\"contained\" aria-label=\"Number Selector\">\n      {LEVELS_ARRAY.concat([-1]).map((level) => (\n        <Button\n          key={level}\n          size=\"large\"\n          onClick={onLevelChange(level)}\n          variant={selectedLevel === level ? \"outlined\" : \"contained\"}\n          color={selectedLevel === level ? \"primary\" : undefined}\n        >\n          {level < 0 ? \"all\" : level}\n        </Button>\n      ))}\n    </ButtonGroup>\n  </div>\n);\n\nexport const useLevelBlocks = () => {\n  const [selectedLevel, setSelectedLevel] = React.useState<number | null>(null);\n\n  const handleLevelChange = (level: number) => () => {\n    if (level === selectedLevel) {\n      setSelectedLevel(null);\n    } else {\n      setSelectedLevel(level);\n    }\n  };\n\n  return { selectedLevel, handleLevelChange };\n};\n","import { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport classes from \"./NotificationService.module.scss\";\n\n//Уведомление о успехе\nexport function SucNot(content: string) {\n  toast.success(<div className={classes.NotificationContent}>{content}</div>);\n}\n\n//Уведомление о ошибке\nexport function ErrNot(content: string) {\n  toast.error(<div className={classes.NotificationContent}>{content}</div>);\n}\n","import { tournamentsSettingsProps } from \"./types\";\nimport { createStore } from \"effector\";\n\nexport const TIMEZONES = [\n  { value: \"-43200000\", label: \"UTC-12 (IDLW)\" },\n  { value: \"-39600000\", label: \"UTC-11 (NT)\" },\n  { value: \"-36000000\", label: \"UTC-10 (HST)\" },\n  { value: \"-34200000\", label: \"UTC-9:30 (ACST)\" },\n  { value: \"-32400000\", label: \"UTC-9 (AKT)\" },\n  { value: \"-28800000\", label: \"UTC-8 (PT)\" },\n  { value: \"-25200000\", label: \"UTC-7 (MT)\" },\n  { value: \"-21600000\", label: \"UTC-6 (CT)\" },\n  { value: \"-18000000\", label: \"UTC-5 (ET)\" },\n  { value: \"-16200000\", label: \"UTC-4:30 (VET)\" },\n  { value: \"-14400000\", label: \"UTC-4 (AT)\" },\n  { value: \"-12600000\", label: \"UTC-3:30 (NST)\" },\n  { value: \"-10800000\", label: \"UTC-3 (BRT)\" },\n  { value: \"-7200000\", label: \"UTC-2 (AT)\" },\n  { value: \"-3600000\", label: \"UTC-1 (AZOT)\" },\n  { value: \"0\", label: \"UTC\" },\n  { value: \"1800000\", label: \"UTC+0:30 (NFT)\" },\n  { value: \"3600000\", label: \"UTC+1 (CET)\" },\n  { value: \"5400000\", label: \"UTC+1:30 (MET)\" },\n  { value: \"7200000\", label: \"UTC+2 (EET)\" },\n  { value: \"10800000\", label: \"UTC+3 (MSK)\" },\n  { value: \"12600000\", label: \"UTC+3:30 (IRST)\" },\n  { value: \"14400000\", label: \"UTC+4 (AZT)\" },\n  { value: \"16200000\", label: \"UTC+4:30 (AFT)\" },\n  { value: \"18000000\", label: \"UTC+5 (PKT)\" },\n  { value: \"20700000\", label: \"UTC+5:45 (NPT)\" },\n  { value: \"21600000\", label: \"UTC+6 (ALMT)\" },\n  { value: \"23400000\", label: \"UTC+6:30 (MST)\" },\n  { value: \"25200000\", label: \"UTC+7 (ICT)\" },\n  { value: \"27000000\", label: \"UTC+7:30 (MMT)\" },\n  { value: \"28800000\", label: \"UTC+8 (AWST)\" },\n  { value: \"31500000\", label: \"UTC+8:45 (CIT)\" },\n  { value: \"32400000\", label: \"UTC+9 (JST)\" },\n  { value: \"34200000\", label: \"UTC+9:30 (ACDT)\" },\n  { value: \"36000000\", label: \"UTC+10 (AEST)\" },\n  { value: \"37800000\", label: \"UTC+10:30 (AEDT)\" },\n  { value: \"39600000\", label: \"UTC+11 (AET)\" },\n  { value: \"43200000\", label: \"UTC+12 (NZST)\" },\n];\n\nexport const TIMERANGE = [\n  { value: \"600\", label: \"<10 minutes\" },\n  { value: \"3600\", label: \"<1 hour\" },\n  { value: \"10800\", label: \"<3 hours\" },\n  { value: \"21600\", label: \"<6 hours\" },\n  { value: \"43200\", label: \"<12 hours\" },\n  { value: \"86400\", label: \"<24 hours\" },\n  { value: \"604800\", label: \"<1 week\" },\n];\n\nexport const EFFMU = [{ value: \"A\", label: \"A\" }];\n\nexport const NETWORKS = [\n  { value: \"PokerStars\", label: \"PokerStars\" },\n  { value: \"PokerStars(FR-ES-PT)\", label: \"PokerStars(FR-ES-PT)\" },\n  { value: \"PartyPoker\", label: \"PartyPoker\" },\n  { value: \"888Poker\", label: \"888Poker\" },\n  { value: \"Chico\", label: \"Chico\" },\n  { value: \"WPN\", label: \"WPN\" },\n  { value: \"iPoker\", label: \"iPoker\" },\n  { value: \"GGNetwork\", label: \"GGNetwork\" },\n  { value: \"Winamax.fr\", label: \"Winamax.fr\" },\n];\n\nexport const SHORT_NETWORKS = [\n  { value: \"PokerStars\", label: \"PokerStars\" },\n  { value: \"PokerStars(FR-ES-PT)\", label: \"PokerStars(FR-ES-PT)\" },\n  { value: \"PartyPoker\", label: \"PartyPoker\" },\n  { value: \"888Poker\", label: \"888Poker\" },\n  { value: \"Chico\", label: \"Chico\" },\n  { value: \"WPN\", label: \"WPN\" },\n  { value: \"iPoker\", label: \"iPoker\" },\n  { value: \"GGNetwork\", label: \"GGNetwork\" },\n  { value: \"Winamax.fr\", label: \"Winamax.fr\" },\n  { value: \"all\", label: \"all\" },\n];\n\nexport const DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS: tournamentsSettingsProps = {\n  network: null,\n  time: TIMERANGE[2],\n  timezone: TIMEZONES[15],\n  timezoneTable: null,\n  prizepoolStart: 0,\n  prizepoolEnd: 10000000,\n  moneyStart: 0,\n  moneyEnd: 10000,\n  KO: true,\n  turbo: true,\n  superTurbo: true,\n  freezout: true,\n  normal: true,\n  dateStart: \"00\",\n  dateEnd: \"24\",\n};\n\nexport const $tournamentsSettings = createStore<tournamentsSettingsProps>(\n  DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS\n);\n","import { createApi } from \"effector\";\nimport { MultiValue, SingleValue } from \"react-select\";\nimport { selectModel } from \"../../@types/selectsModel\";\nimport { $tournamentsSettings, TIMEZONES } from \"./state\";\n\nexport const editableTournamentsSettings = createApi($tournamentsSettings, {\n  handleChangeNetwork: (setting, network: MultiValue<selectModel>) => ({\n    ...setting,\n    network,\n  }),\n  handleChangeTime: (setting, time: SingleValue<selectModel>) => ({\n    ...setting,\n    time,\n  }),\n  handleChangeTimezonetable: (setting, timezoneTable: string) => ({\n    ...setting,\n    timezoneTable,\n  }),\n  handleChangeMoneyStart: (setting, moneyStart: number) => ({\n    ...setting,\n    moneyStart,\n  }),\n  handleChangeMoneyEnd: (setting, moneyEnd: number) => ({\n    ...setting,\n    moneyEnd,\n  }),\n  handleChangePrizepoolStart: (setting, prizepoolStart: number) => ({\n    ...setting,\n    prizepoolStart,\n  }),\n  handleChangePrizepoolEnd: (setting, prizepoolEnd: number) => ({\n    ...setting,\n    prizepoolEnd,\n  }),\n  handleChangeDateStart: (setting, dateStart: string) => ({\n    ...setting,\n    dateStart: String(Number(dateStart) >= 24 ? 24 : dateStart),\n  }),\n  handleChangeDateEnd: (setting, dateEnd: string) => ({\n    ...setting,\n    dateEnd: String(Number(dateEnd) >= 24 ? 24 : dateEnd),\n  }),\n  handleChangeKo: (setting, KO: boolean) => ({\n    ...setting,\n    KO,\n  }),\n  handleChangeTurbo: (setting, turbo: boolean) => ({\n    ...setting,\n    turbo,\n  }),\n  handleChangeSuperTurbo: (setting, superTurbo: boolean) => ({\n    ...setting,\n    superTurbo,\n  }),\n  handleChangeFreezout: (setting, freezout: boolean) => ({\n    ...setting,\n    freezout,\n  }),\n  handleChangeNormal: (setting, normal: boolean) => ({\n    ...setting,\n    normal,\n  }),\n  handleChangeTimezone: (setting, timezone: typeof TIMEZONES[15]) => ({\n    ...setting,\n    timezone,\n  }),\n});\n","import { createStore } from \"effector\";\n\nimport { TIMEZONES } from \"../Select\";\nimport { ConfigModel } from \"./../../@types/configModel\";\n\nexport const $config = createStore<ConfigModel | null>(null);\n\nexport const DEFAULT_EDITABLE_CONFIG: ConfigModel = {\n  alias: \"\",\n  networks: {},\n  password: \"\",\n  timezone: TIMEZONES[15].value,\n};\nexport const $editableConfig = createStore<ConfigModel>(\n  DEFAULT_EDITABLE_CONFIG\n);\n","import { createDomain, createApi } from \"effector\";\n\nimport { ConfigModel, defaultConfigModel } from \"../../@types/configModel\";\nimport api from \"../../api\";\nimport { ErrNot } from \"../../components/NotificationService\";\n\nimport { $config, $editableConfig, DEFAULT_EDITABLE_CONFIG } from \"./state\";\nimport { Effmu, Level, Network } from \"../../@types/common\";\n\nconst DEFAULT_ERROR_MESSAGE =\n  \"An error has occurred. You are denied access to the service.\";\n\nconst configDomain = createDomain();\n\nexport const { clearConfig } = createApi($config, {\n  clearConfig: () => null,\n});\n\nexport const getConfigRequest = configDomain.createEffect(\n  async (params: { alias: string; password: string }) => {\n    return await api.get<ConfigModel>(\"/api/config\", params);\n  }\n);\n\nexport const postConfigRequest = configDomain.createEffect(\n  async (params: { config: defaultConfigModel; password: string }) => {\n    const { config, password } = params;\n\n    await api.postConfigRequest(config, password);\n  }\n);\n\nexport const patchConfigRequest = configDomain.createEffect(\n  async ({\n    alias,\n    config,\n    password,\n  }: {\n    alias: string;\n    config: ConfigModel;\n    password: string;\n  }) => {\n    await api.patchConfigRequest(alias, config, password);\n    await getConfigRequest({ alias, password: config.password });\n  }\n);\n\nexport const deleteConfigRequest = configDomain.createEffect(\n  async (params: { alias: string; password: string }) => {\n    await api.deleteConfig(params);\n    clearConfig();\n  }\n);\n\nconfigDomain.onCreateEffect((effect) => {\n  effect.fail.watch(({ error }: { error: any }) =>\n    ErrNot(error?.response?.data?.message || DEFAULT_ERROR_MESSAGE)\n  );\n});\n\nexport const editableConfigEvents = createApi($editableConfig, {\n  setConfig: (_, config: ConfigModel) => config,\n  setConfig2: (_, config: ConfigModel) => config,\n  clearConfig: (_) => DEFAULT_EDITABLE_CONFIG,\n  handleChangeEffmu: (\n    config,\n    { network, effmu }: { network: Network; effmu: Effmu }\n  ) => ({\n    ...config,\n    networks: {\n      ...config.networks,\n      [network]: { ...config.networks[network], effmu },\n    },\n  }),\n  handleChangeLevel: (\n    config,\n    { network, level }: { network: Network; level: Level }\n  ) => ({\n    ...config,\n    networks: {\n      ...config.networks,\n      [network]: { ...config.networks[network], level },\n    },\n  }),\n  handleAllLevelsChange: (config, level: Level) => {\n    const { networks } = config;\n\n    return {\n      ...config,\n      networks: Object.keys(networks).reduce(\n        (acc, network) => ({\n          ...acc,\n          [network]: { level },\n        }),\n        {}\n      ),\n    };\n  },\n  handleChangePassword: (config, password: string) => ({\n    ...config,\n    password,\n  }),\n  handleTimezoneChange: (config, timezone) => ({ ...config, timezone }),\n  handleChangeEffmuAll: (config, effmu) => ({\n    ...config,\n    networks: Object.keys(config.networks).reduce(\n      (acc, network) => ({\n        ...acc,\n        [network]: { ...config.networks[network], effmu },\n      }),\n      {}\n    ),\n  }),\n});\n\n$config.on(getConfigRequest.doneData, (_, config) => config);\n","import { createStore } from \"effector\";\n\nexport const $password = createStore<string>(localStorage.getItem(\"password\") ?? \"\");\n\nexport const $isValidAdminPassword = createStore<boolean>(false);\n","import { useStore } from \"effector-react\";\nimport { FC, useCallback, useState } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { $password, handleChangePassword } from \"../../store/Password\";\n\nimport \"./PasswordSection.scss\";\n\nexport enum PasswordSectionType {\n  ALIAS = \"alias\",\n  ADMIN = \"admin\",\n}\n\nexport type OnPasswordSubmit = ({\n  password,\n  login,\n}: {\n  password: string;\n  login: string;\n}) => void;\n\ninterface Props {\n  onSubmit: OnPasswordSubmit;\n  type?: PasswordSectionType;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"calc(100vh - 60px)\",\n    },\n    form: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: \"20px\",\n      borderRadius: \"10px\",\n      background: \"white\",\n      boxShadow: \"0px 0px 8px 2px rgba(34, 60, 80, 0.2)\",\n    },\n    input: {\n      marginBottom: \"20px\",\n      minWidth: \"300px\",\n    },\n    button: {\n      minHeight: \"50px\",\n      minWidth: \"150px\",\n    },\n  })\n);\n\nexport const PasswordSection: FC<Props> = ({ onSubmit, type }) => {\n  const classes = useStyles();\n  const [login, setLogin] = useState(localStorage.getItem(\"login\") ?? \"\");\n  const password = useStore($password);\n\n  const isAlias = type === PasswordSectionType.ALIAS || !type;\n\n  const handleChangeLogin = useCallback((v: string) => {\n    localStorage.setItem(\"login\", v);\n    setLogin(v);\n  }, []);\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      onSubmit({ password, login });\n    },\n    [onSubmit, password, login]\n  );\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={handleSubmit} className={classes.form}>\n        {isAlias && (\n          <TextField\n            label=\"Alias\"\n            variant=\"outlined\"\n            className={classes.input}\n            autoComplete=\"off\"\n            value={login}\n            onChange={(e) => handleChangeLogin(e.currentTarget.value)}\n          />\n        )}\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          className={classes.input}\n          value={password}\n          onChange={(e) => handleChangePassword(e.currentTarget.value)}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import { createApi, createEffect } from \"effector\";\nimport api from \"../../api\";\nimport { $isValidAdminPassword, $password } from \"./state\";\n\nexport const { handleChangePassword } = createApi($password, {\n  handleChangePassword: (_: string, v: string) => {\n    localStorage.setItem(\"password\", v);\n\n    return v;\n  },\n});\n\nexport const { setIsValidAdminPassword } = createApi($isValidAdminPassword, {\n  setIsValidAdminPassword: (_: boolean, v: boolean) => v,\n});\n\nexport const validateAdminPasswordRequest = createEffect(\n  async (password: string) => {\n    const result = await api.checkAdminPassword(password);\n    setIsValidAdminPassword(!!result.data);\n  }\n);\n","import React, { useState } from \"react\";\nimport { makeStyles, createStyles, ThemeProvider } from \"@mui/styles\";\nimport { createTheme } from \"@mui/material/styles\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select, { SelectChangeEvent, SelectProps } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    formControl: {\n      minWidth: 120,\n    },\n  })\n);\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props extends Omit<SelectProps, \"multiple\"> {\n  label: string;\n  value?: any;\n  options: Option[];\n  defaultValue: Option | null;\n  onSingleChange: (v: Option | null) => void;\n}\n\nexport const SingleSelect: React.FC<Props> = ({\n  label,\n  value,\n  options,\n  onSingleChange,\n  defaultValue,\n  ...props\n}) => {\n  const classes = useStyles();\n  const [selectedOption, setSelectedOption] = useState<Option | null>(\n    defaultValue\n  );\n\n  const handleChange = (event: SelectChangeEvent<unknown>) => {\n    const option = options.find(\n      (option) => option.value === event.target.value\n    );\n    setSelectedOption(option || null);\n    onSingleChange(option || null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <FormControl variant=\"outlined\" className={classes.formControl} required>\n        <InputLabel>{label}</InputLabel>\n        <Select\n          value={value >= 0 ? value : selectedOption?.value}\n          onChange={handleChange}\n          label={label}\n          {...props}\n        >\n          {options.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </ThemeProvider>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { FC, FormEvent, useState } from \"react\";\nimport { TextField, Button, Typography } from \"@mui/material\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nimport { getAliasesRequest } from \"../../../store/Alias\";\nimport { postConfigRequest } from \"../../../store/Config\";\nimport { $password } from \"../../../store/Password\";\nimport { TIMEZONES } from \"../../../store/Select\";\n\nimport { SingleSelect } from \"../../SingleSelect\";\n\ninterface AliasesSectionFormProps {\n  selectedLevel: number | null;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    form: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      background: \"white\",\n      gap: \"10px\",\n      maxWidth: \"300px\",\n      marginTop: \"15px\",\n    },\n    select: {\n      width: \"300px\",\n    },\n    button: {\n      minHeight: \"50px\",\n      width: \"300px\",\n    },\n  })\n);\n\nexport const AliasesSectionForm: FC<AliasesSectionFormProps> = ({\n  selectedLevel,\n}) => {\n  const classes = useStyles();\n\n  const [alias, setAlias] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [timezone, setTZone] = useState<string>(\"0\");\n  const adminPassword = useStore($password);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    await postConfigRequest({\n      config: {\n        alias,\n        level: selectedLevel ?? 0,\n        password,\n        timezone,\n      },\n      password: adminPassword,\n    });\n\n    await getAliasesRequest(selectedLevel ?? 0);\n\n    setAlias(\"\");\n    setPassword(\"\");\n    setTZone(TIMEZONES[15].value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={classes.form}>\n      <Typography variant=\"h6\" gutterBottom>\n        Creating a new account\n      </Typography>\n      <TextField\n        label=\"Alias\"\n        name=\"login\"\n        value={alias}\n        onChange={(e) => setAlias(e.currentTarget.value)}\n        autoComplete=\"off\"\n        required\n        fullWidth\n      />\n      <TextField\n        label=\"Password\"\n        name=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.currentTarget.value)}\n        autoComplete=\"off\"\n        required\n        fullWidth\n      />\n      <SingleSelect\n        className={classes.select}\n        label=\"Timezone\"\n        options={TIMEZONES}\n        defaultValue={TIMEZONES[15]}\n        required\n        fullWidth\n        onSingleChange={(option) => setTZone(option?.value ?? \"0\")}\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Add\n      </Button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n} from \"@mui/material\";\n\ntype ConfirmationDialogProps = {\n  isOpen: boolean;\n  title: string;\n  content: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\n\nexport const ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  isOpen,\n  title,\n  content,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <Dialog open={isOpen} onClose={onCancel}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <Typography>{content}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button onClick={onConfirm}>Confirm</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import b_ from \"b_\";\nimport { FC, useMemo } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Networks } from \"../../../@types/common\";\nimport { SelectOption } from \"../../../@types/selectsModel\";\nimport { LEVELS_ARRAY } from \"../../../constants\";\nimport { editableConfigEvents } from \"../../../store/Config\";\n\nimport { SingleSelect } from \"../../SingleSelect\";\n\ninterface Props {\n  networks: Networks;\n}\n\nconst b = b_.with(\"user-settings-table\");\n\nconst levelsOptions: SelectOption<number>[] = LEVELS_ARRAY.map((level) => ({\n  value: level,\n  label: level,\n}));\n\nconst useStyles = makeStyles({\n  tableCell: {\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n  },\n});\n\nexport const UserSettingsTable: FC<Props> = ({ networks }) => {\n  const classes = useStyles();\n\n  const renderContent = useMemo(\n    () =>\n      Object.keys(networks).map((network) => {\n        const { level } = networks[network];\n\n        const defaultOption = levelsOptions.find(\n          (option) => option.value === level\n        );\n\n        const handleLevelChange = (option: SelectOption<number>) =>\n          editableConfigEvents.handleChangeLevel({\n            network,\n            level: option.value,\n          });\n\n        return (\n          <TableRow key={network}>\n            <TableCell className={classes.tableCell}><b>{network}</b></TableCell>\n            <TableCell className={classes.tableCell}>\n              <SingleSelect\n                label=\"Level\"\n                options={levelsOptions as any}\n                value={defaultOption?.value as any}\n                defaultValue={defaultOption as any}\n                className={b(\"select\")}\n                onSingleChange={handleLevelChange as any}\n              />\n            </TableCell>\n          </TableRow>\n        );\n      }),\n    [networks, classes.tableCell]\n  );\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\" className={classes.tableCell}>\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.tableCell}><b>Network</b></TableCell>\n            <TableCell className={classes.tableCell}><b>Level</b></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{renderContent}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { FC, useEffect } from \"react\";\nimport b_ from \"b_\";\nimport { TextField, Typography } from \"@mui/material\";\n\nimport { SelectOption } from \"../../../@types/selectsModel\";\nimport { ConfigModel } from \"../../../@types/configModel\";\nimport { editableConfigEvents } from \"../../../store/Config\";\nimport { editableTournamentsSettings, TIMEZONES } from \"../../../store/Select\";\n\nimport { LEVELS_ARRAY } from \"../../../constants\";\nimport { SingleSelect } from \"../../SingleSelect\";\n\nconst levelsOptions: SelectOption<number>[] = LEVELS_ARRAY.map((level) => ({\n  value: level,\n  label: level,\n}));\n\ninterface Props {\n  config: ConfigModel;\n  isAdminPage?: boolean;\n}\n\nconst b = b_.with(\"user-settings-info\");\n\nexport const UserSettingsInfo: FC<Props> = ({ config, isAdminPage }) => {\n  const { alias, password, timezone } = config;\n\n  const defaultTimezoneOption =\n    TIMEZONES.find((option) => option.value === timezone) || TIMEZONES[15];\n\n  const handlePasswordChange = (password: string) =>\n    editableConfigEvents.handleChangePassword(password);\n  const handleTimezoneChange = (option: SelectOption<typeof TIMEZONES[15]>) =>\n    editableConfigEvents.handleTimezoneChange(option.value);\n  const handleLevelChange = (option: SelectOption<number>) => {\n    editableConfigEvents.handleAllLevelsChange(option.value as any);\n  };\n\n  useEffect(() => {\n    editableTournamentsSettings.handleChangeTimezone(defaultTimezoneOption);\n  }, [defaultTimezoneOption]);\n\n  return (\n    <div className={b()}>\n      <div className={b(\"header\")}>\n        <div className={b(\"header-conent\")}>\n          <Typography variant=\"h5\">Alias: {alias}</Typography>\n        </div>\n      </div>\n      <div className={b(\"settings\")}>\n        <div className={b(\"settings-wrapper\")}>\n          <div className={b(\"timezones-wrapper\")}>\n            <SingleSelect\n              label=\"Change all levels\"\n              options={levelsOptions as any}\n              defaultValue={null}\n              className={b(\"select\")}\n              onSingleChange={handleLevelChange as any}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={b(\"settings\")}>\n        <div className={b(\"settings-wrapper\")}>\n          <div className={b(\"password-wrapper\")}>\n            <SingleSelect\n              label=\"Timezone\"\n              className={b(\"select\")}\n              options={TIMEZONES}\n              required\n              autoComplete=\"off\"\n              defaultValue={defaultTimezoneOption}\n              onSingleChange={handleTimezoneChange as any}\n            />\n          </div>\n        </div>\n      </div>\n      {isAdminPage && (\n        <div className={b(\"password-wrapper\")}>\n          <TextField\n            label=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => handlePasswordChange(e.currentTarget.value)}\n            autoComplete=\"off\"\n            required\n            fullWidth\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\nimport b_ from \"b_\";\n\nimport { ConfigModel } from \"../../@types/configModel\";\nimport { $editableConfig, editableConfigEvents } from \"../../store/Config\";\n\nimport { UserSettingsTable } from \"./__Table\";\nimport { UserSettingsInfo } from \"./__Info\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  config: ConfigModel;\n}\n\nexport const b = b_.with(\"user-settings\");\n\nexport const UserSettings = ({ config }: Props) => {\n  const editableConfig = useStore($editableConfig);\n  const { alias, networks } = editableConfig;\n\n  React.useEffect(() => {\n    editableConfigEvents.setConfig(config);\n\n    return editableConfigEvents.clearConfig;\n  }, [config]);\n\n  if (!alias) {\n    return null;\n  }\n\n  return (\n    <div className={b()}>\n      <div className={b(\"content\")}>\n        <div className={b(\"content-main-block\")}>\n          <UserSettingsInfo config={editableConfig} isAdminPage />\n        </div>\n        <UserSettingsTable networks={networks} />\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport b_ from \"b_\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Close } from \"@mui/icons-material\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Dialog,\n  Box,\n  Typography,\n  IconButton,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useStore } from \"effector-react\";\n\nimport { $password } from \"../../../store/Password\";\nimport {\n  $aliases,\n  aliasesEvents,\n  getAliasesRequest,\n} from \"../../../store/Alias\";\nimport {\n  $config,\n  $editableConfig,\n  deleteConfigRequest,\n  getConfigRequest,\n  patchConfigRequest,\n} from \"../../../store/Config\";\nimport { ConfirmationDialog } from \"../../ConfirmationDialog\";\nimport { UserSettings } from \"../../UserSettings\";\n\nexport const b = b_.with(\"aliases-section\");\n\nconst useStyles = makeStyles(() => ({\n  listItem: {\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n    borderRadius: \"4px\",\n    maxHeight: \"56px\",\n    flexBasis: \"calc(50% - 10px)\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      borderColor: \"black\",\n    },\n  },\n  list: {\n    gap: \"10px\",\n    marginTop: \"9px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nexport const AliasesSectionList = ({\n  selectedLevel,\n}: {\n  selectedLevel: number;\n}) => {\n  const [selectedUser, setSelectedUser] = useState<any>(null);\n  const [selectedAlias, setSelectedAlias] = useState<any>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const classes2 = useStyles();\n\n  const password = useStore($password);\n  const aliases = useStore($aliases);\n  const selectedConfig = useStore($config);\n  const editableConfig = useStore($editableConfig);\n\n  const { alias, networks, password: newPassword, ...props } = editableConfig;\n\n  const handleOpenModal = (user: string) => {\n    setSelectedAlias(user);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleAliasClick = async (alias: string) => {\n    setSelectedUser(alias);\n    await getConfigRequest({ alias, password });\n  };\n\n  const handleAliasDelete = async () => {\n    aliasesEvents.deleteAlias(selectedAlias);\n    await deleteConfigRequest({ alias: selectedAlias, password });\n    handleCloseModal();\n  };\n\n  const handleDialogClose = async () => {\n    setSelectedUser(null);\n    await patchConfigRequest({\n      alias,\n      config: {\n        ...props,\n        networks,\n        password: newPassword,\n        alias,\n      },\n      password,\n    });\n\n    if (selectedLevel === -1) {\n      getAliasesRequest();\n    } else if (selectedLevel !== null) {\n      getAliasesRequest(selectedLevel);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginTop: \"15px\",\n        textAlign: \"center\",\n      }}\n    >\n      {aliases.length > 0 && (\n        <Typography variant=\"h6\" gutterBottom>\n          List of aliases\n        </Typography>\n      )}\n      <List className={classes2.list}>\n        {aliases.map((user) => (\n          <ListItem\n            key={user}\n            onClick={() => handleAliasClick(user)}\n            className={classes2.listItem}\n          >\n            <ListItemText primary={user} />\n            <IconButton\n              color=\"error\"\n              aria-label=\"delete user\"\n              onClick={(e) => {\n                e.stopPropagation();\n                handleOpenModal(user);\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Dialog\n        open={selectedUser !== null}\n        onClose={handleDialogClose}\n        classes={{ paper: b(\"dialog\") }}\n      >\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <IconButton onClick={handleDialogClose}>\n            <Close />\n          </IconButton>\n        </div>\n        {selectedConfig && <UserSettings config={selectedConfig} />}\n      </Dialog>\n      <ConfirmationDialog\n        isOpen={isModalOpen}\n        title=\"Are you sure?\"\n        content=\"Do you really want to perform this action?\"\n        onCancel={handleCloseModal}\n        onConfirm={handleAliasDelete}\n      />\n    </Box>\n  );\n};\n","import b_ from \"b_\";\nimport React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { getAliasesRequest } from \"../../store/Alias\";\nimport { LevelBlocks, ALL_LEVELS, useLevelBlocks } from \"../LevelBlocks\";\nimport { AliasesSectionForm } from \"./__Form\";\n\nimport { AliasesSectionList } from \"./__List\";\n\nimport \"./index.scss\";\n\nexport const b = b_.with(\"aliases-section\");\n\nexport const AliasesSection = () => {\n  const { selectedLevel, handleLevelChange } = useLevelBlocks();\n  const isAllLevels = selectedLevel === ALL_LEVELS;\n\n  React.useEffect(() => {\n    if (isAllLevels) {\n      getAliasesRequest();\n    } else if (selectedLevel !== null) {\n      getAliasesRequest(selectedLevel);\n    }\n  }, [selectedLevel, isAllLevels]);\n\n  return (\n    <section className={b()}>\n      <Typography variant=\"h5\" gutterBottom>\n        Alias control\n      </Typography>\n      <LevelBlocks\n        selectedLevel={selectedLevel}\n        onLevelChange={handleLevelChange}\n      />\n      {selectedLevel !== null && (\n        <div className={b(\"content-wrapper\")}>\n          {!isAllLevels && <AliasesSectionForm selectedLevel={selectedLevel} />}\n          <AliasesSectionList selectedLevel={selectedLevel} />\n        </div>\n      )}\n    </section>\n  );\n};\n","import { rulesModel } from \"./../../@types/rulesModel\";\nimport { createStore } from \"effector\";\n\nexport const $rules = createStore<Array<rulesModel[]> | null>(null);\n","import { rulesModel } from \"../../@types/rulesModel\";\nimport { createDomain } from \"effector\";\n\nimport api from \"../../api\";\nimport { ErrNot } from \"../../components/NotificationService\";\n\nimport { $rules } from \"./state\";\n\nconst DEFAULT_ERROR_MESSAGE = \"An error has occurred. You are denied access to the service.\";\n\nconst configDomain = createDomain();\n\nexport const getRulesRequest = configDomain.createEffect(\n  async (params: { color: string; level: string; network: string; status: string; KO: string }) => {\n    return await api.get<Array<rulesModel[]>>(\"/api/rules\", params);\n  },\n);\n\nexport const postRulesRequest = configDomain.createEffect(async (rules: rulesModel[]) => {\n  await api.postRules(rules);\n  await getRulesRequest(rules[0]);\n});\n\nexport const deleteRulesRequest = configDomain.createEffect(async (rule: rulesModel[]) => {\n  await api.deleteRules(rule);\n  await getRulesRequest(rule[0]);\n});\n\nexport const patchRulesRequest = configDomain.createEffect(\n  async ({ rule }: { rule: rulesModel[] }) => {\n    await api.patchRules(rule);\n    await getRulesRequest(rule[0]);\n  },\n);\n\nconfigDomain.onCreateEffect((effect) => {\n  effect.fail.watch(({ error }: { error: any }) =>\n    ErrNot(error?.response?.data?.message || DEFAULT_ERROR_MESSAGE),\n  );\n});\n\n$rules.on(getRulesRequest.doneData, (_, rules) => rules);\n","import b_ from \"b_\";\nimport cx from \"classnames\";\nimport { CSSProperties, FC } from \"react\";\n\nimport \"./BaseButton.scss\";\n\ninterface BaseButtonProps {\n  onClick: () => void;\n  className?: string;\n  disabled?: boolean;\n  clear?: boolean;\n  red?: boolean;\n  green?: boolean;\n  autoFocus?: boolean;\n  style?: CSSProperties;\n}\n\nconst b = b_.with(\"base-button\");\n\n// todo все пропсы для обычной кнопки, и вписать их в типы как наследование, а не каждый отдельно\nexport const BaseButton: FC<BaseButtonProps> = ({\n  onClick,\n  className,\n  children,\n  disabled,\n  clear,\n  red,\n  green,\n  autoFocus,\n  style,\n}) => {\n  return (\n    <button\n      className={cx(b({ clear, red, green }), className)}\n      onClick={onClick}\n      disabled={disabled}\n      style={style}\n      autoFocus={autoFocus}\n    >\n      {children}\n    </button>\n  );\n};\n","import b_ from \"b_\";\nimport cx from \"classnames\";\nimport { useState } from \"react\";\n\nimport { BaseButton } from \"../BaseButton\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  selectedElement: string;\n  onElementChange: (element: any) => () => void;\n  elements: string[];\n  mix?: string;\n}\n\nconst b = b_.with(\"elements-toggle\");\n\nexport const ElementsToggle = ({ selectedElement, onElementChange, elements, mix }: Props) => (\n  <div className={cx(b(), mix)}>\n    {elements.map((elem) => (\n      <BaseButton\n        className={b(\"button\")}\n        onClick={onElementChange(elem)}\n        clear={elem !== selectedElement}\n        key={elem}\n      >\n        {elem}\n      </BaseButton>\n    ))}\n  </div>\n);\n\n// @ts-ignore ругается на T = \"\", типа T может не быть стрингой (но она extends от нее!!)\nexport function useElementsToggle<T extends string>(defaultElem: T = \"\") {\n  const [selectedElement, setElement] = useState(defaultElem);\n  const handleElementChange = (elem: T) => () => {\n    if (elem !== selectedElement) {\n      setElement(elem);\n    }\n  };\n\n  return { selectedElement, handleElementChange };\n}\n","export const getUniqueElemKeyGetter = (elem: string) => {\n  const getter = (prefix?: string) => getUniqueElemKeyGetter(elem + prefix);\n  getter.key = elem;\n  return getter;\n};\n","import { rulesType } from \"../../@types/rulesModel\";\n\n// если здесь чет меняем то меняем и на сервере\nexport const RULES_TYPES_TO_FIELDS = {\n  BidEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  BidFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  BidTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  PrizepoolEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  PrizepoolFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  PrizepoolTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  AbilityEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  AbilityFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  AbilityTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  EntrantsEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  EntrantsFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  EntrantsTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  StartRegEqual: [\n    {\n      type: \"time\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  StartRegFrom: [\n    {\n      type: \"time\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  StartRegTo: [\n    {\n      type: \"time\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  LateRegEqual: [\n    {\n      type: \"time\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  LateRegFrom: [\n    {\n      type: \"time\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  LateRegTo: [\n    {\n      type: \"time\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  Name: [\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  NotName: [\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  StartDay: [\n    {\n      type: \"string\",\n      placeholder: \"Weekday\",\n      options: [\n        \"Sunday\",\n        \"Monday\",\n        \"Thusday\",\n        \"Webnesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ],\n    },\n  ],\n  Flags: [\n    {\n      type: \"string\",\n      options: [\n        \"rebuy\",\n        \"od\",\n        \"deepstack\",\n        \"sat\",\n        \"!rebuy\",\n        \"!od\",\n        \"!deepstack\",\n        \"!sat\",\n      ],\n      placeholder: \"Flags\",\n    },\n  ],\n  Class: [\n    {\n      type: \"string\",\n      options: [\"sng\", \"scheduled\", \"!sng\", \"!scheduled\"],\n      placeholder: \"Class\",\n    },\n  ],\n  Structure: [\n    {\n      type: \"string\",\n      options: [\n        \"NL\",\n        \"PL\",\n        \"PNL\",\n        \"FL\",\n        \"ML\",\n        \"!NL\",\n        \"!PL\",\n        \"!PNL\",\n        \"!FL\",\n        \"!ML\",\n      ],\n      placeholder: \"Structure\",\n    },\n  ],\n  Game: [\n    {\n      type: \"string\",\n      options: [\"H\", \"H6\", \"O\", \"OHL\", \"!H\", \"!H6\", \"!O\", \"!OHL\"],\n      placeholder: \"Game\",\n    },\n  ],\n};\n\nexport const RULES_TYPES = Object.keys(RULES_TYPES_TO_FIELDS) as rulesType[];\n","import { useState } from \"react\";\nimport { TextField, Button, IconButton } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport { useStore } from \"effector-react\";\nimport { rulesModel, rulesType } from \"../../../@types/rulesModel\";\nimport { getUniqueElemKeyGetter } from \"../../../helpers/getUniqueElemKeyGetter\";\nimport {\n  $rules,\n  deleteRulesRequest,\n  postRulesRequest,\n} from \"../../../store/Rules\";\nimport { validateNumber } from \"../../../helpers/validateNumber\";\n\nimport { RULES_TYPES_TO_FIELDS, RULES_TYPES } from \"../constants\";\nimport { b } from \"../index\";\nimport { SingleSelect } from \"../../SingleSelect\";\nimport { ConfirmationDialog } from \"../../ConfirmationDialog\";\n\ntype RulesSectionRulesProps = {\n  color: string;\n  level: string;\n  network: string;\n  status: string;\n  KO: string;\n};\ntype valuesType = Array<Record<string, number | string>>;\n\ntype Field = {\n  type: string;\n  placeholder: string;\n  options: string[];\n};\n\nexport const RulesSectionRules = (props: RulesSectionRulesProps) => {\n  const savedRules = useStore($rules) as Array<rulesModel[]>;\n\n  const [types, setTypes] = useState<rulesType[]>([RULES_TYPES[0]]);\n  const [values, setValues] = useState<valuesType>([{}]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [internalValue, setInternalValue] = useState<string>('00:00');\n\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n    if (/^([0-1][0-9]|2[0-3]):[0-5][0-9]$/.test(inputValue)) {\n      setInternalValue(inputValue);\n    }\n  };\n\n  const handleAddRuleRow = () => {\n    setTypes((types) => [...types, RULES_TYPES[0]]);\n    setValues((values) => [...values, {}]);\n  };\n\n  const handleRemoveRuleRow = (ruleIndex: number) => {\n    setTypes((types) => {\n      const newTypes = [...types];\n      newTypes.splice(ruleIndex, 1);\n      return newTypes;\n    });\n    setValues((values) => {\n      const newValues = [...values];\n      newValues.splice(ruleIndex, 1);\n      return newValues;\n    });\n  };\n\n  const editableRule = types.map((type, ruleIndex) => ({\n    type,\n    values: new Array(RULES_TYPES_TO_FIELDS[type].length)\n      .fill(null)\n      .map((_, i) => values?.[ruleIndex]?.[i] ?? \"\"),\n    ...props,\n  }));\n  const rules: rulesModel[][] = [\n    editableRule,\n    ...(savedRules ? savedRules : []),\n  ];\n\n  const handleRulesCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleRulesOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleSaveRule = () => {\n    postRulesRequest(editableRule);\n    setValues([{}]);\n  };\n\n  const handleTypeChange = (rowIndex: number) => (e: any) => {\n    setTypes((types) => {\n      const newTypes = [...types];\n      newTypes[rowIndex] = e?.value ?? RULES_TYPES[0];\n      return newTypes;\n    });\n    setValues((values) => {\n      const newValues = [...values];\n      newValues[rowIndex] = {};\n      return newValues;\n    });\n  };\n\n  const handleValues = (\n    value: string | number,\n    rowIndex: number,\n    fieldIndex: number\n  ) => {\n    setValues((values) => {\n      const newValues = [...values];\n\n      if (!newValues[rowIndex]) {\n        newValues[rowIndex] = {};\n      }\n      newValues[rowIndex][fieldIndex] = value;\n\n      return newValues;\n    });\n  };\n\n  const { color, level, network, status, KO } = props;\n  const uniqueElemKeyGetter = getUniqueElemKeyGetter(\n    color + level + network + status + KO\n  );\n\n\n  return (\n    <div className={b(\"rules\")}>\n      {rules.map((ruleRows, ruleIndex) => {\n        const isComposite = ruleRows.length > 1;\n        const isEditable = ruleIndex === 0;\n\n        const isSaveBtnDisabled = getIsSaveBtnDisabled(ruleRows, values);\n\n        const uniqueRuleKeyGetter = uniqueElemKeyGetter(\"rule\" + ruleIndex);\n\n        return (\n          <div\n            className={b(\"rule\", { composite: isComposite })}\n            key={uniqueRuleKeyGetter.key}\n          >\n            <div className={b(\"rule-stripe\")} />\n            {ruleRows.map((ruleRow, rowIndex) => {\n              const { type: ruleType, values: ruleValues } = ruleRow;\n              const fields = RULES_TYPES_TO_FIELDS[ruleType] as Field[];\n              const isLastRow = rowIndex === ruleRows.length - 1;\n\n              const uniqueRowKeyGetter = uniqueRuleKeyGetter(\n                \"row\" + ruleType + rowIndex\n              );\n\n              return (\n                <div className={b(\"rule-row\")} key={uniqueRowKeyGetter.key}>\n                  <SingleSelect\n                    options={RULES_TYPES?.map((type) => ({\n                      value: type,\n                      label: type,\n                    }))}\n                    disabled={!isEditable}\n                    label=\"Modifier\"\n                    required\n                    style={{ width: \"160px\" }}\n                    onSingleChange={handleTypeChange(rowIndex)}\n                    className={b(\"rule-row-select\")}\n                    defaultValue={{ value: ruleType, label: ruleType }}\n                  />\n                  {fields.map((field, fieldIndex) => {\n                    const { type: elementType, placeholder, options } = field;\n\n                    const isTime = elementType === \"time\";\n                    const isNum = elementType === \"number\";\n                    const value = String(ruleValues?.[fieldIndex] || \"\");\n\n                    const uniqueFieldKeyGetter = uniqueRowKeyGetter(\n                      \"field\" + fieldIndex\n                    );\n\n                    if (field.options?.length) {\n                      return (\n                        <SingleSelect\n                          // className={b(\"rule-row-field\", { select: true })}\n                          label={placeholder}\n                          defaultValue={value ? { value, label: value } : null}\n                          options={options?.map((option) => ({\n                            value: option,\n                            label: option,\n                          }))}\n                          disabled={!isEditable}\n                          onSingleChange={(e) => {\n                            const value = e?.value || \"\";\n                            handleValues(value, rowIndex, fieldIndex);\n                          }}\n                          key={String(Math.random()).substr(2, 12)}\n                        />\n                      );\n                    }\n\n                    if (isTime) {\n                      return (\n                        <input\n                          key={String(Math.random()).substr(2, 12)}\n                          type=\"time\"\n                          disabled={!isEditable}\n                          style={{\n                            backgroundColor: 'white',\n                            borderRadius: '4px',\n                            color: `${isEditable? \"black\" : \"rgba(0, 0, 0, 0.38)\"}`,\n                            fontSize: '16px',\n                            padding: '10px',\n                            border: 'none',                    \n                            outline: `1px solid ${isEditable? \"black\" : \"#bdbdbd\"}`,\n                            borderColor: '#333333',\n                          }}\n                          value={value}\n                          onChange={(e) => {\n                            const value = e.currentTarget.value;\n                            handleValues(\n                              value,\n                              rowIndex,\n                              fieldIndex\n                            );\n                          }}\n                          min=\"00:00\"\n                          max=\"23:59\"\n                        />\n                      );\n                    }\n\n                    return (\n                      <TextField\n                        label={placeholder}\n                        name={placeholder}\n                        value={value}\n                        autoComplete=\"off\"\n                        required\n                        disabled={!isEditable}\n                        onChange={(e) => {\n                          const value = e.currentTarget.value;\n\n                          handleValues(\n                            isNum ? validateNumber(value) : value,\n                            rowIndex,\n                            fieldIndex\n                          );\n                        }}\n                        key={uniqueFieldKeyGetter(\"input\").key}\n                      />\n                    );\n                  })}\n                  {isEditable && (\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete user\"\n                      style={{ width: \"56px\" }}\n                      onClick={() => handleRemoveRuleRow(rowIndex)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  )}\n                  {!isEditable && isLastRow && (\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete user\"\n                      style={{ width: \"56px\" }}\n                      onClick={() => handleRulesOpen()}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  )}\n                  <ConfirmationDialog\n                    isOpen={isModalOpen}\n                    title=\"Are you sure?\"\n                    content=\"Do you really want to perform this action?\"\n                    onCancel={handleRulesCancel}\n                    onConfirm={() => {\n                      deleteRulesRequest(rules[ruleIndex]);\n                      handleRulesCancel();\n                    }}\n                  />\n                </div>\n              );\n            })}\n\n            {isEditable && (\n              <div className={b(\"rule-row\")}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleAddRuleRow}\n                >\n                  Add row\n                </Button>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={handleSaveRule}\n                  disabled={isSaveBtnDisabled}\n                >\n                  Save rule\n                </Button>\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst getIsSaveBtnDisabled = (ruleRows: rulesModel[], values: valuesType) => {\n  for (let rowKey = 0; rowKey < ruleRows.length; rowKey += 1) {\n    if (!values[rowKey]) {\n      return true;\n    }\n    const fieldKeysCount = RULES_TYPES_TO_FIELDS[ruleRows[rowKey].type].length;\n    for (let fieldKey = 0; fieldKey < fieldKeysCount; fieldKey += 1) {\n      if (!values[rowKey][fieldKey]) {\n        return true;\n      }\n    }\n  }\n\n  return ruleRows.length === 0;\n};\n","export const validateNumber = (value: string) => {\n  return value\n    .replace(/[^\\d.]*/g, \"\")\n    .replace(/([.])[.]+/g, \"$1\")\n    .replace(/^[^\\d]*(\\d+([.]\\d{0,5})?).*$/g, \"$1\");\n};\n","import b_ from \"b_\";\nimport { useEffect, useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { Effmu } from \"../../@types/common\";\nimport { SelectOption } from \"../../@types/selectsModel\";\nimport { EFFMU } from \"../../constants\";\nimport { getRulesRequest } from \"../../store/Rules\";\nimport { SHORT_NETWORKS } from \"../../store/Select\";\n\nimport { SingleSelect } from \"../SingleSelect\";\nimport { useElementsToggle } from \"../ElementsToggle\";\nimport { LevelBlocks, useLevelBlocks } from \"../LevelBlocks\";\nimport { RulesSectionRules } from \"./__Rules\";\n\nimport \"./index.scss\";\n\ntype KOType = \"Knockout\" | \"Freeze-out\" | \"all\";\ntype StatusType = \"Normal\" | \"Turbo\" | \"SuperTurbo\" | \"all\";\ntype ColorsType = \"blue\" | \"green\" | \"orange\";\nconst KO: KOType[] = [\"Knockout\", \"Freeze-out\", \"all\"];\nconst Status: StatusType[] = [\"Normal\", \"Turbo\", \"SuperTurbo\", \"all\"];\nconst Colors: ColorsType[] = [\"blue\", \"green\", \"orange\"];\nconst ColorsValues = [\n  { value: \"blue\", label: \"Default\" },\n  { value: \"orange\", label: \"Invert\" },\n  { value: \"green\", label: \"Exception\" },\n];\n\nexport const b = b_.with(\"rules-section\");\n\nexport const RulesSection = () => {\n  const { selectedLevel, handleLevelChange } = useLevelBlocks();\n  const { selectedElement: selectedEffmu } = useElementsToggle<Effmu | \"all\">(\n    EFFMU[0]\n  );\n  const { selectedElement: selectedKO, handleElementChange: handleKOChange } =\n    useElementsToggle<KOType>(KO[0]);\n\n  const {\n    selectedElement: selectedStatus,\n    handleElementChange: handleStatusChange,\n  } = useElementsToggle<StatusType>(Status[0]);\n  const {\n    selectedElement: selectedColor,\n    handleElementChange: handleColorChange,\n  } = useElementsToggle<ColorsType>(Colors[0]);\n  const [selectedNetwork, setSelectedNetwork] = useState(\n    SHORT_NETWORKS[0].value\n  );\n  const handleNetworkChange = (option: SelectOption<string>) =>\n    setSelectedNetwork(option.value ?? SHORT_NETWORKS[0].value);\n\n  useEffect(() => {\n    if (selectedLevel !== null) {\n      getRulesRequest({\n        color: selectedColor,\n        level: selectedLevel + selectedEffmu,\n        network: selectedNetwork,\n        status: selectedStatus,\n        KO: selectedKO,\n      });\n    }\n  }, [\n    selectedLevel,\n    selectedColor,\n    selectedEffmu,\n    selectedNetwork,\n    selectedStatus,\n    selectedKO,\n  ]);\n\n  return (\n    <section className={b()}>\n      <Typography variant=\"h5\" gutterBottom>\n        Rules control\n      </Typography>\n      <LevelBlocks\n        selectedLevel={selectedLevel}\n        onLevelChange={handleLevelChange}\n      />\n      {selectedLevel !== null && (\n        <>\n          <div className={b(\"filter\")}>\n            <SingleSelect\n              label=\"Network\"\n              className={b(\"select\")}\n              options={SHORT_NETWORKS}\n              required\n              autoComplete=\"off\"\n              defaultValue={SHORT_NETWORKS[0]}\n              onSingleChange={handleNetworkChange as any}\n            />\n            <SingleSelect\n              label=\"Format\"\n              className={b(\"select\")}\n              options={KO.map((k) => ({ value: k, label: k }))}\n              required\n              autoComplete=\"off\"\n              defaultValue={{ value: selectedKO, label: selectedKO }}\n              onSingleChange={(e) => handleKOChange(e?.value as any)()}\n            />\n            <SingleSelect\n              label=\"Speed\"\n              className={b(\"select\")}\n              options={Status.map((k) => ({ value: k, label: k }))}\n              required\n              autoComplete=\"off\"\n              defaultValue={{ value: selectedStatus, label: selectedStatus }}\n              onSingleChange={(e) => handleStatusChange(e?.value as any)()}\n            />\n            <SingleSelect\n              label=\"Rule\"\n              className={b(\"select\")}\n              options={ColorsValues}\n              required\n              autoComplete=\"off\"\n              defaultValue={{ value: selectedColor, label: selectedColor }}\n              onSingleChange={(e) => handleColorChange(e?.value as any)()}\n            />\n          </div>\n          <RulesSectionRules\n            color={selectedColor}\n            level={selectedLevel + selectedEffmu}\n            network={selectedNetwork}\n            status={selectedStatus}\n            KO={selectedKO}\n          />\n        </>\n      )}\n    </section>\n  );\n};\n","import { createStore } from \"effector\";\n\nexport const $email = createStore<string>(\"\");\n","import { emailModel } from \"../../@types/emailModel\";\nimport { createEffect, createApi } from \"effector\";\nimport api from \"../../api\";\nimport { $email } from \"./state\";\n\nexport const getEmail = createEffect(async () => {\n  const result = await api.get<emailModel>(\"/api/email\");\n\n  return result.email;\n});\n\nexport const postEmail = createEffect(async ({ email }: { email: string }) => {\n  await api.postEmail(email);\n});\n\nexport const { handleChangeEmail } = createApi($email, {\n  handleChangeEmail: (_, email: string) => email,\n});\n\n$email.on(getEmail.doneData, (_, email) => email);\n","import b_ from \"b_\";\nimport { useStore } from \"effector-react\";\nimport { TextField, Button, Typography } from \"@mui/material\";\nimport validator from \"email-validator\";\n\nimport { $email, handleChangeEmail, postEmail } from \"../../store/Email\";\n\nimport \"./index.scss\";\n\nexport const b = b_.with(\"email-section\");\n\nexport const EmailSection = () => {\n  const email = useStore($email);\n\n  return (\n    <section className={b()}>\n      <Typography\n        variant=\"h5\"\n        gutterBottom\n        style={{\n          marginTop: \"10px\",\n        }}\n      >\n        Email control \n      </Typography>\n      <TextField\n        variant=\"outlined\"\n        label=\"Email\"\n        autoComplete=\"off\"\n        style={{ width: \"250px\" }}\n        value={email}\n        onChange={(e) => handleChangeEmail(e.currentTarget.value)}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{\n          display: \"block\",\n          width: \"250px\",\n          marginTop: \"10px\",\n        }}\n        onClick={() => postEmail({ email })}\n        disabled={!validator.validate(email)}\n      >\n        Save\n      </Button>\n    </section>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { FC, useEffect } from \"react\";\n\nimport { AliasesSection } from \"../../components/Admin.AliasesSection\";\nimport {\n  OnPasswordSubmit,\n  PasswordSection,\n  PasswordSectionType,\n} from \"../../components/PasswordSection\";\nimport {\n  $isValidAdminPassword,\n  validateAdminPasswordRequest,\n} from \"../../store/Password\";\nimport { RulesSection } from \"../../components/Admin.RulesSection\";\nimport { EmailSection } from \"../../components/EmailSection\";\nimport { getEmail } from \"../../store/Email\";\n\nexport const AdminPage: FC = () => {\n  const isAdmin = useStore($isValidAdminPassword);\n\n  useEffect(() => {\n    getEmail();\n  }, [isAdmin]);\n\n  const handlePasswordSubmit: OnPasswordSubmit = ({ password }) =>\n    validateAdminPasswordRequest(password);\n\n  if (!isAdmin) {\n    return (\n      <PasswordSection\n        onSubmit={handlePasswordSubmit}\n        type={PasswordSectionType.ADMIN}\n      />\n    );\n  }\n\n  return (\n    <>\n      <EmailSection />\n      <RulesSection />\n      <AliasesSection />\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { useCallback } from \"react\";\nimport cx from \"classnames\";\nimport { $tournamentsSettings } from \"../../../store/Select\";\nimport classes from \"../BaseTable.module.scss\";\n\ninterface TheadProps {\n  setSortedKey: React.Dispatch<React.SetStateAction<string | null>>;\n  sortedKey: string | null;\n  setIsReverse: React.Dispatch<React.SetStateAction<boolean>>;\n  isReverse: boolean;\n}\n\nexport const Thead = ({\n  setSortedKey,\n  sortedKey,\n  setIsReverse,\n  isReverse,\n}: TheadProps) => {\n  const tournamentsSettings = useStore($tournamentsSettings);\n\n  const handleClick = useCallback(\n    (newSortedKey: string) => {\n      if (sortedKey === newSortedKey) {\n        setIsReverse((prev) => !prev);\n      } else {\n        setSortedKey(newSortedKey);\n      }\n    },\n    [sortedKey, setIsReverse, setSortedKey]\n  );\n\n  return (\n    <thead className={classes.thead}>\n      <tr className={classes.tr}>\n        <th\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@date\",\n            [classes.reverse]: isReverse,\n          })}\n          onClick={() => handleClick(\"@date\")}\n        >\n          Start\n          {tournamentsSettings.timezone?.label\n            ? ` (${tournamentsSettings.timezone.label})`\n            : \"\"}\n        </th>\n        <th\n          onClick={() => handleClick(\"@numberLateRegEndDate\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@numberLateRegEndDate\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Late Reg\n        </th>\n        <th\n          onClick={() => handleClick(\"@network\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@network\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Network\n        </th>\n        <th\n          onClick={() => handleClick(\"@name\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@name\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Name\n        </th>\n        <th\n          onClick={() => handleClick(\"@bid\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@bid\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Buy-in\n        </th>\n        <th\n          onClick={() => handleClick(\"@prizepool\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@prizepool\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Prizepool\n        </th>\n        <th\n          onClick={() => handleClick(\"@ability\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@ability\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Ability\n        </th>\n        <th\n          onClick={() => handleClick(\"@duration\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@duration\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Duration\n        </th>\n      </tr>\n    </thead>\n  );\n};\n","import { FC } from \"react\";\n\nimport classes from \"../BaseTable.module.scss\";\n\ntype TbodyProps = {\n  sortedKey: string | null;\n  data: Array<Record<string, any>>;\n  isReverse: boolean;\n};\n\nexport const Tbody: FC<TbodyProps> = ({ data, sortedKey, isReverse }) => {\n  return (\n    <tbody className={classes.tbody}>\n      {data\n        .slice(0)\n        .sort((a, b) => {\n          if (!sortedKey) {\n            return 0;\n          }\n          const dataA = String(a[sortedKey] ?? \"\").toLowerCase();\n          const dataB = String(b[sortedKey] ?? \"\").toLowerCase();\n\n          const numberDataA = Number(dataA);\n          const numberDataB = Number(dataB);\n\n          const isNumberDataA = !isNaN(numberDataA);\n          const isNumberDataB = !isNaN(numberDataB);\n\n          if (isNumberDataA && isNumberDataB) {\n            return isReverse\n              ? numberDataB - numberDataA\n              : numberDataA - numberDataB;\n          }\n          if (dataA < dataB) {\n            return isReverse ? 1 : -1;\n          }\n          if (dataA > dataB) {\n            return isReverse ? -1 : 1;\n          }\n          return 0;\n        })\n        .map((item, index: number) => {\n          return (\n            <tr className={classes.tr} key={index}>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@scheduledStartDate\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@lateRegEndDate\"] ?? \"-\"}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@network\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@name\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@bid\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@prizepool\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@ability\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@duration\"]}\n              </td>\n            </tr>\n          );\n        })}\n    </tbody>\n  );\n};\n","import { FC } from \"react\";\nimport classes from \"./Loader.module.scss\";\n\nexport const Loader: FC = () => {\n  return (\n    <div className={classes.wrapper}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { Thead } from \"./Thead\";\nimport { Tbody } from \"./Tbody/Tbody\";\nimport { Loader } from \"../Loader/Loader\";\n\nimport classes from \"./BaseTable.module.scss\";\n\ntype BaseTableProps = {\n  data?: Array<Record<string, any>>;\n  loading: boolean;\n};\n\nexport const BaseTable: FC<BaseTableProps> = ({ data, loading }) => {\n  const [sortedKey, setSortedKey] = useState<string | null>(\"@date\");\n  const [isReverse, setIsReverse] = useState(false);\n\n  if (loading)\n    return (\n      <section className={classes.section}>\n        <Loader />\n      </section>\n    );\n\n  if (!data?.length)\n    return <section className={classes.nodata}>Nothing found</section>;\n\n  if (!data)\n    return (\n      <section className={classes.nodata}>\n        Select the options you are interested in and click the \"Update\" button\n      </section>\n    );\n\n  return (\n    <section className={classes.section}>\n      <table id=\"grid\" className={classes.table}>\n        <Thead\n          setSortedKey={setSortedKey}\n          sortedKey={sortedKey}\n          setIsReverse={setIsReverse}\n          isReverse={isReverse}\n        />\n        <Tbody data={data} sortedKey={sortedKey} isReverse={isReverse} />\n      </table>\n    </section>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport api from \"../../api\";\nimport { BaseTable } from \"../../components/BaseTable\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\n\nexport const InfoPage: FC = () => {\n  const [result, setResult] = useState<tableCellModel[] | undefined>(undefined);\n\n  useEffect(() => {\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n\n    const fetchData = async () => {\n      const data = await api.get<tableCellModel[]>(\"/api/info\", params);\n\n      setResult(data);\n    };\n\n    fetchData();\n  }, []);\n\n  return <BaseTable data={result as any} loading={!result} />;\n};\n","import { nanoid } from \"nanoid\";\nimport { useCallback } from \"react\";\nimport { useUnmount } from \"react-use\";\n\nexport type IntervalWorkerHandler = () => void;\nexport type IntervalWorkerId = string;\nexport type IntervalWorkerTimeout = number;\n\nconst handlers: Record<IntervalWorkerId, IntervalWorkerHandler> = {};\n\nconst createIntervalWorker = () => {\n  const blob = new Blob([\n    `let intervalById = {};\n        onmessage = function ({data: { name, timeout, id }}) {\n            switch (name) {\n                case 'setInterval':\n                    intervalById[id] = setInterval(function () {\n                        postMessage({ id });\n                    }, timeout);\n                    break;\n                case 'clearInterval':\n                    if (intervalById.hasOwnProperty(id)) {\n                        clearInterval(intervalById[id]);\n                        delete intervalById[id];\n                    }\n                    break;\n            }\n        };\n    `,\n  ]);\n\n  const workerScript = URL.createObjectURL(blob);\n\n  const worker = new Worker(workerScript);\n\n  worker.onmessage = ({ data: { id } }) => {\n    if (id in handlers) {\n      handlers[id]();\n    }\n  };\n\n  return worker;\n};\n\nconst worker = createIntervalWorker();\n\nexport const useIntervalWorker = () => {\n  const setIntervalWorker = useCallback(\n    (handler: IntervalWorkerHandler, timeout: IntervalWorkerTimeout) => {\n      if (!worker) {\n        return;\n      }\n\n      const id = nanoid();\n      handlers[id] = handler;\n      worker.postMessage({\n        name: \"setInterval\",\n        timeout,\n        id,\n      });\n\n      return id;\n    },\n    []\n  );\n\n  const clearIntervalWorker = useCallback((id: IntervalWorkerId) => {\n    if (!worker) {\n      return;\n    }\n    delete handlers[id];\n    worker.postMessage({\n      name: \"clearInterval\",\n      id,\n    });\n  }, []);\n\n  const clearAllIntervals = useCallback(() => {\n    Object.keys(handlers).forEach((id) => {\n      clearIntervalWorker(id);\n    });\n  }, [clearIntervalWorker]);\n\n  useUnmount(clearAllIntervals);\n\n  return { setIntervalWorker, clearIntervalWorker };\n};\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\ninterface NumberInputProps {\n  value: number;\n  onChange: (value: number) => void;\n  label?: string;\n  className?: string;\n  max?: number;\n}\n\nexport const NumberInput = ({\n  value,\n  onChange,\n  label,\n  className,\n  max = 10000,\n}: NumberInputProps) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = parseInt(event.target.value, 10);\n\n    if (!isNaN(newValue) && newValue >= 0 && newValue <= max) {\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <TextField\n      type=\"number\"\n      className={className}\n      label={label?.toUpperCase()}\n      value={value}\n      onChange={handleChange}\n      inputProps={{ min: 0, max }}\n      autoComplete=\"off\"\n    />\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { AutocompleteProps } from \"@mui/material/Autocomplete\";\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props\n  extends Omit<AutocompleteProps<Option, true, false, false>, \"renderInput\"> {\n  label: string;\n  value: Option[];\n  options: Option[];\n  onMultiChange: (v: Option[]) => {};\n}\n\nexport const MultiSelect: React.FC<Props> = ({\n  label,\n  value = [],\n  options,\n  onMultiChange,\n  ...props\n}) => {\n  const handleChange = (_: React.ChangeEvent<{}>, value: Option[]) => {\n    onMultiChange(value);\n  };\n\n  return (\n    <div>\n      <Autocomplete\n        multiple\n        options={options}\n        getOptionLabel={(option) => option.label}\n        filterSelectedOptions\n        value={value ?? []}\n        onChange={handleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            label={label}\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n        )}\n        {...props}\n      />\n    </div>\n  );\n};\n","import { ChangeEvent } from \"react\";\nimport {\n  Checkbox as MuiCheckbox,\n  FormControlLabel,\n  CheckboxProps as MuiCheckboxProps,\n} from \"@mui/material\";\n\ntype CheckboxProps = {\n  selected: boolean;\n  onChange: (selected: boolean) => void;\n  label?: string;\n} & Omit<MuiCheckboxProps, \"checked\" | \"onChange\">;\n\nexport const Checkbox = ({\n  selected,\n  onChange,\n  label,\n  ...rest\n}: CheckboxProps) => {\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={\n        <MuiCheckbox checked={selected} onChange={handleOnChange} {...rest} />\n      }\n      label={label}\n    />\n  );\n};\n","import { createStore } from \"effector\";\n\nexport interface StoreModel {\n  ability1: any;\n}\n\nexport const DEFAULT_STORE: StoreModel = {\n  ability1: {},\n};\n\nexport const $store = createStore<StoreModel>(DEFAULT_STORE);\n","import { createDomain } from \"effector\";\n\nimport api from \"../../api\";\n\nimport { $store, StoreModel } from \"./state\";\n\nconst storeDomain = createDomain();\n\nexport const getStoreRequest = storeDomain.createEffect(async () => {\n  const ability1 = await api.get<StoreModel[\"ability1\"]>(\"/api/store/ability1\");\n\n  return { ability1 };\n});\n\n$store.on(getStoreRequest.doneData, (_, store) => store);\n","\nexport const getDate = (date:any) => {\n    return new Date(date)\n      .toLocaleString(\"en-EN\", {\n        hour12: false,\n        day: \"numeric\",\n        month: \"short\",\n        hour: \"numeric\",\n        timeZone: 'UTC',\n        minute: \"numeric\",\n      })\n      .replace(\", 24\", \", 00\");\n  };\n  \n  ","export const getTimeBySec = (timestamp:any) => {\n    let hours = Math.floor(timestamp / 60 / 60);\n    let minutes = Math.floor(timestamp / 60) - hours * 60;\n    let seconds = timestamp % 60;\n  \n    return [\n      hours.toString().padStart(2, \"0\"),\n      minutes.toString().padStart(2, \"0\"),\n      seconds.toString().padStart(2, \"0\"),\n    ].join(\":\");\n  };","import { getNetwork } from \"./getNetwork\";\nimport { tableCellModel } from \"./../@types/tableCellModel\";\n\nexport const isSat = (tournament: tableCellModel) => {\n  const name = tournament[\"@name\"]?.toLowerCase();\n  const network = getNetwork(tournament[\"@network\"]);\n  let sat = !!tournament[\"@flags\"]?.includes(\"SAT\");\n\n  if (!sat && name) {\n    if (network === \"GGNetwork\") {\n      sat =\n        name.includes(\" seats\") ||\n        name.includes(\"seats \") ||\n        name.includes(\" seat\") ||\n        name.includes(\"seat \") ||\n        name.includes(\" qualifier\") ||\n        name.includes(\"qualifier \") ||\n        name.includes(\" step\") ||\n        name.includes(\"step \") ||\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \");\n    } else if (network === \"Winamax.fr\") {\n      sat =\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \") ||\n        name.includes(\"satellite\") ||\n        name.includes(\"qualif\") ||\n        name.includes(\"last chance\") ||\n        name.includes(\"hit&run\");\n    } else if (network === \"WPN\") {\n      sat =\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \") ||\n        name.includes(\"satellite\") ||\n        name.includes(\"seat\") ||\n        name.includes(\" qualifier\") ||\n        name.includes(\"qualifier \");\n    } else if (network === \"iPoker\") {\n      sat =\n        name.includes(\" seats\") ||\n        name.includes(\"seats \") ||\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \") ||\n        name.includes(\" x \");\n    }\n  }\n\n  return !!sat;\n};\n","import { tableCellModel } from \"../@types/tableCellModel\";\n\nexport const isSuperTurbo = (tournament:tableCellModel) => {\n    const name = (tournament[\"@name\"] ?? \"\").toLowerCase();\n    const superturbo = tournament[\"@flags\"]?.includes(\"ST\") || name?.includes(\"hyper\");\n  \n    return superturbo;\n  };","import { isSat } from './isSat';\nimport { isSuperTurbo } from './isSuperTurbo';\nimport { tableCellModel } from \"../@types/tableCellModel\";\nimport { getNetwork } from \"./getNetwork\";\n\nexport const isTurbo = (tournament:tableCellModel) => {\n    let flags = tournament[\"@flags\"];\n    const name = (tournament[\"@name\"] ?? \"\").toLowerCase();\n    const network = getNetwork(tournament[\"@network\"]);\n    const superturbo = isSuperTurbo(tournament);\n    const sat = isSat(tournament);\n    if ((sat && flags) || flags?.includes(\"SAT\")) flags = flags.replace(\"SAT\", \"\");\n  \n    const turbo =\n      (flags?.includes(\"T\") ||\n        name?.includes(\"turbo\") ||\n        (network === \"PokerStars\" && name?.includes(\"hot\"))) &&\n      !superturbo;\n  \n    return turbo;\n  };","import { tableCellModel } from \"../@types/tableCellModel\";\n\n\nexport const isNormal = (tournament:tableCellModel) => {\n    const name = (tournament[\"@name\"] ?? \"\").toLowerCase();\n  \n    return !!(tournament[\"@flags\"]?.includes(\"B\") || name?.includes(\"bounty\"));\n  };\n  ","import { createStore } from \"effector\";\n\nexport const $filterContent = createStore<any>(null);\n","import { createEffect } from \"effector\";\n\nimport { $filterContent } from \"./state\";\n\nimport api from \"../../api\";\n\nexport const fetchFilterContent = createEffect(async () => {\n  const result = await api.get(\"api/filter\");\n\n  try {\n    // @ts-ignore\n    const { filter } = new Function(\n      // @ts-ignore\n      result.replace(\n        // @ts-ignore\n        \"module.exports = filter_1;\",\n        // @ts-ignore\n        \"return { filter: filter_1};\"\n        // @ts-ignore\n      )\n      // @ts-ignore\n    )();\n\n    return filter.filter;\n  } catch (error) {}\n});\n\n$filterContent.on(fetchFilterContent.doneData, (_, data) => data);\n","\n\n\nexport const dateToTimeString = (ms: number): string => {\n  const date = new Date(ms);\n  const hours = date.getUTCHours().toString().padStart(2, \"0\");\n  const minutes = date.getUTCMinutes().toString().padStart(2, \"0\");\n  return `${hours}:${minutes}`;\n}","\n\n\nexport const timeStringToMilliseconds = (timeString: string): number => {\n  const [hours, minutes] = timeString.split(\":\").map(Number);\n  return (hours * 60 + minutes) * 60 * 1000;\n}","import { createStore } from \"effector\";\n\nimport { getDate } from \"./../../helpers/getDate\";\nimport { getWeekday } from \"./../../helpers/getWeekday\";\nimport { getTimeBySec } from \"./../../helpers/getTimeBySec\";\nimport { isSat } from \"./../../helpers/isSat\";\nimport { isRebuy } from \"./../../helpers/isRebuy\";\nimport { getStatus } from \"./../../helpers/getStatus\";\nimport { isSuperTurbo } from \"./../../helpers/isSuperTurbo\";\nimport { isTurbo } from \"./../../helpers/isTurbo\";\nimport { isNormal } from \"./../../helpers/isNormal\";\nimport { getTimeByMS } from \"./../../helpers/getTimeByMS\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\nimport { $tournamentsSettings } from \"../Select\";\n\nimport { getNetwork } from \"./../../helpers/getNetwork\";\nimport { $config } from \"../Config\";\nimport { $filterContent } from \"../Filter\";\nimport { $store } from \"../Store\";\nimport { dateToTimeString } from \"../../helpers/dateToTimeString\";\nimport { timeStringToMilliseconds } from \"../../helpers/timeStringToMilliseconds\";\nimport { millisecondsToTimeString } from \"../../helpers/millisecondsToTimeString\";\n\nexport const $tableState = createStore<tableCellModel[] | null | undefined>(\n  null\n);\n\nexport const $filtredTableState = $tableState.map((tournaments) => {\n  if (!tournaments) {\n    return [];\n  }\n\n  const config = $config.getState();\n  const filter = $filterContent.getState();\n  const { ability1 } = $store.getState();\n\n  const {\n    moneyStart,\n    moneyEnd,\n    KO: isKOQ,\n    turbo: isTurboQ,\n    superTurbo: isSTurboQ,\n    freezout: isFreezoutQ,\n    normal: isNormalQ,\n    prizepoolStart,\n    prizepoolEnd,\n  } = $tournamentsSettings.getState();\n\n  const { networks, timezone } = config ?? {};\n\n  // сортировка по времени старта турнира\n  tournaments = tournaments.sort(\n    (a, b) =>\n      Number(a[\"@scheduledStartDate\"] ?? 0) -\n      Number(b[\"@scheduledStartDate\"] ?? 0)\n  );\n\n  // мапим все данные о турнирах\n  tournaments = tournaments.map((tournament) => {\n    const network = getNetwork(tournament[\"@network\"]);\n    const { level: networksLevel = 1 } = networks?.[network] ?? {};\n    const level = networksLevel + \"A\";\n    const name = tournament[\"@name\"]?.toLowerCase();\n    const stake = Number(tournament[\"@stake\"] ?? 0);\n    const rake = Number(tournament[\"@rake\"] ?? 0);\n    const bid = (stake + rake).toFixed(2);\n    const isStartDate = tournament[\"@scheduledStartDate\"] ?? 0;\n    const isRegDate = tournament[\"@lateRegEndDate\"] ?? 0;\n    const startDate = Number(isStartDate) * 1000 + Number(timezone);\n    const regDate = Number(isRegDate) * 1000 + Number(timezone);\n    const time = getTimeByMS(Number(`${isStartDate}000`));\n    const bounty = isNormal(tournament);\n    const turbo = isTurbo(tournament);\n    const superturbo = isSuperTurbo(tournament);\n    const status = getStatus(tournament);\n    const rebuy = isRebuy(tournament);\n\n    const info = ability1?.[network]?.[time]?.[bid]?.[name];\n    const ability = info?.[\"@avability\"];\n\n    const duration = info?.[\"@duration\"]\n      ? Math.round(info?.[\"@duration\"])\n      : null;\n    const sat = isSat(tournament);\n\n    //Фикс гарантии для WPN и 888Poker и Chiko\n    if (network === \"WPN\" || network === \"888Poker\" || network === \"Chico\") {\n      const $ = tournament[\"@name\"].split(\"$\");\n      if ($.length > 1) {\n        if (network === \"Chico\" && !sat) {\n          tournament[\"@guarantee\"] = $[2]\n            ?.split(\" \")?.[0]\n            ?.replace(\",\", \"\")\n            .replace(\".5K\", \"500\")\n            .replace(\"K\", \"000\")\n            .replace(\"M\", \"000000\")\n            .replace(\".\", \"\");\n        } else if ((network === \"WPN\" && !sat) || network === \"888Poker\") {\n          tournament[\"@guarantee\"] = $[1]\n            .split(\" \")[0]\n            .replace(\")\", \"\")\n            .replace(\",\", \"\");\n        }\n      }\n    }\n\n    const prizepool = Math.round(\n      Math.max(\n        Number(tournament[\"@guarantee\"] ?? 0),\n        Number(tournament[\"@prizePool\"] ?? 0),\n        (Number(tournament[\"@entrants\"] ?? 0) +\n          Number(tournament[\"@reEntries\"] ?? 0)) *\n          Number(tournament[\"@stake\"] ?? 0),\n        (Number(tournament[\"@totalEntrants\"] ?? 0) +\n          Number(tournament[\"@reEntries\"] ?? 0)) *\n          Number(tournament[\"@stake\"] ?? 0)\n      )\n    );\n\n    const pp = prizepool >= 0 ? prizepool : \"-\";\n    return {\n      ...tournament,\n      \"@date\": isStartDate,\n      \"@bid\": bid,\n      \"@realBid\": bid,\n      \"@turbo\": !!turbo,\n      \"@rebuy\": !!rebuy,\n      \"@od\": !!tournament[\"@flags\"]?.includes(\"OD\"),\n      \"@bounty\": !!bounty,\n      \"@sat\": !!sat,\n      \"@sng\": !!tournament[\"@gameClass\"]?.includes(\"sng\"),\n      \"@scheduled\": !!tournament[\"@gameClass\"]?.includes(\"scheduled\"),\n      \"@NL\": !!(tournament[\"@structure\"] === \"NL\"),\n      \"@PL\": !!(tournament[\"@structure\"] === \"PL\"),\n      \"@PNL\": !!(tournament[\"@structure\"] === \"PNL\"),\n      \"@FL\": !!(tournament[\"@structure\"] === \"FL\"),\n      \"@ML\": !!(tournament[\"@structure\"] === \"ML\"),\n      \"@H\": !!(tournament[\"@game\"] === \"H\"),\n      \"@H6\": !!(tournament[\"@game\"] === \"H6\"),\n      \"@O\": !!(tournament[\"@game\"] === \"O\"),\n      \"@OHL\": !!(tournament[\"@game\"] === \"OHL\"),\n      \"@deepstack\": !!tournament[\"@flags\"]?.includes(\"D\"),\n      \"@superturbo\": !!superturbo,\n      \"@prizepool\": pp,\n      \"@network\": network,\n      \"@ability\": ability ? ability : \"-\",\n      \"@duration\": duration ? getTimeBySec(duration) : \"-\",\n      \"@getWeekday\": isStartDate ? getWeekday(Number(isStartDate) * 1000) : \"-\",\n      \"@scheduledStartDate\": isStartDate ? getDate(startDate) : \"-\",\n      \"@lateRegEndDate\": isRegDate ? getDate(regDate) : \"-\",\n      \"@numberLateRegEndDate\": regDate,\n      \"@timezone\": timezone,\n      \"@status\": status,\n      \"@level\": level,\n      \"@usdBid\": Number(bid),\n      \"@usdPrizepool\": Number(pp),\n      \"@msStartForRule\": isStartDate? timeStringToMilliseconds(dateToTimeString(Number(isStartDate) * 1000)) : \"-\",\n      \"@msLateForRule\": isRegDate?  timeStringToMilliseconds(dateToTimeString(Number(isRegDate) * 1000)) : \"-\",\n    };\n  });\n\n  // фильтр по параметрам\n  tournaments = tournaments.filter((tournament) => {\n    const bounty = tournament[\"@bounty\"];\n    const turbo = tournament[\"@turbo\"];\n    const superturbo = tournament[\"@superturbo\"];\n    const prizepool = tournament[\"@usdPrizepool\"];\n\n    return (\n      Number(tournament[\"@usdBid\"]) >= Number(moneyStart) &&\n      Number(tournament[\"@usdBid\"]) <= Number(moneyEnd) &&\n      ((isKOQ !== false && isNormalQ !== false\n        ? bounty && !turbo && !superturbo\n        : false) ||\n        (isKOQ !== false && isTurboQ !== false ? bounty && turbo : false) ||\n        (isKOQ !== false && isSTurboQ !== false\n          ? bounty && superturbo\n          : false) ||\n        (isFreezoutQ !== false && isNormalQ !== false\n          ? !bounty && !turbo && !superturbo\n          : false) ||\n        (isFreezoutQ !== false && isTurboQ !== false\n          ? !bounty && turbo\n          : false) ||\n        (isFreezoutQ !== false && isSTurboQ !== false\n          ? !bounty && superturbo\n          : false)) &&\n      (prizepool !== \"-\"\n        ? Number(prizepoolStart) <= Number(prizepool) &&\n          Number(prizepool) <= Number(prizepoolEnd)\n        : true)\n    );\n  });\n\n  // определение цвета турнира\n  tournaments = tournaments.map((tournament) => {\n    const level = tournament[\"@level\"];\n\n    console.log(filter)\n\n    const { valid } = filter(level, tournament, true);\n\n    function calculateDifficultyPercent(difficulty: number) {\n      if (difficulty === 69) {\n        return 0;\n      } else if (difficulty > 69 && difficulty <= 89) {\n        return -((difficulty - 69) / 20) * 100;\n      } else if (difficulty >= 55 && difficulty < 69) {\n        return ((69 - difficulty) / 14) * 100;\n      } else if (difficulty > 89) {\n        return -100;\n      } else if (difficulty < 55) {\n        return 100;\n      }\n    }\n\n    return {\n      ...tournament,\n      valid,\n      percent: calculateDifficultyPercent(Number(tournament[\"@ability\"])),\n    };\n  });\n  const d = new Set();\n  // фильтр по времени \"от\"-\"до\"\n  tournaments = tournaments.filter((item) => {\n    d.add(item[\"@game\"]);\n\n    const startDate = item?.[\"@scheduledStartDate\"] ?? \"-\";\n    const { dateStart, dateEnd } = $tournamentsSettings.getState();\n\n    if (!item.valid) return false;\n    if (startDate === \"-\") return true;\n\n    const res = startDate?.split(\", \")?.[1]?.split(\":\")?.[0];\n    const r = dateEnd === \"00\" && dateStart <= dateEnd ? \"24\" : dateEnd;\n\n    return dateStart <= dateEnd\n      ? dateStart <= res && res <= r\n      : !(dateStart > res && res > dateEnd);\n  });\n\n  return tournaments;\n});\n","export const getTimeByMS = (timestamp:any) => {\n    return new Date(timestamp)\n      .toLocaleString(\"en-EN\", {\n        hour12: false,\n        hour: \"numeric\",\n        minute: \"numeric\",\n        timeZone: 'UTC'\n      })\n      .replace(\"24\", \"00\");\n  };\n  ","import { isSuperTurbo } from './isSuperTurbo';\nimport { isTurbo } from './isTurbo';\nimport { isNormal } from './isNormal';\nimport { tableCellModel } from './../@types/tableCellModel';\n\n\nexport const getStatus = (tournament:tableCellModel) => {\n  const KO = isNormal(tournament);\n  const turbo = isTurbo(tournament);\n  const superturbo = isSuperTurbo(tournament);\n  const status = `${KO ? \"KO\" : \"!KO\"}${superturbo ? \"SuperTurbo\" : turbo ? \"Turbo\" : \"Normal\"}`;\n  return status;\n};\n","import { tableCellModel } from './../@types/tableCellModel';\n\nexport const isRebuy = (tournament:tableCellModel) => {\n  return tournament[\"@flags\"]?.includes(\"R\") && !tournament[\"@flags\"]?.includes(\"RH\");\n};\n","\nexport const getWeekday = (date:any) => {\n    return new Date(date).toLocaleString(\"en-EN\", {\n      weekday: \"long\",\n      timeZone: 'UTC'\n    });\n  };\n  ","import { getStoreRequest } from './../Store/init';\nimport { createEffect } from \"effector\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\nimport { $tournamentsSettings } from \"../Select\";\nimport { ErrNot } from \"../../components/NotificationService\";\nimport { $tableState } from \"./state\";\n\nimport api from \"../../api\";\n\nexport const fetchUserReposFx = createEffect(async () => {\n  const tournamentsSettings = $tournamentsSettings.getState();\n  await getStoreRequest();\n\n  try {\n    return await api.get<tableCellModel[]>(\"/api/tour\", {\n      network: tournamentsSettings.network?.map((elem) => elem.value).join(\",\"),\n      time: tournamentsSettings.time?.value ?? 0,\n    });\n  } catch (error: any) {\n    ErrNot(error?.response?.data?.message || \"The request failed. Try again.\");\n  }\n});\n\n$tableState.on(fetchUserReposFx.doneData, (_, data) => data);\n","import { useState } from \"react\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Divider,\n  Grid,\n  Box,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  $tournamentsSettings,\n  editableTournamentsSettings,\n  NETWORKS,\n  TIMERANGE,\n} from \"../../store/Select\";\nimport { useStore } from \"effector-react\";\nimport { NumberInput } from \"../NumberInput\";\n\nimport classes from \"./BaseSettings.module.scss\";\nimport { MultiSelect } from \"../MultiSelect\";\nimport { SingleSelect } from \"../SingleSelect\";\nimport { Checkbox } from \"../Checkbox\";\nimport { fetchUserReposFx } from \"../../store/Table\";\nimport { fetchFilterContent } from \"../../store/Filter\";\n\nconst SettingsWidgetWrapper = styled(Box)(({ theme }) => ({\n  position: \"fixed\",\n  bottom: theme.spacing(2),\n  right: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: \"50%\",\n  boxShadow: theme.shadows[3],\n  padding: theme.spacing(0.5),\n}));\n\nconst UpdateWidgetWrapper = styled(Box)(({ theme }) => ({\n  position: \"fixed\",\n  bottom: theme.spacing(2),\n  right: theme.spacing(9),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: \"50%\",\n  boxShadow: theme.shadows[3],\n  padding: theme.spacing(0.5),\n}));\n\nexport const BaseSettings = () => {\n  const [isOpen, setIsOpen] = useState(true);\n  const tournamentsSettings = useStore($tournamentsSettings);\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n    fetchFilterContent().then(() => fetchUserReposFx());\n  };\n\n  return (\n    <>\n      <SettingsWidgetWrapper>\n        <IconButton onClick={handleOpen} style={{ transform: \"scale(1.4)\" }}>\n          <SettingsIcon />\n        </IconButton>\n        <Dialog open={isOpen} onClose={handleClose}>\n          <DialogTitle className={classes.title}>Settings</DialogTitle>\n          <DialogContent>\n            <div className={classes.menu}>\n              <MultiSelect\n                value={tournamentsSettings.network as any}\n                label=\"Networks\"\n                options={NETWORKS}\n                onMultiChange={editableTournamentsSettings.handleChangeNetwork}\n              />\n              <SingleSelect\n                defaultValue={tournamentsSettings.time as any}\n                label=\"Time interval\"\n                options={TIMERANGE}\n                onSingleChange={editableTournamentsSettings.handleChangeTime}\n              />\n              <div className={classes.inputWrapper}>\n                <NumberInput\n                  label=\"bid FROM\"\n                  value={tournamentsSettings.moneyStart}\n                  onChange={editableTournamentsSettings.handleChangeMoneyStart}\n                  max={tournamentsSettings.moneyEnd}\n                  className={classes.inputBuyIn}\n                />\n                <NumberInput\n                  label=\"bid To\"\n                  value={tournamentsSettings.moneyEnd}\n                  onChange={editableTournamentsSettings.handleChangeMoneyEnd}\n                  className={classes.inputBuyIn}\n                />\n              </div>\n              <div className={classes.inputWrapper}>\n                <NumberInput\n                  label=\"prizepool FROM\"\n                  value={tournamentsSettings.prizepoolStart}\n                  onChange={\n                    editableTournamentsSettings.handleChangePrizepoolStart\n                  }\n                  max={tournamentsSettings.prizepoolEnd}\n                  className={classes.inputBuyIn}\n                />\n                <NumberInput\n                  label=\"prizepool TO\"\n                  value={tournamentsSettings.prizepoolEnd}\n                  onChange={\n                    editableTournamentsSettings.handleChangePrizepoolEnd\n                  }\n                  max={100000000}\n                  className={classes.inputBuyIn}\n                />\n              </div>\n              <div className={classes.checkboxWrapper}>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <Checkbox\n                      label=\"Knockout\"\n                      selected={tournamentsSettings.KO}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeKo(\n                          !tournamentsSettings.KO\n                        )\n                      }\n                    />\n                    <Checkbox\n                      label=\"Vanila\"\n                      selected={tournamentsSettings.freezout}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeFreezout(\n                          !tournamentsSettings.freezout\n                        )\n                      }\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Checkbox\n                      label=\"Normal\"\n                      selected={tournamentsSettings.normal}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeNormal(\n                          !tournamentsSettings.normal\n                        )\n                      }\n                    />\n                    <Checkbox\n                      label=\"Turbo\"\n                      selected={tournamentsSettings.turbo}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeTurbo(\n                          !tournamentsSettings.turbo\n                        )\n                      }\n                    />\n                    <Checkbox\n                      label=\"SuperTurbo\"\n                      selected={tournamentsSettings.superTurbo}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeSuperTurbo(\n                          !tournamentsSettings.superTurbo\n                        )\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"outlined\" size=\"large\" onClick={handleClose}>\n              Apply\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </SettingsWidgetWrapper>\n      <UpdateWidgetWrapper>\n        <IconButton onClick={handleClose} style={{ transform: \"scale(1.4)\" }}>\n          <RefreshIcon />\n        </IconButton>\n      </UpdateWidgetWrapper>\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport cx from \"classnames\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n} from \"@material-ui/core\";\nimport { green, pink } from \"@material-ui/core/colors\";\n\nimport { $filtredTableState, fetchUserReposFx } from \"../../store/Table\";\nimport { useState } from \"react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: green,\n    secondary: pink,\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      \"& .MuiTable-root\": {\n        minWidth: 650,\n      },\n    },\n    pagination: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginBottom: \"15px\",\n    },\n    head: {\n      background: \"#303F9F\",\n      fontWeight: 500,\n    },\n    tableContainer: {\n      marginBottom: theme.spacing(2),\n      boxShadow: \"0px 1px 0px 0px rgba(34, 60, 80, 0.2)\",\n      maxHeight: \"calc(100vh - 83px)\",\n    },\n    tableRow: {\n      \"&:hover\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    loaderContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"calc(100vh - 140px)\",\n    },\n    cell: {\n      maxWidth: \"300px\",\n      textAlign: \"center\",\n    },\n    cellHead: {\n      color: 'white'\n    },\n  })\n);\n\nexport const BaseTournaments = () => {\n  const loading = useStore(fetchUserReposFx.pending);\n  const classes = useStyles();\n\n  const tournaments = useStore($filtredTableState);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(20);\n\n  const handleChangePage = (\n    _: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const rows = tournaments.slice(\n    page * rowsPerPage,\n    page * rowsPerPage + rowsPerPage\n  );\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <TableContainer component={Paper} className={classes.tableContainer}>\n          <Table>\n            <TableHead className={classes.head}>\n              <TableRow>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  ID\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Start Reg\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Late Reg\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Name\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Network\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Buy-in\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Prizepool\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Ability\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Duration\n                </TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {!loading &&\n                rows.map((item) => (\n                  <TableRow\n                    key={item[\"@id\"]}\n                    className={classes.tableRow}\n                    style={{\n                      background:\n                        typeof item[\"percent\"] !== \"undefined\"\n                          ? item[\"percent\"] >= 0\n                            ? `rgba(140, 255, 0, ${Math.max(\n                                0.15,\n                                Number(item.percent) / 100\n                              )})` //green\n                            : `rgba(255, 0, 0, ${Math.max(\n                                0.2,\n                                Math.abs(item.percent) / 100\n                              )})` //red\n                          : \"\",\n                    }}\n                  >\n                    <TableCell className={classes.cell}>\n                      {item[\"@id\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@scheduledStartDate\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@lateRegEndDate\"] ?? \"-\"}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@name\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@network\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@bid\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@prizepool\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@ability\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@duration\"]}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {loading && (\n          <div className={classes.loaderContainer}>\n            <CircularProgress />\n          </div>\n        )}\n        {!rows.length && !loading && (\n          <div className={classes.loaderContainer}>The list is empty</div>\n        )}\n        <TablePagination\n          rowsPerPageOptions={[20, 50, 100]}\n          component=\"div\"\n          count={tournaments.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          className={classes.pagination}\n        />\n      </ThemeProvider>\n    </>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Link } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2),\n    marginTop: \"auto\",\n  },\n}));\n\nexport const BaseFooter = () => {\n  const classes = useStyles();\n\n  return <></>;\n};\n","import { useStore } from \"effector-react\";\n\nimport { $config, getConfigRequest } from \"../../store/Config\";\nimport {\n  OnPasswordSubmit,\n  PasswordSection,\n} from \"../../components/PasswordSection\";\nimport { useIntervalWorker } from \"../../hooks/useIntervalWorker\";\nimport { BaseSettings } from \"../../components/BaseSettings\";\nimport { BaseTournaments } from \"../../components/BaseTournaments\";\nimport { BaseFooter } from \"../../components/BaseFooter\";\n\nexport const MainPage = () => {\n  const config = useStore($config);\n\n  const { setIntervalWorker } = useIntervalWorker();\n\n  // выкидываем из сессии каждые 12 часов\n  setIntervalWorker(() => {\n    window.location.reload();\n  }, 12 * 60 * 60 * 1000);\n\n  const handlePasswordSubmit: OnPasswordSubmit = ({ password, login }) =>\n    getConfigRequest({ alias: login, password });\n\n  if (!config) {\n    return (\n      <>\n        <PasswordSection onSubmit={handlePasswordSubmit} />\n        <BaseFooter />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div>\n        <BaseSettings />\n        <BaseTournaments />\n      </div>\n    </>\n  );\n};\n","import { FC } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { styled } from \"@mui/system\";\n\nimport { AdminPage } from \"./AdminPage\";\nimport { InfoPage } from \"./InfoPage\";\nimport { MainPage } from \"./MainPage\";\n\nconst CustomToastContainer = styled(ToastContainer)({\n  \"& .Toastify__toast--error\": {\n    color: \"black\",\n    borderRadius: \"8px\",\n  },\n  \"& .Toastify__close-button\": {\n    color: \"black\",\n  },\n});\n\nexport const Pages: FC = () => {\n  return (\n    <>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/admin\" component={() => <AdminPage />} />\n            <Route path=\"/info\" component={() => <InfoPage />} />\n            <Route path=\"/*\" component={() => <MainPage />} />\n          </Switch>\n          <CustomToastContainer hideProgressBar={true} />\n        </BrowserRouter>\n        <div id=\"modal-root\" />\n    </>\n  );\n};\n","import { createStore } from \"effector\";\nimport { settingsModel } from \"./../../@types/settingsModel\";\n\nexport const $settings = createStore<settingsModel | null>(null);\n","import { createEffect } from \"effector\";\nimport api from \"../../api\";\nimport { $settings } from \"./state\";\n\nexport const fetchSettings = createEffect(async () => {\n  const result = await api.get<any>(\"/api/settings\");\n  return result;\n});\n\nexport const postFetchSettings = createEffect(async (json: any) => {\n  const result = await api.addSettings(json);\n  return result;\n});\n\n$settings.on(fetchSettings.doneData, (_, settings) => settings);\n","import { createStore } from \"effector\";\n\nimport { UpdateModel } from \"../../@types/updateModel\";\n\nexport const $update = createStore<UpdateModel>({\n  isUpdated: false,\n  timestamp: 0,\n});\n","import { createEffect } from \"effector\";\n\nimport api from \"../../api\";\nimport { $update } from \"./state\";\nimport { UpdateModel } from \"../../@types/updateModel\";\n\nexport const getUpdate = createEffect(\n  async () => await api.get<UpdateModel>(\"/api/update\")\n);\n\nexport const postUpdate = createEffect(\n  async () => {\n    await api.postUpdate();\n  }\n);\n\n$update.on(getUpdate.doneData, (_, update) => update);\n","import ReactDOM from \"react-dom\";\nimport { Pages } from \"./pages/index\";\nimport \"./assets/style/index.scss\";\nimport \"./store/init\";\n\nprocess.env.TZ = \"UTC\";\n\nReactDOM.render(<Pages />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BaseSettings_title__2YC8v\",\"inputWrapper\":\"BaseSettings_inputWrapper__3tJI2\",\"inputBuyIn\":\"BaseSettings_inputBuyIn__3_kH5\",\"menu\":\"BaseSettings_menu__2oBk9\",\"checkboxWrapper\":\"BaseSettings_checkboxWrapper__Sbg20\"};"],"sourceRoot":""}