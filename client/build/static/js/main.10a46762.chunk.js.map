{"version":3,"sources":["components/NotificationService/NotificationService.module.scss","components/Loader/Loader.module.scss","components/BaseTable/BaseTable.module.scss","store/Alias/state.ts","api/ConfigApi.ts","api/index.ts","store/Alias/init.ts","constants.ts","components/LevelBlocks/index.tsx","components/NotificationService/NotificationService.tsx","store/Select/state.ts","store/Select/init.ts","store/Config/state.ts","store/Config/init.ts","store/Password/state.ts","components/PasswordSection/PasswordSection.tsx","store/Password/init.ts","components/SingleSelect/SingleSelect.tsx","components/Admin.AliasesSection/__Form/index.tsx","components/ConfirmationDialog/index.tsx","components/UserSettings/__Table/index.tsx","components/UserSettings/__Info/index.tsx","components/UserSettings/index.tsx","components/Admin.AliasesSection/__List/index.tsx","components/Admin.AliasesSection/index.tsx","store/Rules/state.ts","store/Rules/init.ts","components/BaseButton/BaseButton.tsx","components/ElementsToggle/index.tsx","helpers/getUniqueElemKeyGetter.tsx","components/Admin.RulesSection/constants.ts","components/Admin.RulesSection/__Rules/index.tsx","helpers/validateNumber.ts","components/Admin.RulesSection/index.tsx","store/Email/state.ts","store/Email/init.ts","components/EmailSection/index.tsx","pages/AdminPage/AdminPage.tsx","components/BaseTable/Thead/Thead.tsx","components/BaseTable/Tbody/Tbody.tsx","components/Loader/Loader.tsx","components/BaseTable/BaseTable.tsx","pages/InfoPage/InfoPage.tsx","hooks/useIntervalWorker.ts","components/NumberInput/NumberInput.tsx","components/MultiSelect/MultiSelect.tsx","components/Checkbox/Checkbox.tsx","store/Store/state.ts","store/Store/init.ts","helpers/getDate.ts","helpers/getTimeBySec.ts","helpers/isSat.ts","helpers/isSuperTurbo.ts","helpers/isTurbo.ts","helpers/isNormal.ts","store/Filter/state.ts","store/Filter/init.ts","helpers/dateToTimeString.ts","helpers/timeStringToMilliseconds.ts","store/Table/state.ts","helpers/getTimeByMS.ts","helpers/getStatus.ts","helpers/isRebuy.ts","helpers/getWeekday.ts","store/Table/init.ts","components/BaseSettings/BaseSettings.tsx","components/BaseTournaments/BaseTournaments.tsx","components/BaseFooter/BaseFooter.tsx","pages/MainPage/MainPage.tsx","pages/index.tsx","store/Settings/state.ts","store/Settings/init.ts","store/Update/state.ts","store/Update/init.ts","index.tsx","components/BaseSettings/BaseSettings.module.scss"],"names":["module","exports","$aliases","createStore","ConfigApi","config","password","axios","post","alias","patch","data","delete","Api","url","params","fullUrl","URLSearchParams","toString","settings","email","rules","api","aliasesEvents","createApi","addAlias","store","deleteAlias","filter","a","getAliasesRequest","createEffect","level","get","on","doneData","aliases","LEVELS_ARRAY","Array","fill","map","_","index","EFFMU","b","b_","with","LevelBlocks","selectedLevel","onLevelChange","className","ButtonGroup","variant","concat","Button","size","onClick","color","undefined","useLevelBlocks","React","useState","setSelectedLevel","handleLevelChange","ErrNot","content","toast","error","classes","NotificationContent","TIMEZONES","value","label","TIMERANGE","NETWORKS","SHORT_NETWORKS","DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS","network","time","timezone","timezoneTable","prizepoolStart","prizepoolEnd","moneyStart","moneyEnd","KO","turbo","superTurbo","freezout","normal","dateStart","dateEnd","$tournamentsSettings","editableTournamentsSettings","handleChangeNetwork","setting","handleChangeTime","handleChangeTimezonetable","handleChangeMoneyStart","handleChangeMoneyEnd","handleChangePrizepoolStart","handleChangePrizepoolEnd","handleChangeDateStart","String","Number","handleChangeDateEnd","handleChangeKo","handleChangeTurbo","handleChangeSuperTurbo","handleChangeFreezout","handleChangeNormal","handleChangeTimezone","$config","DEFAULT_EDITABLE_CONFIG","networks","$editableConfig","configDomain","createDomain","clearConfig","getConfigRequest","postConfigRequest","patchConfigRequest","deleteConfigRequest","deleteConfig","onCreateEffect","effect","fail","watch","response","message","editableConfigEvents","setConfig","setConfig2","handleChangeEffmu","effmu","handleChangeLevel","handleAllLevelsChange","Object","keys","reduce","acc","handleChangePassword","handleTimezoneChange","handleChangeEffmuAll","PasswordSectionType","$password","localStorage","getItem","$isValidAdminPassword","v","setItem","setIsValidAdminPassword","validateAdminPasswordRequest","checkAdminPassword","result","theme","createTheme","useStyles","makeStyles","createStyles","formControl","minWidth","SingleSelect","options","onSingleChange","defaultValue","props","selectedOption","setSelectedOption","ThemeProvider","FormControl","required","InputLabel","Select","onChange","event","option","find","target","MenuItem","form","display","flexDirection","alignItems","background","gap","maxWidth","marginTop","select","width","button","minHeight","AliasesSectionForm","setAlias","setPassword","setTZone","adminPassword","useStore","handleSubmit","e","preventDefault","onSubmit","Typography","gutterBottom","TextField","name","currentTarget","autoComplete","fullWidth","type","ConfirmationDialog","isOpen","title","onConfirm","onCancel","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","levelsOptions","tableCell","border","UserSettingsTable","renderContent","useMemo","defaultOption","TableRow","TableCell","TableContainer","component","Paper","Table","TableHead","TableBody","UserSettingsInfo","isAdminPage","defaultTimezoneOption","useEffect","handlePasswordChange","UserSettings","editableConfig","listItem","borderRadius","maxHeight","flexBasis","cursor","borderColor","list","flexWrap","justifyContent","AliasesSectionList","selectedUser","setSelectedUser","selectedAlias","setSelectedAlias","isModalOpen","setIsModalOpen","classes2","selectedConfig","newPassword","handleCloseModal","handleAliasClick","handleAliasDelete","handleDialogClose","Box","sx","textAlign","length","List","user","ListItem","ListItemText","primary","IconButton","stopPropagation","handleOpenModal","paper","style","Close","AliasesSection","isAllLevels","root","height","padding","boxShadow","input","marginBottom","PasswordSection","login","setLogin","isAlias","ALIAS","handleChangeLogin","useCallback","$rules","getRulesRequest","postRulesRequest","postRules","deleteRulesRequest","rule","deleteRules","patchRules","useElementsToggle","defaultElem","selectedElement","setElement","handleElementChange","elem","getUniqueElemKeyGetter","getter","prefix","key","RULES_TYPES_TO_FIELDS","BidEqual","placeholder","BidFrom","BidTo","PrizepoolEqual","PrizepoolFrom","PrizepoolTo","AbilityEqual","AbilityFrom","AbilityTo","EntrantsEqual","EntrantsFrom","EntrantsTo","StartRegEqual","StartRegFrom","StartRegTo","LateRegEqual","LateRegFrom","LateRegTo","Name","NotName","StartDay","Flags","Class","Structure","Game","RULES_TYPES","RulesSectionRules","savedRules","types","setTypes","values","setValues","handleAddRuleRow","editableRule","ruleIndex","i","handleRulesCancel","handleSaveRule","handleTypeChange","rowIndex","newTypes","newValues","handleValues","fieldIndex","status","uniqueElemKeyGetter","ruleRows","isComposite","isEditable","isSaveBtnDisabled","getIsSaveBtnDisabled","uniqueRuleKeyGetter","composite","ruleRow","ruleType","ruleValues","fields","isLastRow","uniqueRowKeyGetter","disabled","field","elementType","isTime","isNum","uniqueFieldKeyGetter","Math","random","substr","backgroundColor","fontSize","outline","min","max","replace","validateNumber","splice","handleRemoveRuleRow","rowKey","fieldKeysCount","fieldKey","Status","Colors","ColorsValues","RulesSection","selectedEffmu","selectedKO","handleKOChange","selectedStatus","handleStatusChange","selectedColor","handleColorChange","selectedNetwork","setSelectedNetwork","k","$email","getEmail","postEmail","handleChangeEmail","EmailSection","validator","validate","AdminPage","isAdmin","ADMIN","Thead","setSortedKey","sortedKey","setIsReverse","isReverse","tournamentsSettings","handleClick","newSortedKey","prev","thead","tr","cx","th","active","reverse","Tbody","tbody","slice","sort","dataA","toLowerCase","dataB","numberDataA","numberDataB","isNumberDataA","isNaN","isNumberDataB","item","td","Loader","wrapper","BaseTable","loading","section","id","table","nodata","InfoPage","setResult","urlSearchParams","window","location","search","fromEntries","entries","fetchData","handlers","worker","blob","Blob","workerScript","URL","createObjectURL","Worker","onmessage","createIntervalWorker","NumberInput","toUpperCase","newValue","parseInt","inputProps","MultiSelect","onMultiChange","Autocomplete","multiple","getOptionLabel","filterSelectedOptions","renderInput","Checkbox","selected","rest","FormControlLabel","control","checked","$store","ability1","getStoreRequest","getDate","date","Date","toLocaleString","hour12","day","month","hour","timeZone","minute","getTimeBySec","timestamp","hours","floor","minutes","seconds","padStart","join","isSat","tournament","sat","includes","isSuperTurbo","isTurbo","flags","superturbo","isNormal","$filterContent","fetchFilterContent","Function","dateToTimeString","ms","getUTCHours","getUTCMinutes","timeStringToMilliseconds","timeString","split","$tableState","$filtredTableState","tournaments","getState","isKOQ","isTurboQ","isSTurboQ","isFreezoutQ","isNormalQ","bid","toFixed","isStartDate","isRegDate","startDate","regDate","bounty","getStatus","rebuy","isRebuy","info","ability","duration","round","$","prizepool","pp","weekday","difficulty","valid","percent","d","Set","add","res","fetchUserReposFx","SettingsWidgetWrapper","styled","position","bottom","spacing","right","palette","shadows","UpdateWidgetWrapper","BaseSettings","setIsOpen","handleClose","then","transform","menu","inputWrapper","inputBuyIn","checkboxWrapper","Grid","container","xs","Divider","green","secondary","pink","pagination","head","fontWeight","tableContainer","tableRow","action","hover","loaderContainer","cell","cellHead","BaseTournaments","pending","page","setPage","rowsPerPage","setRowsPerPage","rows","abs","CircularProgress","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","footer","BaseFooter","align","Link","href","MainPage","setIntervalWorker","handler","timeout","nanoid","postMessage","clearIntervalWorker","clearAllIntervals","forEach","useUnmount","useIntervalWorker","reload","CustomToastContainer","ToastContainer","Pages","path","hideProgressBar","$settings","fetchSettings","json","addSettings","$update","isUpdated","getUpdate","postUpdate","update","process","TZ","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10a46762.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationSuccess\":\"NotificationService_NotificationSuccess__kWrEi\",\"icon\":\"NotificationService_icon__3lsCE\",\"NotificationError\":\"NotificationService_NotificationError__VPWSw\",\"NotificationContent\":\"NotificationService_NotificationContent__f35iv\",\"NotificationIcon\":\"NotificationService_NotificationIcon__gYYu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3hasz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"BaseTable_table__3Jlir\",\"thead\":\"BaseTable_thead__3LLdP\",\"tbody\":\"BaseTable_tbody__C8YI5\",\"tr\":\"BaseTable_tr__2Gh8U\",\"nodata\":\"BaseTable_nodata__oEkzP\",\"th\":\"BaseTable_th__1eiTa\",\"active\":\"BaseTable_active__17yZ7\",\"reverse\":\"BaseTable_reverse__2P3D9\",\"td\":\"BaseTable_td__2tYFY\",\"section\":\"BaseTable_section__24GGI\",\"select\":\"BaseTable_select__3Uud_\",\"effmu\":\"BaseTable_effmu__6LEo8\"};","import { createStore } from \"effector\";\n\nexport const $aliases = createStore<string[]>([]);\n","import { defaultConfigModel } from \"../@types/configModel\";\nimport axios from \"axios\";\nimport { ConfigModel } from \"../@types/configModel\";\n\nclass ConfigApi {\n  async postConfigRequest(config: defaultConfigModel, password: string) {\n    return await axios.post(`/api/config`, { config, password });\n  }\n  async patchConfigRequest(alias: string, config: ConfigModel, password: string) {\n    return await axios.patch(`/api/config`, { config, alias, password });\n  }\n  async deleteConfig(data: { alias: string; password: string }) {\n    return await axios.delete(`/api/config`, { data });\n  }\n}\nexport default ConfigApi;\n","import { rulesModel } from \"./../@types/rulesModel\";\nimport axios from \"axios\";\nimport ConfigApi from \"./ConfigApi\";\nclass Api extends ConfigApi {\n  async get<T>(url: string, params?: any) {\n    let fullUrl: string = url;\n    if (params) {\n      fullUrl += \"?\" + new URLSearchParams(params).toString();\n    }\n    return (await axios(fullUrl))?.data as T;\n  }\n  async addSettings(settings: any) {\n    return await axios.post(`/api/settings`, settings);\n  }\n  async addAlias(settings: any) {\n    return await axios.post(`/api/aliases`, settings);\n  }\n  async checkAdminPassword(password: string) {\n    return await axios.post(`/api/password/admin`, { password });\n  }\n  async postEmail(email: string) {\n    return await axios.post(`/api/email`, { email });\n  }\n  async postRules(rules: rulesModel[]) {\n    return await axios.post(`/api/rules`, { rules });\n  }\n  async patchRules(rules: rulesModel[]) {\n    return await axios.patch(`/api/rules`, { rules });\n  }\n  async deleteRules(data: rulesModel[]) {\n    return await axios.delete(`/api/rules`, { data });\n  }\n  async postUpdate() {\n    return await axios.post(`/api/update`);\n  }\n}\n\nconst api = new Api();\n\nexport default api;\n","import { createEffect, createApi } from \"effector\";\nimport { $aliases } from \"./state\";\nimport api from \"../../api\";\n\nexport const aliasesEvents = createApi($aliases, {\n  addAlias: (store, alias: string) => [...store, alias],\n  deleteAlias: (store, alias: string) => store.filter((a) => a !== alias),\n});\n\nexport const getAliasesRequest = createEffect(async (level?: number) => {\n  return await api.get<string[]>(\"/api/aliases\", { level });\n});\n\n$aliases.on(getAliasesRequest.doneData, (store, aliases) => aliases);\n","import { Effmu } from \"./@types/common\";\n\nexport const LEVELS_COUNT = 10;\nexport const LEVELS_ARRAY = new Array(LEVELS_COUNT).fill(null).map((_, index) => index + 1);\n\nexport const EFFMU: Effmu[] = [\"A\"];\n","import b_ from \"b_\";\nimport React, { FC } from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\n\nimport { LEVELS_ARRAY } from \"../../constants\";\n\ninterface Props {\n  selectedLevel: number | null;\n  onLevelChange: (level: number) => () => void;\n}\n\nexport const ALL_LEVELS = -1;\n\nconst b = b_.with(\"level-blocks\");\n\nexport const LevelBlocks: FC<Props> = ({ selectedLevel, onLevelChange }) => (\n  <div className={b()}>\n    <ButtonGroup variant=\"contained\" aria-label=\"Number Selector\">\n      {LEVELS_ARRAY.concat([-1]).map((level) => (\n        <Button\n          key={level}\n          size=\"large\"\n          onClick={onLevelChange(level)}\n          variant={selectedLevel === level ? \"outlined\" : \"contained\"}\n          color={selectedLevel === level ? \"primary\" : undefined}\n        >\n          {level < 0 ? \"all\" : level}\n        </Button>\n      ))}\n    </ButtonGroup>\n  </div>\n);\n\nexport const useLevelBlocks = () => {\n  const [selectedLevel, setSelectedLevel] = React.useState<number | null>(null);\n\n  const handleLevelChange = (level: number) => () => {\n    if (level === selectedLevel) {\n      setSelectedLevel(null);\n    } else {\n      setSelectedLevel(level);\n    }\n  };\n\n  return { selectedLevel, handleLevelChange };\n};\n","import { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport classes from \"./NotificationService.module.scss\";\n\n//Уведомление о успехе\nexport function SucNot(content: string) {\n  toast.success(<div className={classes.NotificationContent}>{content}</div>);\n}\n\n//Уведомление о ошибке\nexport function ErrNot(content: string) {\n  toast.error(<div className={classes.NotificationContent}>{content}</div>);\n}\n","import { tournamentsSettingsProps } from \"./types\";\nimport { createStore } from \"effector\";\n\nexport const TIMEZONES = [\n  { value: \"-43200000\", label: \"UTC-12 (IDLW)\" },\n  { value: \"-39600000\", label: \"UTC-11 (NT)\" },\n  { value: \"-36000000\", label: \"UTC-10 (HST)\" },\n  { value: \"-34200000\", label: \"UTC-9:30 (ACST)\" },\n  { value: \"-32400000\", label: \"UTC-9 (AKT)\" },\n  { value: \"-28800000\", label: \"UTC-8 (PT)\" },\n  { value: \"-25200000\", label: \"UTC-7 (MT)\" },\n  { value: \"-21600000\", label: \"UTC-6 (CT)\" },\n  { value: \"-18000000\", label: \"UTC-5 (ET)\" },\n  { value: \"-16200000\", label: \"UTC-4:30 (VET)\" },\n  { value: \"-14400000\", label: \"UTC-4 (AT)\" },\n  { value: \"-12600000\", label: \"UTC-3:30 (NST)\" },\n  { value: \"-10800000\", label: \"UTC-3 (BRT)\" },\n  { value: \"-7200000\", label: \"UTC-2 (AT)\" },\n  { value: \"-3600000\", label: \"UTC-1 (AZOT)\" },\n  { value: \"0\", label: \"UTC\" },\n  { value: \"1800000\", label: \"UTC+0:30 (NFT)\" },\n  { value: \"3600000\", label: \"UTC+1 (CET)\" },\n  { value: \"5400000\", label: \"UTC+1:30 (MET)\" },\n  { value: \"7200000\", label: \"UTC+2 (EET)\" },\n  { value: \"10800000\", label: \"UTC+3 (MSK)\" },\n  { value: \"12600000\", label: \"UTC+3:30 (IRST)\" },\n  { value: \"14400000\", label: \"UTC+4 (AZT)\" },\n  { value: \"16200000\", label: \"UTC+4:30 (AFT)\" },\n  { value: \"18000000\", label: \"UTC+5 (PKT)\" },\n  { value: \"20700000\", label: \"UTC+5:45 (NPT)\" },\n  { value: \"21600000\", label: \"UTC+6 (ALMT)\" },\n  { value: \"23400000\", label: \"UTC+6:30 (MST)\" },\n  { value: \"25200000\", label: \"UTC+7 (ICT)\" },\n  { value: \"27000000\", label: \"UTC+7:30 (MMT)\" },\n  { value: \"28800000\", label: \"UTC+8 (AWST)\" },\n  { value: \"31500000\", label: \"UTC+8:45 (CIT)\" },\n  { value: \"32400000\", label: \"UTC+9 (JST)\" },\n  { value: \"34200000\", label: \"UTC+9:30 (ACDT)\" },\n  { value: \"36000000\", label: \"UTC+10 (AEST)\" },\n  { value: \"37800000\", label: \"UTC+10:30 (AEDT)\" },\n  { value: \"39600000\", label: \"UTC+11 (AET)\" },\n  { value: \"43200000\", label: \"UTC+12 (NZST)\" },\n];\n\nexport const TIMERANGE = [\n  { value: \"600\", label: \"<10 minutes\" },\n  { value: \"3600\", label: \"<1 hour\" },\n  { value: \"10800\", label: \"<3 hours\" },\n  { value: \"21600\", label: \"<6 hours\" },\n  { value: \"43200\", label: \"<12 hours\" },\n  { value: \"86400\", label: \"<24 hours\" },\n  { value: \"604800\", label: \"<1 week\" },\n];\n\nexport const EFFMU = [{ value: \"A\", label: \"A\" }];\n\nexport const NETWORKS = [\n  { value: \"PokerStars\", label: \"PokerStars\" },\n  { value: \"PokerStars(FR-ES-PT)\", label: \"PokerStars(FR-ES-PT)\" },\n  { value: \"PartyPoker\", label: \"PartyPoker\" },\n  { value: \"888Poker\", label: \"888Poker\" },\n  { value: \"Chico\", label: \"Chico\" },\n  { value: \"WPN\", label: \"WPN\" },\n  { value: \"iPoker\", label: \"iPoker\" },\n  { value: \"GGNetwork\", label: \"GGNetwork\" },\n  { value: \"Winamax.fr\", label: \"Winamax.fr\" },\n];\n\nexport const SHORT_NETWORKS = [\n  { value: \"PokerStars\", label: \"PokerStars\" },\n  { value: \"PokerStars(FR-ES-PT)\", label: \"PokerStars(FR-ES-PT)\" },\n  { value: \"PartyPoker\", label: \"PartyPoker\" },\n  { value: \"888Poker\", label: \"888Poker\" },\n  { value: \"Chico\", label: \"Chico\" },\n  { value: \"WPN\", label: \"WPN\" },\n  { value: \"iPoker\", label: \"iPoker\" },\n  { value: \"GGNetwork\", label: \"GGNetwork\" },\n  { value: \"Winamax.fr\", label: \"Winamax.fr\" },\n  { value: \"all\", label: \"all\" },\n];\n\nexport const DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS: tournamentsSettingsProps = {\n  network: null,\n  time: TIMERANGE[2],\n  timezone: TIMEZONES[15],\n  timezoneTable: null,\n  prizepoolStart: 0,\n  prizepoolEnd: 10000000,\n  moneyStart: 0,\n  moneyEnd: 10000,\n  KO: true,\n  turbo: true,\n  superTurbo: true,\n  freezout: true,\n  normal: true,\n  dateStart: \"00\",\n  dateEnd: \"24\",\n};\n\nexport const $tournamentsSettings = createStore<tournamentsSettingsProps>(\n  DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS\n);\n","import { createApi } from \"effector\";\nimport { MultiValue, SingleValue } from \"react-select\";\nimport { selectModel } from \"../../@types/selectsModel\";\nimport { $tournamentsSettings, TIMEZONES } from \"./state\";\n\nexport const editableTournamentsSettings = createApi($tournamentsSettings, {\n  handleChangeNetwork: (setting, network: MultiValue<selectModel>) => ({\n    ...setting,\n    network,\n  }),\n  handleChangeTime: (setting, time: SingleValue<selectModel>) => ({\n    ...setting,\n    time,\n  }),\n  handleChangeTimezonetable: (setting, timezoneTable: string) => ({\n    ...setting,\n    timezoneTable,\n  }),\n  handleChangeMoneyStart: (setting, moneyStart: number) => ({\n    ...setting,\n    moneyStart,\n  }),\n  handleChangeMoneyEnd: (setting, moneyEnd: number) => ({\n    ...setting,\n    moneyEnd,\n  }),\n  handleChangePrizepoolStart: (setting, prizepoolStart: number) => ({\n    ...setting,\n    prizepoolStart,\n  }),\n  handleChangePrizepoolEnd: (setting, prizepoolEnd: number) => ({\n    ...setting,\n    prizepoolEnd,\n  }),\n  handleChangeDateStart: (setting, dateStart: string) => ({\n    ...setting,\n    dateStart: String(Number(dateStart) >= 24 ? 24 : dateStart),\n  }),\n  handleChangeDateEnd: (setting, dateEnd: string) => ({\n    ...setting,\n    dateEnd: String(Number(dateEnd) >= 24 ? 24 : dateEnd),\n  }),\n  handleChangeKo: (setting, KO: boolean) => ({\n    ...setting,\n    KO,\n  }),\n  handleChangeTurbo: (setting, turbo: boolean) => ({\n    ...setting,\n    turbo,\n  }),\n  handleChangeSuperTurbo: (setting, superTurbo: boolean) => ({\n    ...setting,\n    superTurbo,\n  }),\n  handleChangeFreezout: (setting, freezout: boolean) => ({\n    ...setting,\n    freezout,\n  }),\n  handleChangeNormal: (setting, normal: boolean) => ({\n    ...setting,\n    normal,\n  }),\n  handleChangeTimezone: (setting, timezone: typeof TIMEZONES[15]) => ({\n    ...setting,\n    timezone,\n  }),\n});\n","import { createStore } from \"effector\";\n\nimport { TIMEZONES } from \"../Select\";\nimport { ConfigModel } from \"./../../@types/configModel\";\n\nexport const $config = createStore<ConfigModel | null>(null);\n\nexport const DEFAULT_EDITABLE_CONFIG: ConfigModel = {\n  alias: \"\",\n  networks: {},\n  password: \"\",\n  timezone: TIMEZONES[15].value,\n};\nexport const $editableConfig = createStore<ConfigModel>(\n  DEFAULT_EDITABLE_CONFIG\n);\n","import { createDomain, createApi } from \"effector\";\n\nimport { ConfigModel, defaultConfigModel } from \"../../@types/configModel\";\nimport api from \"../../api\";\nimport { ErrNot } from \"../../components/NotificationService\";\n\nimport { $config, $editableConfig, DEFAULT_EDITABLE_CONFIG } from \"./state\";\nimport { Effmu, Level, Network } from \"../../@types/common\";\n\nconst DEFAULT_ERROR_MESSAGE =\n  \"An error has occurred. You are denied access to the service.\";\n\nconst configDomain = createDomain();\n\nexport const { clearConfig } = createApi($config, {\n  clearConfig: () => null,\n});\n\nexport const getConfigRequest = configDomain.createEffect(\n  async (params: { alias: string; password: string }) => {\n    return await api.get<ConfigModel>(\"/api/config\", params);\n  }\n);\n\nexport const postConfigRequest = configDomain.createEffect(\n  async (params: { config: defaultConfigModel; password: string }) => {\n    const { config, password } = params;\n\n    await api.postConfigRequest(config, password);\n  }\n);\n\nexport const patchConfigRequest = configDomain.createEffect(\n  async ({\n    alias,\n    config,\n    password,\n  }: {\n    alias: string;\n    config: ConfigModel;\n    password: string;\n  }) => {\n    await api.patchConfigRequest(alias, config, password);\n    await getConfigRequest({ alias, password: config.password });\n  }\n);\n\nexport const deleteConfigRequest = configDomain.createEffect(\n  async (params: { alias: string; password: string }) => {\n    await api.deleteConfig(params);\n    clearConfig();\n  }\n);\n\nconfigDomain.onCreateEffect((effect) => {\n  effect.fail.watch(({ error }: { error: any }) =>\n    ErrNot(error?.response?.data?.message || DEFAULT_ERROR_MESSAGE)\n  );\n});\n\nexport const editableConfigEvents = createApi($editableConfig, {\n  setConfig: (_, config: ConfigModel) => config,\n  setConfig2: (_, config: ConfigModel) => config,\n  clearConfig: (_) => DEFAULT_EDITABLE_CONFIG,\n  handleChangeEffmu: (\n    config,\n    { network, effmu }: { network: Network; effmu: Effmu }\n  ) => ({\n    ...config,\n    networks: {\n      ...config.networks,\n      [network]: { ...config.networks[network], effmu },\n    },\n  }),\n  handleChangeLevel: (\n    config,\n    { network, level }: { network: Network; level: Level }\n  ) => ({\n    ...config,\n    networks: {\n      ...config.networks,\n      [network]: { ...config.networks[network], level },\n    },\n  }),\n  handleAllLevelsChange: (config, level: Level) => {\n    const { networks } = config;\n\n    return {\n      ...config,\n      networks: Object.keys(networks).reduce(\n        (acc, network) => ({\n          ...acc,\n          [network]: { level },\n        }),\n        {}\n      ),\n    };\n  },\n  handleChangePassword: (config, password: string) => ({\n    ...config,\n    password,\n  }),\n  handleTimezoneChange: (config, timezone) => ({ ...config, timezone }),\n  handleChangeEffmuAll: (config, effmu) => ({\n    ...config,\n    networks: Object.keys(config.networks).reduce(\n      (acc, network) => ({\n        ...acc,\n        [network]: { ...config.networks[network], effmu },\n      }),\n      {}\n    ),\n  }),\n});\n\n$config.on(getConfigRequest.doneData, (_, config) => config);\n","import { createStore } from \"effector\";\n\nexport const $password = createStore<string>(localStorage.getItem(\"password\") ?? \"\");\n\nexport const $isValidAdminPassword = createStore<boolean>(false);\n","import { useStore } from \"effector-react\";\nimport { FC, useCallback, useState } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { $password, handleChangePassword } from \"../../store/Password\";\n\nimport \"./PasswordSection.scss\";\n\nexport enum PasswordSectionType {\n  ALIAS = \"alias\",\n  ADMIN = \"admin\",\n}\n\nexport type OnPasswordSubmit = ({\n  password,\n  login,\n}: {\n  password: string;\n  login: string;\n}) => void;\n\ninterface Props {\n  onSubmit: OnPasswordSubmit;\n  type?: PasswordSectionType;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"calc(100vh - 60px)\",\n    },\n    form: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: \"20px\",\n      borderRadius: \"10px\",\n      background: \"white\",\n      boxShadow: \"0px 0px 8px 2px rgba(34, 60, 80, 0.2)\",\n    },\n    input: {\n      marginBottom: \"20px\",\n      minWidth: \"300px\",\n    },\n    button: {\n      minHeight: \"50px\",\n      minWidth: \"150px\",\n    },\n  })\n);\n\nexport const PasswordSection: FC<Props> = ({ onSubmit, type }) => {\n  const classes = useStyles();\n  const [login, setLogin] = useState(localStorage.getItem(\"login\") ?? \"\");\n  const password = useStore($password);\n\n  const isAlias = type === PasswordSectionType.ALIAS || !type;\n\n  const handleChangeLogin = useCallback((v: string) => {\n    localStorage.setItem(\"login\", v);\n    setLogin(v);\n  }, []);\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      onSubmit({ password, login });\n    },\n    [onSubmit, password, login]\n  );\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={handleSubmit} className={classes.form}>\n        {isAlias && (\n          <TextField\n            label=\"Alias\"\n            variant=\"outlined\"\n            className={classes.input}\n            autoComplete=\"off\"\n            value={login}\n            onChange={(e) => handleChangeLogin(e.currentTarget.value)}\n          />\n        )}\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          className={classes.input}\n          value={password}\n          onChange={(e) => handleChangePassword(e.currentTarget.value)}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import { createApi, createEffect } from \"effector\";\nimport api from \"../../api\";\nimport { $isValidAdminPassword, $password } from \"./state\";\n\nexport const { handleChangePassword } = createApi($password, {\n  handleChangePassword: (_: string, v: string) => {\n    localStorage.setItem(\"password\", v);\n\n    return v;\n  },\n});\n\nexport const { setIsValidAdminPassword } = createApi($isValidAdminPassword, {\n  setIsValidAdminPassword: (_: boolean, v: boolean) => v,\n});\n\nexport const validateAdminPasswordRequest = createEffect(\n  async (password: string) => {\n    const result = await api.checkAdminPassword(password);\n    setIsValidAdminPassword(!!result.data);\n  }\n);\n","import React, { useState } from \"react\";\nimport { makeStyles, createStyles, ThemeProvider } from \"@mui/styles\";\nimport { createTheme } from \"@mui/material/styles\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select, { SelectChangeEvent, SelectProps } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    formControl: {\n      minWidth: 120,\n    },\n  })\n);\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props extends Omit<SelectProps, \"multiple\"> {\n  label: string;\n  value?: any;\n  options: Option[];\n  defaultValue: Option | null;\n  onSingleChange: (v: Option | null) => void;\n}\n\nexport const SingleSelect: React.FC<Props> = ({\n  label,\n  value,\n  options,\n  onSingleChange,\n  defaultValue,\n  ...props\n}) => {\n  const classes = useStyles();\n  const [selectedOption, setSelectedOption] = useState<Option | null>(\n    defaultValue\n  );\n\n  const handleChange = (event: SelectChangeEvent<unknown>) => {\n    const option = options.find(\n      (option) => option.value === event.target.value\n    );\n    setSelectedOption(option || null);\n    onSingleChange(option || null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <FormControl variant=\"outlined\" className={classes.formControl} required>\n        <InputLabel>{label}</InputLabel>\n        <Select\n          value={value >= 0 ? value : selectedOption?.value}\n          onChange={handleChange}\n          label={label}\n          {...props}\n        >\n          {options.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </ThemeProvider>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { FC, FormEvent, useState } from \"react\";\nimport { TextField, Button, Typography } from \"@mui/material\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nimport { getAliasesRequest } from \"../../../store/Alias\";\nimport { postConfigRequest } from \"../../../store/Config\";\nimport { $password } from \"../../../store/Password\";\nimport { TIMEZONES } from \"../../../store/Select\";\n\nimport { SingleSelect } from \"../../SingleSelect\";\n\ninterface AliasesSectionFormProps {\n  selectedLevel: number | null;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    form: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      background: \"white\",\n      gap: \"10px\",\n      maxWidth: \"300px\",\n      marginTop: \"15px\",\n    },\n    select: {\n      width: \"300px\",\n    },\n    button: {\n      minHeight: \"50px\",\n      width: \"300px\",\n    },\n  })\n);\n\nexport const AliasesSectionForm: FC<AliasesSectionFormProps> = ({\n  selectedLevel,\n}) => {\n  const classes = useStyles();\n\n  const [alias, setAlias] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [timezone, setTZone] = useState<string>(\"0\");\n  const adminPassword = useStore($password);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    await postConfigRequest({\n      config: {\n        alias,\n        level: selectedLevel ?? 0,\n        password,\n        timezone,\n      },\n      password: adminPassword,\n    });\n\n    await getAliasesRequest(selectedLevel ?? 0);\n\n    setAlias(\"\");\n    setPassword(\"\");\n    setTZone(TIMEZONES[15].value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={classes.form}>\n      <Typography variant=\"h6\" gutterBottom>\n        Creating a new account\n      </Typography>\n      <TextField\n        label=\"Alias\"\n        name=\"login\"\n        value={alias}\n        onChange={(e) => setAlias(e.currentTarget.value)}\n        autoComplete=\"off\"\n        required\n        fullWidth\n      />\n      <TextField\n        label=\"Password\"\n        name=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.currentTarget.value)}\n        autoComplete=\"off\"\n        required\n        fullWidth\n      />\n      <SingleSelect\n        className={classes.select}\n        label=\"Timezone\"\n        options={TIMEZONES}\n        defaultValue={TIMEZONES[15]}\n        required\n        fullWidth\n        onSingleChange={(option) => setTZone(option?.value ?? \"0\")}\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Add\n      </Button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n} from \"@mui/material\";\n\ntype ConfirmationDialogProps = {\n  isOpen: boolean;\n  title: string;\n  content: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\n\nexport const ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  isOpen,\n  title,\n  content,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <Dialog open={isOpen} onClose={onCancel}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <Typography>{content}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button onClick={onConfirm}>Confirm</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import b_ from \"b_\";\nimport { FC, useMemo } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Networks } from \"../../../@types/common\";\nimport { SelectOption } from \"../../../@types/selectsModel\";\nimport { LEVELS_ARRAY } from \"../../../constants\";\nimport { editableConfigEvents } from \"../../../store/Config\";\n\nimport { SingleSelect } from \"../../SingleSelect\";\n\ninterface Props {\n  networks: Networks;\n}\n\nconst b = b_.with(\"user-settings-table\");\n\nconst levelsOptions: SelectOption<number>[] = LEVELS_ARRAY.map((level) => ({\n  value: level,\n  label: level,\n}));\n\nconst useStyles = makeStyles({\n  tableCell: {\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n  },\n});\n\nexport const UserSettingsTable: FC<Props> = ({ networks }) => {\n  const classes = useStyles();\n\n  const renderContent = useMemo(\n    () =>\n      Object.keys(networks).map((network) => {\n        const { level } = networks[network];\n\n        const defaultOption = levelsOptions.find(\n          (option) => option.value === level\n        );\n\n        const handleLevelChange = (option: SelectOption<number>) =>\n          editableConfigEvents.handleChangeLevel({\n            network,\n            level: option.value,\n          });\n\n        return (\n          <TableRow key={network}>\n            <TableCell className={classes.tableCell}><b>{network}</b></TableCell>\n            <TableCell className={classes.tableCell}>\n              <SingleSelect\n                label=\"Level\"\n                options={levelsOptions as any}\n                value={defaultOption?.value as any}\n                defaultValue={defaultOption as any}\n                className={b(\"select\")}\n                onSingleChange={handleLevelChange as any}\n              />\n            </TableCell>\n          </TableRow>\n        );\n      }),\n    [networks, classes.tableCell]\n  );\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\" className={classes.tableCell}>\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.tableCell}><b>Network</b></TableCell>\n            <TableCell className={classes.tableCell}><b>Level</b></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{renderContent}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { FC, useEffect } from \"react\";\nimport b_ from \"b_\";\nimport { TextField, Typography } from \"@mui/material\";\n\nimport { SelectOption } from \"../../../@types/selectsModel\";\nimport { ConfigModel } from \"../../../@types/configModel\";\nimport { editableConfigEvents } from \"../../../store/Config\";\nimport { editableTournamentsSettings, TIMEZONES } from \"../../../store/Select\";\n\nimport { LEVELS_ARRAY } from \"../../../constants\";\nimport { SingleSelect } from \"../../SingleSelect\";\n\nconst levelsOptions: SelectOption<number>[] = LEVELS_ARRAY.map((level) => ({\n  value: level,\n  label: level,\n}));\n\ninterface Props {\n  config: ConfigModel;\n  isAdminPage?: boolean;\n}\n\nconst b = b_.with(\"user-settings-info\");\n\nexport const UserSettingsInfo: FC<Props> = ({ config, isAdminPage }) => {\n  const { alias, password, timezone } = config;\n\n  const defaultTimezoneOption =\n    TIMEZONES.find((option) => option.value === timezone) || TIMEZONES[15];\n\n  const handlePasswordChange = (password: string) =>\n    editableConfigEvents.handleChangePassword(password);\n  const handleTimezoneChange = (option: SelectOption<typeof TIMEZONES[15]>) =>\n    editableConfigEvents.handleTimezoneChange(option.value);\n  const handleLevelChange = (option: SelectOption<number>) => {\n    editableConfigEvents.handleAllLevelsChange(option.value as any);\n  };\n\n  useEffect(() => {\n    editableTournamentsSettings.handleChangeTimezone(defaultTimezoneOption);\n  }, [defaultTimezoneOption]);\n\n  return (\n    <div className={b()}>\n      <div className={b(\"header\")}>\n        <div className={b(\"header-conent\")}>\n          <Typography variant=\"h5\">Alias: {alias}</Typography>\n        </div>\n      </div>\n      <div className={b(\"settings\")}>\n        <div className={b(\"settings-wrapper\")}>\n          <div className={b(\"timezones-wrapper\")}>\n            <SingleSelect\n              label=\"Change all levels\"\n              options={levelsOptions as any}\n              defaultValue={null}\n              className={b(\"select\")}\n              onSingleChange={handleLevelChange as any}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={b(\"settings\")}>\n        <div className={b(\"settings-wrapper\")}>\n          <div className={b(\"password-wrapper\")}>\n            <SingleSelect\n              label=\"Timezone\"\n              className={b(\"select\")}\n              options={TIMEZONES}\n              required\n              autoComplete=\"off\"\n              defaultValue={defaultTimezoneOption}\n              onSingleChange={handleTimezoneChange as any}\n            />\n          </div>\n        </div>\n      </div>\n      {isAdminPage && (\n        <div className={b(\"password-wrapper\")}>\n          <TextField\n            label=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => handlePasswordChange(e.currentTarget.value)}\n            autoComplete=\"off\"\n            required\n            fullWidth\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\nimport b_ from \"b_\";\n\nimport { ConfigModel } from \"../../@types/configModel\";\nimport { $editableConfig, editableConfigEvents } from \"../../store/Config\";\n\nimport { UserSettingsTable } from \"./__Table\";\nimport { UserSettingsInfo } from \"./__Info\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  config: ConfigModel;\n}\n\nexport const b = b_.with(\"user-settings\");\n\nexport const UserSettings = ({ config }: Props) => {\n  const editableConfig = useStore($editableConfig);\n  const { alias, networks } = editableConfig;\n\n  React.useEffect(() => {\n    editableConfigEvents.setConfig(config);\n\n    return editableConfigEvents.clearConfig;\n  }, [config]);\n\n  if (!alias) {\n    return null;\n  }\n\n  return (\n    <div className={b()}>\n      <div className={b(\"content\")}>\n        <div className={b(\"content-main-block\")}>\n          <UserSettingsInfo config={editableConfig} isAdminPage />\n        </div>\n        <UserSettingsTable networks={networks} />\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport b_ from \"b_\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Close } from \"@mui/icons-material\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Dialog,\n  Box,\n  Typography,\n  IconButton,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useStore } from \"effector-react\";\n\nimport { $password } from \"../../../store/Password\";\nimport {\n  $aliases,\n  aliasesEvents,\n  getAliasesRequest,\n} from \"../../../store/Alias\";\nimport {\n  $config,\n  $editableConfig,\n  deleteConfigRequest,\n  getConfigRequest,\n  patchConfigRequest,\n} from \"../../../store/Config\";\nimport { ConfirmationDialog } from \"../../ConfirmationDialog\";\nimport { UserSettings } from \"../../UserSettings\";\n\nexport const b = b_.with(\"aliases-section\");\n\nconst useStyles = makeStyles(() => ({\n  listItem: {\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n    borderRadius: \"4px\",\n    maxHeight: \"56px\",\n    flexBasis: \"calc(50% - 10px)\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      borderColor: \"black\",\n    },\n  },\n  list: {\n    gap: \"10px\",\n    marginTop: \"9px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nexport const AliasesSectionList = ({\n  selectedLevel,\n}: {\n  selectedLevel: number;\n}) => {\n  const [selectedUser, setSelectedUser] = useState<any>(null);\n  const [selectedAlias, setSelectedAlias] = useState<any>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const classes2 = useStyles();\n\n  const password = useStore($password);\n  const aliases = useStore($aliases);\n  const selectedConfig = useStore($config);\n  const editableConfig = useStore($editableConfig);\n\n  const { alias, networks, password: newPassword, ...props } = editableConfig;\n\n  const handleOpenModal = (user: string) => {\n    setSelectedAlias(user);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleAliasClick = async (alias: string) => {\n    setSelectedUser(alias);\n    await getConfigRequest({ alias, password });\n  };\n\n  const handleAliasDelete = async () => {\n    aliasesEvents.deleteAlias(selectedAlias);\n    await deleteConfigRequest({ alias: selectedAlias, password });\n    handleCloseModal();\n  };\n\n  const handleDialogClose = async () => {\n    setSelectedUser(null);\n    await patchConfigRequest({\n      alias,\n      config: {\n        ...props,\n        networks,\n        password: newPassword,\n        alias,\n      },\n      password,\n    });\n\n    if (selectedLevel === -1) {\n      getAliasesRequest();\n    } else if (selectedLevel !== null) {\n      getAliasesRequest(selectedLevel);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginTop: \"15px\",\n        textAlign: \"center\",\n      }}\n    >\n      {aliases.length > 0 && (\n        <Typography variant=\"h6\" gutterBottom>\n          List of aliases\n        </Typography>\n      )}\n      <List className={classes2.list}>\n        {aliases.map((user) => (\n          <ListItem\n            key={user}\n            onClick={() => handleAliasClick(user)}\n            className={classes2.listItem}\n          >\n            <ListItemText primary={user} />\n            <IconButton\n              color=\"error\"\n              aria-label=\"delete user\"\n              onClick={(e) => {\n                e.stopPropagation();\n                handleOpenModal(user);\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Dialog\n        open={selectedUser !== null}\n        onClose={handleDialogClose}\n        classes={{ paper: b(\"dialog\") }}\n      >\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <IconButton onClick={handleDialogClose}>\n            <Close />\n          </IconButton>\n        </div>\n        {selectedConfig && <UserSettings config={selectedConfig} />}\n      </Dialog>\n      <ConfirmationDialog\n        isOpen={isModalOpen}\n        title=\"Are you sure?\"\n        content=\"Do you really want to perform this action?\"\n        onCancel={handleCloseModal}\n        onConfirm={handleAliasDelete}\n      />\n    </Box>\n  );\n};\n","import b_ from \"b_\";\nimport React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { getAliasesRequest } from \"../../store/Alias\";\nimport { LevelBlocks, ALL_LEVELS, useLevelBlocks } from \"../LevelBlocks\";\nimport { AliasesSectionForm } from \"./__Form\";\n\nimport { AliasesSectionList } from \"./__List\";\n\nimport \"./index.scss\";\n\nexport const b = b_.with(\"aliases-section\");\n\nexport const AliasesSection = () => {\n  const { selectedLevel, handleLevelChange } = useLevelBlocks();\n  const isAllLevels = selectedLevel === ALL_LEVELS;\n\n  React.useEffect(() => {\n    if (isAllLevels) {\n      getAliasesRequest();\n    } else if (selectedLevel !== null) {\n      getAliasesRequest(selectedLevel);\n    }\n  }, [selectedLevel, isAllLevels]);\n\n  return (\n    <section className={b()}>\n      <Typography variant=\"h5\" gutterBottom>\n        Alias control\n      </Typography>\n      <LevelBlocks\n        selectedLevel={selectedLevel}\n        onLevelChange={handleLevelChange}\n      />\n      {selectedLevel !== null && (\n        <div className={b(\"content-wrapper\")}>\n          {!isAllLevels && <AliasesSectionForm selectedLevel={selectedLevel} />}\n          <AliasesSectionList selectedLevel={selectedLevel} />\n        </div>\n      )}\n    </section>\n  );\n};\n","import { rulesModel } from \"./../../@types/rulesModel\";\nimport { createStore } from \"effector\";\n\nexport const $rules = createStore<Array<rulesModel[]> | null>(null);\n","import { rulesModel } from \"../../@types/rulesModel\";\nimport { createDomain } from \"effector\";\n\nimport api from \"../../api\";\nimport { ErrNot } from \"../../components/NotificationService\";\n\nimport { $rules } from \"./state\";\n\nconst DEFAULT_ERROR_MESSAGE = \"An error has occurred. You are denied access to the service.\";\n\nconst configDomain = createDomain();\n\nexport const getRulesRequest = configDomain.createEffect(\n  async (params: { color: string; level: string; network: string; status: string; KO: string }) => {\n    return await api.get<Array<rulesModel[]>>(\"/api/rules\", params);\n  },\n);\n\nexport const postRulesRequest = configDomain.createEffect(async (rules: rulesModel[]) => {\n  await api.postRules(rules);\n  await getRulesRequest(rules[0]);\n});\n\nexport const deleteRulesRequest = configDomain.createEffect(async (rule: rulesModel[]) => {\n  await api.deleteRules(rule);\n  await getRulesRequest(rule[0]);\n});\n\nexport const patchRulesRequest = configDomain.createEffect(\n  async ({ rule }: { rule: rulesModel[] }) => {\n    await api.patchRules(rule);\n    await getRulesRequest(rule[0]);\n  },\n);\n\nconfigDomain.onCreateEffect((effect) => {\n  effect.fail.watch(({ error }: { error: any }) =>\n    ErrNot(error?.response?.data?.message || DEFAULT_ERROR_MESSAGE),\n  );\n});\n\n$rules.on(getRulesRequest.doneData, (_, rules) => rules);\n","import b_ from \"b_\";\nimport cx from \"classnames\";\nimport { CSSProperties, FC } from \"react\";\n\nimport \"./BaseButton.scss\";\n\ninterface BaseButtonProps {\n  onClick: () => void;\n  className?: string;\n  disabled?: boolean;\n  clear?: boolean;\n  red?: boolean;\n  green?: boolean;\n  autoFocus?: boolean;\n  style?: CSSProperties;\n}\n\nconst b = b_.with(\"base-button\");\n\n// todo все пропсы для обычной кнопки, и вписать их в типы как наследование, а не каждый отдельно\nexport const BaseButton: FC<BaseButtonProps> = ({\n  onClick,\n  className,\n  children,\n  disabled,\n  clear,\n  red,\n  green,\n  autoFocus,\n  style,\n}) => {\n  return (\n    <button\n      className={cx(b({ clear, red, green }), className)}\n      onClick={onClick}\n      disabled={disabled}\n      style={style}\n      autoFocus={autoFocus}\n    >\n      {children}\n    </button>\n  );\n};\n","import b_ from \"b_\";\nimport cx from \"classnames\";\nimport { useState } from \"react\";\n\nimport { BaseButton } from \"../BaseButton\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  selectedElement: string;\n  onElementChange: (element: any) => () => void;\n  elements: string[];\n  mix?: string;\n}\n\nconst b = b_.with(\"elements-toggle\");\n\nexport const ElementsToggle = ({ selectedElement, onElementChange, elements, mix }: Props) => (\n  <div className={cx(b(), mix)}>\n    {elements.map((elem) => (\n      <BaseButton\n        className={b(\"button\")}\n        onClick={onElementChange(elem)}\n        clear={elem !== selectedElement}\n        key={elem}\n      >\n        {elem}\n      </BaseButton>\n    ))}\n  </div>\n);\n\n// @ts-ignore ругается на T = \"\", типа T может не быть стрингой (но она extends от нее!!)\nexport function useElementsToggle<T extends string>(defaultElem: T = \"\") {\n  const [selectedElement, setElement] = useState(defaultElem);\n  const handleElementChange = (elem: T) => () => {\n    if (elem !== selectedElement) {\n      setElement(elem);\n    }\n  };\n\n  return { selectedElement, handleElementChange };\n}\n","export const getUniqueElemKeyGetter = (elem: string) => {\n  const getter = (prefix?: string) => getUniqueElemKeyGetter(elem + prefix);\n  getter.key = elem;\n  return getter;\n};\n","import { rulesType } from \"../../@types/rulesModel\";\n\n// если здесь чет меняем то меняем и на сервере\nexport const RULES_TYPES_TO_FIELDS = {\n  BidEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  BidFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  BidTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  PrizepoolEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  PrizepoolFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  PrizepoolTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  AbilityEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  AbilityFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  AbilityTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  EntrantsEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  EntrantsFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  EntrantsTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  StartRegEqual: [\n    {\n      type: \"time\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  StartRegFrom: [\n    {\n      type: \"time\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  StartRegTo: [\n    {\n      type: \"time\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  LateRegEqual: [\n    {\n      type: \"time\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  LateRegFrom: [\n    {\n      type: \"time\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  LateRegTo: [\n    {\n      type: \"time\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  Name: [\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  NotName: [\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  StartDay: [\n    {\n      type: \"string\",\n      placeholder: \"Weekday\",\n      options: [\n        \"Sunday\",\n        \"Monday\",\n        \"Thusday\",\n        \"Webnesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ],\n    },\n  ],\n  Flags: [\n    {\n      type: \"string\",\n      options: [\n        \"rebuy\",\n        \"od\",\n        \"deepstack\",\n        \"sat\",\n        \"!rebuy\",\n        \"!od\",\n        \"!deepstack\",\n        \"!sat\",\n      ],\n      placeholder: \"Flags\",\n    },\n  ],\n  Class: [\n    {\n      type: \"string\",\n      options: [\"sng\", \"scheduled\", \"!sng\", \"!scheduled\"],\n      placeholder: \"Class\",\n    },\n  ],\n  Structure: [\n    {\n      type: \"string\",\n      options: [\n        \"NL\",\n        \"PL\",\n        \"PNL\",\n        \"FL\",\n        \"ML\",\n        \"!NL\",\n        \"!PL\",\n        \"!PNL\",\n        \"!FL\",\n        \"!ML\",\n      ],\n      placeholder: \"Structure\",\n    },\n  ],\n  Game: [\n    {\n      type: \"string\",\n      options: [\"H\", \"H6\", \"O\", \"OHL\", \"!H\", \"!H6\", \"!O\", \"!OHL\"],\n      placeholder: \"Game\",\n    },\n  ],\n};\n\nexport const RULES_TYPES = Object.keys(RULES_TYPES_TO_FIELDS) as rulesType[];\n","import { useState } from \"react\";\nimport { TextField, Button, IconButton } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport { useStore } from \"effector-react\";\nimport { rulesModel, rulesType } from \"../../../@types/rulesModel\";\nimport { getUniqueElemKeyGetter } from \"../../../helpers/getUniqueElemKeyGetter\";\nimport {\n  $rules,\n  deleteRulesRequest,\n  postRulesRequest,\n} from \"../../../store/Rules\";\nimport { validateNumber } from \"../../../helpers/validateNumber\";\n\nimport { RULES_TYPES_TO_FIELDS, RULES_TYPES } from \"../constants\";\nimport { b } from \"../index\";\nimport { SingleSelect } from \"../../SingleSelect\";\nimport { ConfirmationDialog } from \"../../ConfirmationDialog\";\n\ntype RulesSectionRulesProps = {\n  color: string;\n  level: string;\n  network: string;\n  status: string;\n  KO: string;\n};\ntype valuesType = Array<Record<string, number | string>>;\n\ntype Field = {\n  type: string;\n  placeholder: string;\n  options: string[];\n};\n\nexport const RulesSectionRules = (props: RulesSectionRulesProps) => {\n  const savedRules = useStore($rules) as Array<rulesModel[]>;\n\n  const [types, setTypes] = useState<rulesType[]>([RULES_TYPES[0]]);\n  const [values, setValues] = useState<valuesType>([{}]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [internalValue, setInternalValue] = useState<string>('00:00');\n\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n    if (/^([0-1][0-9]|2[0-3]):[0-5][0-9]$/.test(inputValue)) {\n      setInternalValue(inputValue);\n    }\n  };\n\n  const handleAddRuleRow = () => {\n    setTypes((types) => [...types, RULES_TYPES[0]]);\n    setValues((values) => [...values, {}]);\n  };\n\n  const handleRemoveRuleRow = (ruleIndex: number) => {\n    setTypes((types) => {\n      const newTypes = [...types];\n      newTypes.splice(ruleIndex, 1);\n      return newTypes;\n    });\n    setValues((values) => {\n      const newValues = [...values];\n      newValues.splice(ruleIndex, 1);\n      return newValues;\n    });\n  };\n\n  const editableRule = types.map((type, ruleIndex) => ({\n    type,\n    values: new Array(RULES_TYPES_TO_FIELDS[type].length)\n      .fill(null)\n      .map((_, i) => values?.[ruleIndex]?.[i] ?? \"\"),\n    ...props,\n  }));\n  const rules: rulesModel[][] = [\n    editableRule,\n    ...(savedRules ? savedRules : []),\n  ];\n\n  const handleRulesCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleRulesOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleSaveRule = () => {\n    postRulesRequest(editableRule);\n    setValues([{}]);\n  };\n\n  const handleTypeChange = (rowIndex: number) => (e: any) => {\n    setTypes((types) => {\n      const newTypes = [...types];\n      newTypes[rowIndex] = e?.value ?? RULES_TYPES[0];\n      return newTypes;\n    });\n    setValues((values) => {\n      const newValues = [...values];\n      newValues[rowIndex] = {};\n      return newValues;\n    });\n  };\n\n  const handleValues = (\n    value: string | number,\n    rowIndex: number,\n    fieldIndex: number\n  ) => {\n    setValues((values) => {\n      const newValues = [...values];\n\n      if (!newValues[rowIndex]) {\n        newValues[rowIndex] = {};\n      }\n      newValues[rowIndex][fieldIndex] = value;\n\n      return newValues;\n    });\n  };\n\n  const { color, level, network, status, KO } = props;\n  const uniqueElemKeyGetter = getUniqueElemKeyGetter(\n    color + level + network + status + KO\n  );\n\n\n  return (\n    <div className={b(\"rules\")}>\n      {rules.map((ruleRows, ruleIndex) => {\n        const isComposite = ruleRows.length > 1;\n        const isEditable = ruleIndex === 0;\n\n        const isSaveBtnDisabled = getIsSaveBtnDisabled(ruleRows, values);\n\n        const uniqueRuleKeyGetter = uniqueElemKeyGetter(\"rule\" + ruleIndex);\n\n        return (\n          <div\n            className={b(\"rule\", { composite: isComposite })}\n            key={uniqueRuleKeyGetter.key}\n          >\n            <div className={b(\"rule-stripe\")} />\n            {ruleRows.map((ruleRow, rowIndex) => {\n              const { type: ruleType, values: ruleValues } = ruleRow;\n              const fields = RULES_TYPES_TO_FIELDS[ruleType] as Field[];\n              const isLastRow = rowIndex === ruleRows.length - 1;\n\n              const uniqueRowKeyGetter = uniqueRuleKeyGetter(\n                \"row\" + ruleType + rowIndex\n              );\n\n              return (\n                <div className={b(\"rule-row\")} key={uniqueRowKeyGetter.key}>\n                  <SingleSelect\n                    options={RULES_TYPES?.map((type) => ({\n                      value: type,\n                      label: type,\n                    }))}\n                    disabled={!isEditable}\n                    label=\"Modifier\"\n                    required\n                    style={{ width: \"160px\" }}\n                    onSingleChange={handleTypeChange(rowIndex)}\n                    className={b(\"rule-row-select\")}\n                    defaultValue={{ value: ruleType, label: ruleType }}\n                  />\n                  {fields.map((field, fieldIndex) => {\n                    const { type: elementType, placeholder, options } = field;\n\n                    const isTime = elementType === \"time\";\n                    const isNum = elementType === \"number\";\n                    const value = String(ruleValues?.[fieldIndex] || \"\");\n\n                    const uniqueFieldKeyGetter = uniqueRowKeyGetter(\n                      \"field\" + fieldIndex\n                    );\n\n                    if (field.options?.length) {\n                      return (\n                        <SingleSelect\n                          // className={b(\"rule-row-field\", { select: true })}\n                          label={placeholder}\n                          defaultValue={value ? { value, label: value } : null}\n                          options={options?.map((option) => ({\n                            value: option,\n                            label: option,\n                          }))}\n                          disabled={!isEditable}\n                          onSingleChange={(e) => {\n                            const value = e?.value || \"\";\n                            handleValues(value, rowIndex, fieldIndex);\n                          }}\n                          key={String(Math.random()).substr(2, 12)}\n                        />\n                      );\n                    }\n\n                    if (isTime) {\n                      return (\n                        <input\n                          key={String(Math.random()).substr(2, 12)}\n                          type=\"time\"\n                          disabled={!isEditable}\n                          style={{\n                            backgroundColor: 'white',\n                            borderRadius: '4px',\n                            color: `${isEditable? \"black\" : \"rgba(0, 0, 0, 0.38)\"}`,\n                            fontSize: '16px',\n                            padding: '10px',\n                            border: 'none',                    \n                            outline: `1px solid ${isEditable? \"black\" : \"#bdbdbd\"}`,\n                            borderColor: '#333333',\n                          }}\n                          value={value}\n                          onChange={(e) => {\n                            const value = e.currentTarget.value;\n                            handleValues(\n                              value,\n                              rowIndex,\n                              fieldIndex\n                            );\n                          }}\n                          min=\"00:00\"\n                          max=\"23:59\"\n                        />\n                      );\n                    }\n\n                    return (\n                      <TextField\n                        label={placeholder}\n                        name={placeholder}\n                        value={value}\n                        autoComplete=\"off\"\n                        required\n                        disabled={!isEditable}\n                        onChange={(e) => {\n                          const value = e.currentTarget.value;\n\n                          handleValues(\n                            isNum ? validateNumber(value) : value,\n                            rowIndex,\n                            fieldIndex\n                          );\n                        }}\n                        key={uniqueFieldKeyGetter(\"input\").key}\n                      />\n                    );\n                  })}\n                  {isEditable && (\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete user\"\n                      style={{ width: \"56px\" }}\n                      onClick={() => handleRemoveRuleRow(rowIndex)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  )}\n                  {!isEditable && isLastRow && (\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete user\"\n                      style={{ width: \"56px\" }}\n                      onClick={() => handleRulesOpen()}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  )}\n                  <ConfirmationDialog\n                    isOpen={isModalOpen}\n                    title=\"Are you sure?\"\n                    content=\"Do you really want to perform this action?\"\n                    onCancel={handleRulesCancel}\n                    onConfirm={() => {\n                      deleteRulesRequest(rules[ruleIndex]);\n                      handleRulesCancel();\n                    }}\n                  />\n                </div>\n              );\n            })}\n\n            {isEditable && (\n              <div className={b(\"rule-row\")}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleAddRuleRow}\n                >\n                  Add row\n                </Button>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={handleSaveRule}\n                  disabled={isSaveBtnDisabled}\n                >\n                  Save rule\n                </Button>\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst getIsSaveBtnDisabled = (ruleRows: rulesModel[], values: valuesType) => {\n  for (let rowKey = 0; rowKey < ruleRows.length; rowKey += 1) {\n    if (!values[rowKey]) {\n      return true;\n    }\n    const fieldKeysCount = RULES_TYPES_TO_FIELDS[ruleRows[rowKey].type].length;\n    for (let fieldKey = 0; fieldKey < fieldKeysCount; fieldKey += 1) {\n      if (!values[rowKey][fieldKey]) {\n        return true;\n      }\n    }\n  }\n\n  return ruleRows.length === 0;\n};\n","export const validateNumber = (value: string) => {\n  return value\n    .replace(/[^\\d.]*/g, \"\")\n    .replace(/([.])[.]+/g, \"$1\")\n    .replace(/^[^\\d]*(\\d+([.]\\d{0,5})?).*$/g, \"$1\");\n};\n","import b_ from \"b_\";\nimport { useEffect, useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { Effmu } from \"../../@types/common\";\nimport { SelectOption } from \"../../@types/selectsModel\";\nimport { EFFMU } from \"../../constants\";\nimport { getRulesRequest } from \"../../store/Rules\";\nimport { SHORT_NETWORKS } from \"../../store/Select\";\n\nimport { SingleSelect } from \"../SingleSelect\";\nimport { useElementsToggle } from \"../ElementsToggle\";\nimport { LevelBlocks, useLevelBlocks } from \"../LevelBlocks\";\nimport { RulesSectionRules } from \"./__Rules\";\n\nimport \"./index.scss\";\n\ntype KOType = \"Knockout\" | \"Freeze-out\" | \"all\";\ntype StatusType = \"Normal\" | \"Turbo\" | \"SuperTurbo\" | \"all\";\ntype ColorsType = \"blue\" | \"green\" | \"orange\";\nconst KO: KOType[] = [\"Knockout\", \"Freeze-out\", \"all\"];\nconst Status: StatusType[] = [\"Normal\", \"Turbo\", \"SuperTurbo\", \"all\"];\nconst Colors: ColorsType[] = [\"blue\", \"green\", \"orange\"];\nconst ColorsValues = [\n  { value: \"blue\", label: \"Default\" },\n  { value: \"orange\", label: \"Invert\" },\n  { value: \"green\", label: \"Exception\" },\n];\n\nexport const b = b_.with(\"rules-section\");\n\nexport const RulesSection = () => {\n  const { selectedLevel, handleLevelChange } = useLevelBlocks();\n  const { selectedElement: selectedEffmu } = useElementsToggle<Effmu | \"all\">(\n    EFFMU[0]\n  );\n  const { selectedElement: selectedKO, handleElementChange: handleKOChange } =\n    useElementsToggle<KOType>(KO[0]);\n\n  const {\n    selectedElement: selectedStatus,\n    handleElementChange: handleStatusChange,\n  } = useElementsToggle<StatusType>(Status[0]);\n  const {\n    selectedElement: selectedColor,\n    handleElementChange: handleColorChange,\n  } = useElementsToggle<ColorsType>(Colors[0]);\n  const [selectedNetwork, setSelectedNetwork] = useState(\n    SHORT_NETWORKS[0].value\n  );\n  const handleNetworkChange = (option: SelectOption<string>) =>\n    setSelectedNetwork(option.value ?? SHORT_NETWORKS[0].value);\n\n  useEffect(() => {\n    if (selectedLevel !== null) {\n      getRulesRequest({\n        color: selectedColor,\n        level: selectedLevel + selectedEffmu,\n        network: selectedNetwork,\n        status: selectedStatus,\n        KO: selectedKO,\n      });\n    }\n  }, [\n    selectedLevel,\n    selectedColor,\n    selectedEffmu,\n    selectedNetwork,\n    selectedStatus,\n    selectedKO,\n  ]);\n\n  return (\n    <section className={b()}>\n      <Typography variant=\"h5\" gutterBottom>\n        Rules control\n      </Typography>\n      <LevelBlocks\n        selectedLevel={selectedLevel}\n        onLevelChange={handleLevelChange}\n      />\n      {selectedLevel !== null && (\n        <>\n          <div className={b(\"filter\")}>\n            <SingleSelect\n              label=\"Network\"\n              className={b(\"select\")}\n              options={SHORT_NETWORKS}\n              required\n              autoComplete=\"off\"\n              defaultValue={SHORT_NETWORKS[0]}\n              onSingleChange={handleNetworkChange as any}\n            />\n            <SingleSelect\n              label=\"Format\"\n              className={b(\"select\")}\n              options={KO.map((k) => ({ value: k, label: k }))}\n              required\n              autoComplete=\"off\"\n              defaultValue={{ value: selectedKO, label: selectedKO }}\n              onSingleChange={(e) => handleKOChange(e?.value as any)()}\n            />\n            <SingleSelect\n              label=\"Speed\"\n              className={b(\"select\")}\n              options={Status.map((k) => ({ value: k, label: k }))}\n              required\n              autoComplete=\"off\"\n              defaultValue={{ value: selectedStatus, label: selectedStatus }}\n              onSingleChange={(e) => handleStatusChange(e?.value as any)()}\n            />\n            <SingleSelect\n              label=\"Rule\"\n              className={b(\"select\")}\n              options={ColorsValues}\n              required\n              autoComplete=\"off\"\n              defaultValue={{ value: selectedColor, label: selectedColor }}\n              onSingleChange={(e) => handleColorChange(e?.value as any)()}\n            />\n          </div>\n          <RulesSectionRules\n            color={selectedColor}\n            level={selectedLevel + selectedEffmu}\n            network={selectedNetwork}\n            status={selectedStatus}\n            KO={selectedKO}\n          />\n        </>\n      )}\n    </section>\n  );\n};\n","import { createStore } from \"effector\";\n\nexport const $email = createStore<string>(\"\");\n","import { emailModel } from \"../../@types/emailModel\";\nimport { createEffect, createApi } from \"effector\";\nimport api from \"../../api\";\nimport { $email } from \"./state\";\n\nexport const getEmail = createEffect(async () => {\n  const result = await api.get<emailModel>(\"/api/email\");\n\n  return result.email;\n});\n\nexport const postEmail = createEffect(async ({ email }: { email: string }) => {\n  await api.postEmail(email);\n});\n\nexport const { handleChangeEmail } = createApi($email, {\n  handleChangeEmail: (_, email: string) => email,\n});\n\n$email.on(getEmail.doneData, (_, email) => email);\n","import b_ from \"b_\";\nimport { useStore } from \"effector-react\";\nimport { TextField, Button, Typography } from \"@mui/material\";\nimport validator from \"email-validator\";\n\nimport { $email, handleChangeEmail, postEmail } from \"../../store/Email\";\n\nimport \"./index.scss\";\n\nexport const b = b_.with(\"email-section\");\n\nexport const EmailSection = () => {\n  const email = useStore($email);\n\n  return (\n    <section className={b()}>\n      <Typography\n        variant=\"h5\"\n        gutterBottom\n        style={{\n          marginTop: \"10px\",\n        }}\n      >\n        Email control \n      </Typography>\n      <TextField\n        variant=\"outlined\"\n        label=\"Email\"\n        autoComplete=\"off\"\n        style={{ width: \"250px\" }}\n        value={email}\n        onChange={(e) => handleChangeEmail(e.currentTarget.value)}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{\n          display: \"block\",\n          width: \"250px\",\n          marginTop: \"10px\",\n        }}\n        onClick={() => postEmail({ email })}\n        disabled={!validator.validate(email)}\n      >\n        Save\n      </Button>\n    </section>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { FC, useEffect } from \"react\";\n\nimport { AliasesSection } from \"../../components/Admin.AliasesSection\";\nimport {\n  OnPasswordSubmit,\n  PasswordSection,\n  PasswordSectionType,\n} from \"../../components/PasswordSection\";\nimport {\n  $isValidAdminPassword,\n  validateAdminPasswordRequest,\n} from \"../../store/Password\";\nimport { RulesSection } from \"../../components/Admin.RulesSection\";\nimport { EmailSection } from \"../../components/EmailSection\";\nimport { getEmail } from \"../../store/Email\";\n\nexport const AdminPage: FC = () => {\n  const isAdmin = useStore($isValidAdminPassword);\n\n  useEffect(() => {\n    getEmail();\n  }, [isAdmin]);\n\n  const handlePasswordSubmit: OnPasswordSubmit = ({ password }) =>\n    validateAdminPasswordRequest(password);\n\n  if (!isAdmin) {\n    return (\n      <PasswordSection\n        onSubmit={handlePasswordSubmit}\n        type={PasswordSectionType.ADMIN}\n      />\n    );\n  }\n\n  return (\n    <>\n      <EmailSection />\n      <RulesSection />\n      <AliasesSection />\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { useCallback } from \"react\";\nimport cx from \"classnames\";\nimport { $tournamentsSettings } from \"../../../store/Select\";\nimport classes from \"../BaseTable.module.scss\";\n\ninterface TheadProps {\n  setSortedKey: React.Dispatch<React.SetStateAction<string | null>>;\n  sortedKey: string | null;\n  setIsReverse: React.Dispatch<React.SetStateAction<boolean>>;\n  isReverse: boolean;\n}\n\nexport const Thead = ({\n  setSortedKey,\n  sortedKey,\n  setIsReverse,\n  isReverse,\n}: TheadProps) => {\n  const tournamentsSettings = useStore($tournamentsSettings);\n\n  const handleClick = useCallback(\n    (newSortedKey: string) => {\n      if (sortedKey === newSortedKey) {\n        setIsReverse((prev) => !prev);\n      } else {\n        setSortedKey(newSortedKey);\n      }\n    },\n    [sortedKey, setIsReverse, setSortedKey]\n  );\n\n  return (\n    <thead className={classes.thead}>\n      <tr className={classes.tr}>\n        <th\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@date\",\n            [classes.reverse]: isReverse,\n          })}\n          onClick={() => handleClick(\"@date\")}\n        >\n          Start\n          {tournamentsSettings.timezone?.label\n            ? ` (${tournamentsSettings.timezone.label})`\n            : \"\"}\n        </th>\n        <th\n          onClick={() => handleClick(\"@numberLateRegEndDate\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@numberLateRegEndDate\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Late Reg\n        </th>\n        <th\n          onClick={() => handleClick(\"@network\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@network\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Network\n        </th>\n        <th\n          onClick={() => handleClick(\"@name\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@name\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Name\n        </th>\n        <th\n          onClick={() => handleClick(\"@bid\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@bid\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Buy-in\n        </th>\n        <th\n          onClick={() => handleClick(\"@prizepool\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@prizepool\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Prizepool\n        </th>\n        <th\n          onClick={() => handleClick(\"@ability\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@ability\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Ability\n        </th>\n        <th\n          onClick={() => handleClick(\"@duration\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@duration\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Duration\n        </th>\n      </tr>\n    </thead>\n  );\n};\n","import { FC } from \"react\";\n\nimport classes from \"../BaseTable.module.scss\";\n\ntype TbodyProps = {\n  sortedKey: string | null;\n  data: Array<Record<string, any>>;\n  isReverse: boolean;\n};\n\nexport const Tbody: FC<TbodyProps> = ({ data, sortedKey, isReverse }) => {\n  return (\n    <tbody className={classes.tbody}>\n      {data\n        .slice(0)\n        .sort((a, b) => {\n          if (!sortedKey) {\n            return 0;\n          }\n          const dataA = String(a[sortedKey] ?? \"\").toLowerCase();\n          const dataB = String(b[sortedKey] ?? \"\").toLowerCase();\n\n          const numberDataA = Number(dataA);\n          const numberDataB = Number(dataB);\n\n          const isNumberDataA = !isNaN(numberDataA);\n          const isNumberDataB = !isNaN(numberDataB);\n\n          if (isNumberDataA && isNumberDataB) {\n            return isReverse\n              ? numberDataB - numberDataA\n              : numberDataA - numberDataB;\n          }\n          if (dataA < dataB) {\n            return isReverse ? 1 : -1;\n          }\n          if (dataA > dataB) {\n            return isReverse ? -1 : 1;\n          }\n          return 0;\n        })\n        .map((item, index: number) => {\n          return (\n            <tr className={classes.tr} key={index}>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@scheduledStartDate\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@lateRegEndDate\"] ?? \"-\"}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@network\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@name\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@bid\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@prizepool\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@ability\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@duration\"]}\n              </td>\n            </tr>\n          );\n        })}\n    </tbody>\n  );\n};\n","import { FC } from \"react\";\nimport classes from \"./Loader.module.scss\";\n\nexport const Loader: FC = () => {\n  return (\n    <div className={classes.wrapper}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { Thead } from \"./Thead\";\nimport { Tbody } from \"./Tbody/Tbody\";\nimport { Loader } from \"../Loader/Loader\";\n\nimport classes from \"./BaseTable.module.scss\";\n\ntype BaseTableProps = {\n  data?: Array<Record<string, any>>;\n  loading: boolean;\n};\n\nexport const BaseTable: FC<BaseTableProps> = ({ data, loading }) => {\n  const [sortedKey, setSortedKey] = useState<string | null>(\"@date\");\n  const [isReverse, setIsReverse] = useState(false);\n\n  if (loading)\n    return (\n      <section className={classes.section}>\n        <Loader />\n      </section>\n    );\n\n  if (!data?.length)\n    return <section className={classes.nodata}>Nothing found</section>;\n\n  if (!data)\n    return (\n      <section className={classes.nodata}>\n        Select the options you are interested in and click the \"Update\" button\n      </section>\n    );\n\n  return (\n    <section className={classes.section}>\n      <table id=\"grid\" className={classes.table}>\n        <Thead\n          setSortedKey={setSortedKey}\n          sortedKey={sortedKey}\n          setIsReverse={setIsReverse}\n          isReverse={isReverse}\n        />\n        <Tbody data={data} sortedKey={sortedKey} isReverse={isReverse} />\n      </table>\n    </section>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport api from \"../../api\";\nimport { BaseTable } from \"../../components/BaseTable\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\n\nexport const InfoPage: FC = () => {\n  const [result, setResult] = useState<tableCellModel[] | undefined>(undefined);\n\n  useEffect(() => {\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n\n    const fetchData = async () => {\n      const data = await api.get<tableCellModel[]>(\"/api/info\", params);\n\n      setResult(data);\n    };\n\n    fetchData();\n  }, []);\n\n  return <BaseTable data={result as any} loading={!result} />;\n};\n","import { nanoid } from \"nanoid\";\nimport { useCallback } from \"react\";\nimport { useUnmount } from \"react-use\";\n\nexport type IntervalWorkerHandler = () => void;\nexport type IntervalWorkerId = string;\nexport type IntervalWorkerTimeout = number;\n\nconst handlers: Record<IntervalWorkerId, IntervalWorkerHandler> = {};\n\nconst createIntervalWorker = () => {\n  const blob = new Blob([\n    `let intervalById = {};\n        onmessage = function ({data: { name, timeout, id }}) {\n            switch (name) {\n                case 'setInterval':\n                    intervalById[id] = setInterval(function () {\n                        postMessage({ id });\n                    }, timeout);\n                    break;\n                case 'clearInterval':\n                    if (intervalById.hasOwnProperty(id)) {\n                        clearInterval(intervalById[id]);\n                        delete intervalById[id];\n                    }\n                    break;\n            }\n        };\n    `,\n  ]);\n\n  const workerScript = URL.createObjectURL(blob);\n\n  const worker = new Worker(workerScript);\n\n  worker.onmessage = ({ data: { id } }) => {\n    if (id in handlers) {\n      handlers[id]();\n    }\n  };\n\n  return worker;\n};\n\nconst worker = createIntervalWorker();\n\nexport const useIntervalWorker = () => {\n  const setIntervalWorker = useCallback(\n    (handler: IntervalWorkerHandler, timeout: IntervalWorkerTimeout) => {\n      if (!worker) {\n        return;\n      }\n\n      const id = nanoid();\n      handlers[id] = handler;\n      worker.postMessage({\n        name: \"setInterval\",\n        timeout,\n        id,\n      });\n\n      return id;\n    },\n    []\n  );\n\n  const clearIntervalWorker = useCallback((id: IntervalWorkerId) => {\n    if (!worker) {\n      return;\n    }\n    delete handlers[id];\n    worker.postMessage({\n      name: \"clearInterval\",\n      id,\n    });\n  }, []);\n\n  const clearAllIntervals = useCallback(() => {\n    Object.keys(handlers).forEach((id) => {\n      clearIntervalWorker(id);\n    });\n  }, [clearIntervalWorker]);\n\n  useUnmount(clearAllIntervals);\n\n  return { setIntervalWorker, clearIntervalWorker };\n};\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\ninterface NumberInputProps {\n  value: number;\n  onChange: (value: number) => void;\n  label?: string;\n  className?: string;\n  max?: number;\n}\n\nexport const NumberInput = ({\n  value,\n  onChange,\n  label,\n  className,\n  max = 10000,\n}: NumberInputProps) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = parseInt(event.target.value, 10);\n\n    if (!isNaN(newValue) && newValue >= 0 && newValue <= max) {\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <TextField\n      type=\"number\"\n      className={className}\n      label={label?.toUpperCase()}\n      value={value}\n      onChange={handleChange}\n      inputProps={{ min: 0, max }}\n      autoComplete=\"off\"\n    />\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { AutocompleteProps } from \"@mui/material/Autocomplete\";\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props\n  extends Omit<AutocompleteProps<Option, true, false, false>, \"renderInput\"> {\n  label: string;\n  value: Option[];\n  options: Option[];\n  onMultiChange: (v: Option[]) => {};\n}\n\nexport const MultiSelect: React.FC<Props> = ({\n  label,\n  value = [],\n  options,\n  onMultiChange,\n  ...props\n}) => {\n  const handleChange = (_: React.ChangeEvent<{}>, value: Option[]) => {\n    onMultiChange(value);\n  };\n\n  return (\n    <div>\n      <Autocomplete\n        multiple\n        options={options}\n        getOptionLabel={(option) => option.label}\n        filterSelectedOptions\n        value={value ?? []}\n        onChange={handleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            label={label}\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n        )}\n        {...props}\n      />\n    </div>\n  );\n};\n","import { ChangeEvent } from \"react\";\nimport {\n  Checkbox as MuiCheckbox,\n  FormControlLabel,\n  CheckboxProps as MuiCheckboxProps,\n} from \"@mui/material\";\n\ntype CheckboxProps = {\n  selected: boolean;\n  onChange: (selected: boolean) => void;\n  label?: string;\n} & Omit<MuiCheckboxProps, \"checked\" | \"onChange\">;\n\nexport const Checkbox = ({\n  selected,\n  onChange,\n  label,\n  ...rest\n}: CheckboxProps) => {\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={\n        <MuiCheckbox checked={selected} onChange={handleOnChange} {...rest} />\n      }\n      label={label}\n    />\n  );\n};\n","import { createStore } from \"effector\";\n\nexport interface StoreModel {\n  ability1: any;\n}\n\nexport const DEFAULT_STORE: StoreModel = {\n  ability1: {},\n};\n\nexport const $store = createStore<StoreModel>(DEFAULT_STORE);\n","import { createDomain } from \"effector\";\n\nimport api from \"../../api\";\n\nimport { $store, StoreModel } from \"./state\";\n\nconst storeDomain = createDomain();\n\nexport const getStoreRequest = storeDomain.createEffect(async () => {\n  const ability1 = await api.get<StoreModel[\"ability1\"]>(\"/api/store/ability1\");\n\n  return { ability1 };\n});\n\n$store.on(getStoreRequest.doneData, (_, store) => store);\n","\nexport const getDate = (date:any) => {\n    return new Date(date)\n      .toLocaleString(\"en-EN\", {\n        hour12: false,\n        day: \"numeric\",\n        month: \"short\",\n        hour: \"numeric\",\n        timeZone: 'UTC',\n        minute: \"numeric\",\n      })\n      .replace(\", 24\", \", 00\");\n  };\n  \n  ","export const getTimeBySec = (timestamp:any) => {\n    let hours = Math.floor(timestamp / 60 / 60);\n    let minutes = Math.floor(timestamp / 60) - hours * 60;\n    let seconds = timestamp % 60;\n  \n    return [\n      hours.toString().padStart(2, \"0\"),\n      minutes.toString().padStart(2, \"0\"),\n      seconds.toString().padStart(2, \"0\"),\n    ].join(\":\");\n  };","import { getNetwork } from \"./getNetwork\";\nimport { tableCellModel } from \"./../@types/tableCellModel\";\n\nexport const isSat = (tournament: tableCellModel) => {\n  const name = tournament[\"@name\"]?.toLowerCase();\n  const network = getNetwork(tournament[\"@network\"]);\n  let sat = !!tournament[\"@flags\"]?.includes(\"SAT\");\n\n  if (!sat && name) {\n    if (network === \"GGNetwork\") {\n      sat =\n        name.includes(\" seats\") ||\n        name.includes(\"seats \") ||\n        name.includes(\" seat\") ||\n        name.includes(\"seat \") ||\n        name.includes(\" qualifier\") ||\n        name.includes(\"qualifier \") ||\n        name.includes(\" step\") ||\n        name.includes(\"step \") ||\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \");\n    } else if (network === \"Winamax.fr\") {\n      sat =\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \") ||\n        name.includes(\"satellite\") ||\n        name.includes(\"qualif\") ||\n        name.includes(\"last chance\") ||\n        name.includes(\"hit&run\");\n    } else if (network === \"WPN\") {\n      sat =\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \") ||\n        name.includes(\"satellite\") ||\n        name.includes(\"seat\") ||\n        name.includes(\" qualifier\") ||\n        name.includes(\"qualifier \");\n    } else if (network === \"iPoker\") {\n      sat =\n        name.includes(\" seats\") ||\n        name.includes(\"seats \") ||\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \") ||\n        name.includes(\" x \");\n    }\n  }\n\n  return !!sat;\n};\n","import { tableCellModel } from \"../@types/tableCellModel\";\n\nexport const isSuperTurbo = (tournament:tableCellModel) => {\n    const name = (tournament[\"@name\"] ?? \"\").toLowerCase();\n    const superturbo = tournament[\"@flags\"]?.includes(\"ST\") || name?.includes(\"hyper\");\n  \n    return superturbo;\n  };","import { isSat } from './isSat';\nimport { isSuperTurbo } from './isSuperTurbo';\nimport { tableCellModel } from \"../@types/tableCellModel\";\nimport { getNetwork } from \"./getNetwork\";\n\nexport const isTurbo = (tournament:tableCellModel) => {\n    let flags = tournament[\"@flags\"];\n    const name = (tournament[\"@name\"] ?? \"\").toLowerCase();\n    const network = getNetwork(tournament[\"@network\"]);\n    const superturbo = isSuperTurbo(tournament);\n    const sat = isSat(tournament);\n    if ((sat && flags) || flags?.includes(\"SAT\")) flags = flags.replace(\"SAT\", \"\");\n  \n    const turbo =\n      (flags?.includes(\"T\") ||\n        name?.includes(\"turbo\") ||\n        (network === \"PokerStars\" && name?.includes(\"hot\"))) &&\n      !superturbo;\n  \n    return turbo;\n  };","import { tableCellModel } from \"../@types/tableCellModel\";\n\n\nexport const isNormal = (tournament:tableCellModel) => {\n    const name = (tournament[\"@name\"] ?? \"\").toLowerCase();\n  \n    return !!(tournament[\"@flags\"]?.includes(\"B\") || name?.includes(\"bounty\"));\n  };\n  ","import { createStore } from \"effector\";\n\nexport const $filterContent = createStore<any>(null);\n","import { createEffect } from \"effector\";\n\nimport { $filterContent } from \"./state\";\n\nimport api from \"../../api\";\n\nexport const fetchFilterContent = createEffect(async () => {\n  const result = await api.get(\"api/filter\");\n\n  try {\n    // @ts-ignore\n    const { filter } = new Function(\n      // @ts-ignore\n      result.replace(\n        // @ts-ignore\n        \"module.exports = filter_1;\",\n        // @ts-ignore\n        \"return { filter: filter_1};\"\n        // @ts-ignore\n      )\n      // @ts-ignore\n    )();\n\n    return filter.filter;\n  } catch (error) {}\n});\n\n$filterContent.on(fetchFilterContent.doneData, (_, data) => data);\n","\n\n\nexport const dateToTimeString = (ms: number): string => {\n  const date = new Date(ms);\n  const hours = date.getUTCHours().toString().padStart(2, \"0\");\n  const minutes = date.getUTCMinutes().toString().padStart(2, \"0\");\n  return `${hours}:${minutes}`;\n}","\n\n\nexport const timeStringToMilliseconds = (timeString: string): number => {\n  const [hours, minutes] = timeString.split(\":\").map(Number);\n  return (hours * 60 + minutes) * 60 * 1000;\n}","import { createStore } from \"effector\";\n\nimport { getDate } from \"./../../helpers/getDate\";\nimport { getWeekday } from \"./../../helpers/getWeekday\";\nimport { getTimeBySec } from \"./../../helpers/getTimeBySec\";\nimport { isSat } from \"./../../helpers/isSat\";\nimport { isRebuy } from \"./../../helpers/isRebuy\";\nimport { getStatus } from \"./../../helpers/getStatus\";\nimport { isSuperTurbo } from \"./../../helpers/isSuperTurbo\";\nimport { isTurbo } from \"./../../helpers/isTurbo\";\nimport { isNormal } from \"./../../helpers/isNormal\";\nimport { getTimeByMS } from \"./../../helpers/getTimeByMS\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\nimport { $tournamentsSettings } from \"../Select\";\n\nimport { getNetwork } from \"./../../helpers/getNetwork\";\nimport { $config } from \"../Config\";\nimport { $filterContent } from \"../Filter\";\nimport { $store } from \"../Store\";\nimport { dateToTimeString } from \"../../helpers/dateToTimeString\";\nimport { timeStringToMilliseconds } from \"../../helpers/timeStringToMilliseconds\";\nimport { millisecondsToTimeString } from \"../../helpers/millisecondsToTimeString\";\n\nexport const $tableState = createStore<tableCellModel[] | null | undefined>(\n  null\n);\n\nexport const $filtredTableState = $tableState.map((tournaments) => {\n  if (!tournaments) {\n    return [];\n  }\n\n  const config = $config.getState();\n  const filter = $filterContent.getState();\n  const { ability1 } = $store.getState();\n\n  const {\n    moneyStart,\n    moneyEnd,\n    KO: isKOQ,\n    turbo: isTurboQ,\n    superTurbo: isSTurboQ,\n    freezout: isFreezoutQ,\n    normal: isNormalQ,\n    prizepoolStart,\n    prizepoolEnd,\n  } = $tournamentsSettings.getState();\n\n  const { networks, timezone } = config ?? {};\n\n  // сортировка по времени старта турнира\n  tournaments = tournaments.sort(\n    (a, b) =>\n      Number(a[\"@scheduledStartDate\"] ?? 0) -\n      Number(b[\"@scheduledStartDate\"] ?? 0)\n  );\n\n  // мапим все данные о турнирах\n  tournaments = tournaments.map((tournament) => {\n    const network = getNetwork(tournament[\"@network\"]);\n    const { level: networksLevel = 1 } = networks?.[network] ?? {};\n    const level = networksLevel + \"A\";\n    const name = tournament[\"@name\"]?.toLowerCase();\n    const stake = Number(tournament[\"@stake\"] ?? 0);\n    const rake = Number(tournament[\"@rake\"] ?? 0);\n    const bid = (stake + rake).toFixed(2);\n    const isStartDate = tournament[\"@scheduledStartDate\"] ?? 0;\n    const isRegDate = tournament[\"@lateRegEndDate\"] ?? 0;\n    const startDate = Number(isStartDate) * 1000 + Number(timezone);\n    const regDate = Number(isRegDate) * 1000 + Number(timezone);\n    const time = getTimeByMS(Number(`${isStartDate}000`));\n    const bounty = isNormal(tournament);\n    const turbo = isTurbo(tournament);\n    const superturbo = isSuperTurbo(tournament);\n    const status = getStatus(tournament);\n    const rebuy = isRebuy(tournament);\n\n    const info = ability1?.[network]?.[time]?.[bid]?.[name];\n    const ability = info?.[\"@avability\"];\n\n    const duration = info?.[\"@duration\"]\n      ? Math.round(info?.[\"@duration\"])\n      : null;\n    const sat = isSat(tournament);\n\n    //Фикс гарантии для WPN и 888Poker и Chiko\n    if (network === \"WPN\" || network === \"888Poker\" || network === \"Chico\") {\n      const $ = tournament[\"@name\"].split(\"$\");\n      if ($.length > 1) {\n        if (network === \"Chico\" && !sat) {\n          tournament[\"@guarantee\"] = $[2]\n            ?.split(\" \")?.[0]\n            ?.replace(\",\", \"\")\n            .replace(\".5K\", \"500\")\n            .replace(\"K\", \"000\")\n            .replace(\"M\", \"000000\")\n            .replace(\".\", \"\");\n        } else if ((network === \"WPN\" && !sat) || network === \"888Poker\") {\n          tournament[\"@guarantee\"] = $[1]\n            .split(\" \")[0]\n            .replace(\")\", \"\")\n            .replace(\",\", \"\");\n        }\n      }\n    }\n\n    const prizepool = Math.round(\n      Math.max(\n        Number(tournament[\"@guarantee\"] ?? 0),\n        Number(tournament[\"@prizePool\"] ?? 0),\n        (Number(tournament[\"@entrants\"] ?? 0) +\n          Number(tournament[\"@reEntries\"] ?? 0)) *\n          Number(tournament[\"@stake\"] ?? 0),\n        (Number(tournament[\"@totalEntrants\"] ?? 0) +\n          Number(tournament[\"@reEntries\"] ?? 0)) *\n          Number(tournament[\"@stake\"] ?? 0)\n      )\n    );\n\n    const pp = prizepool >= 0 ? prizepool : \"-\";\n    return {\n      ...tournament,\n      \"@date\": isStartDate,\n      \"@bid\": bid,\n      \"@realBid\": bid,\n      \"@turbo\": !!turbo,\n      \"@rebuy\": !!rebuy,\n      \"@od\": !!tournament[\"@flags\"]?.includes(\"OD\"),\n      \"@bounty\": !!bounty,\n      \"@sat\": !!sat,\n      \"@sng\": !!tournament[\"@gameClass\"]?.includes(\"sng\"),\n      \"@scheduled\": !!tournament[\"@gameClass\"]?.includes(\"scheduled\"),\n      \"@NL\": !!(tournament[\"@structure\"] === \"NL\"),\n      \"@PL\": !!(tournament[\"@structure\"] === \"PL\"),\n      \"@PNL\": !!(tournament[\"@structure\"] === \"PNL\"),\n      \"@FL\": !!(tournament[\"@structure\"] === \"FL\"),\n      \"@ML\": !!(tournament[\"@structure\"] === \"ML\"),\n      \"@H\": !!(tournament[\"@game\"] === \"H\"),\n      \"@H6\": !!(tournament[\"@game\"] === \"H6\"),\n      \"@O\": !!(tournament[\"@game\"] === \"O\"),\n      \"@OHL\": !!(tournament[\"@game\"] === \"OHL\"),\n      \"@deepstack\": !!tournament[\"@flags\"]?.includes(\"D\"),\n      \"@superturbo\": !!superturbo,\n      \"@prizepool\": pp,\n      \"@network\": network,\n      \"@ability\": ability ? ability : \"-\",\n      \"@duration\": duration ? getTimeBySec(duration) : \"-\",\n      \"@getWeekday\": isStartDate ? getWeekday(Number(isStartDate) * 1000) : \"-\",\n      \"@scheduledStartDate\": isStartDate ? getDate(startDate) : \"-\",\n      \"@lateRegEndDate\": isRegDate ? getDate(regDate) : \"-\",\n      \"@numberLateRegEndDate\": regDate,\n      \"@timezone\": timezone,\n      \"@status\": status,\n      \"@level\": level,\n      \"@usdBid\": Number(bid),\n      \"@usdPrizepool\": Number(pp),\n      \"@msStartForRule\": isStartDate? timeStringToMilliseconds(dateToTimeString(Number(isStartDate) * 1000)) : \"-\",\n      \"@msLateForRule\": isRegDate?  timeStringToMilliseconds(dateToTimeString(Number(isRegDate) * 1000)) : \"-\",\n    };\n  });\n\n  // фильтр по параметрам\n  tournaments = tournaments.filter((tournament) => {\n    const bounty = tournament[\"@bounty\"];\n    const turbo = tournament[\"@turbo\"];\n    const superturbo = tournament[\"@superturbo\"];\n    const prizepool = tournament[\"@usdPrizepool\"];\n\n    return (\n      Number(tournament[\"@usdBid\"]) >= Number(moneyStart) &&\n      Number(tournament[\"@usdBid\"]) <= Number(moneyEnd) &&\n      ((isKOQ !== false && isNormalQ !== false\n        ? bounty && !turbo && !superturbo\n        : false) ||\n        (isKOQ !== false && isTurboQ !== false ? bounty && turbo : false) ||\n        (isKOQ !== false && isSTurboQ !== false\n          ? bounty && superturbo\n          : false) ||\n        (isFreezoutQ !== false && isNormalQ !== false\n          ? !bounty && !turbo && !superturbo\n          : false) ||\n        (isFreezoutQ !== false && isTurboQ !== false\n          ? !bounty && turbo\n          : false) ||\n        (isFreezoutQ !== false && isSTurboQ !== false\n          ? !bounty && superturbo\n          : false)) &&\n      (prizepool !== \"-\"\n        ? Number(prizepoolStart) <= Number(prizepool) &&\n          Number(prizepool) <= Number(prizepoolEnd)\n        : true)\n    );\n  });\n\n  // определение цвета турнира\n  tournaments = tournaments.map((tournament) => {\n    const level = tournament[\"@level\"];\n\n    const { valid } = filter(level, tournament, true);\n\n    function calculateDifficultyPercent(difficulty: number) {\n      if (difficulty === 69) {\n        return 0;\n      } else if (difficulty > 69 && difficulty <= 89) {\n        return -((difficulty - 69) / 20) * 100;\n      } else if (difficulty >= 55 && difficulty < 69) {\n        return ((69 - difficulty) / 14) * 100;\n      } else if (difficulty > 89) {\n        return -100;\n      } else if (difficulty < 55) {\n        return 100;\n      }\n    }\n\n    return {\n      ...tournament,\n      valid,\n      percent: calculateDifficultyPercent(Number(tournament[\"@ability\"])),\n    };\n  });\n  const d = new Set();\n  // фильтр по времени \"от\"-\"до\"\n  tournaments = tournaments.filter((item) => {\n    d.add(item[\"@game\"]);\n\n    const startDate = item?.[\"@scheduledStartDate\"] ?? \"-\";\n    const { dateStart, dateEnd } = $tournamentsSettings.getState();\n\n    if (!item.valid) return false;\n    if (startDate === \"-\") return true;\n\n    const res = startDate?.split(\", \")?.[1]?.split(\":\")?.[0];\n    const r = dateEnd === \"00\" && dateStart <= dateEnd ? \"24\" : dateEnd;\n\n    return dateStart <= dateEnd\n      ? dateStart <= res && res <= r\n      : !(dateStart > res && res > dateEnd);\n  });\n\n  return tournaments;\n});\n","export const getTimeByMS = (timestamp:any) => {\n    return new Date(timestamp)\n      .toLocaleString(\"en-EN\", {\n        hour12: false,\n        hour: \"numeric\",\n        minute: \"numeric\",\n        timeZone: 'UTC'\n      })\n      .replace(\"24\", \"00\");\n  };\n  ","import { isSuperTurbo } from './isSuperTurbo';\nimport { isTurbo } from './isTurbo';\nimport { isNormal } from './isNormal';\nimport { tableCellModel } from './../@types/tableCellModel';\n\n\nexport const getStatus = (tournament:tableCellModel) => {\n  const KO = isNormal(tournament);\n  const turbo = isTurbo(tournament);\n  const superturbo = isSuperTurbo(tournament);\n  const status = `${KO ? \"KO\" : \"!KO\"}${superturbo ? \"SuperTurbo\" : turbo ? \"Turbo\" : \"Normal\"}`;\n  return status;\n};\n","import { tableCellModel } from './../@types/tableCellModel';\n\nexport const isRebuy = (tournament:tableCellModel) => {\n  return tournament[\"@flags\"]?.includes(\"R\") && !tournament[\"@flags\"]?.includes(\"RH\");\n};\n","\nexport const getWeekday = (date:any) => {\n    return new Date(date).toLocaleString(\"en-EN\", {\n      weekday: \"long\",\n      timeZone: 'UTC'\n    });\n  };\n  ","import { getStoreRequest } from './../Store/init';\nimport { createEffect } from \"effector\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\nimport { $tournamentsSettings } from \"../Select\";\nimport { ErrNot } from \"../../components/NotificationService\";\nimport { $tableState } from \"./state\";\n\nimport api from \"../../api\";\n\nexport const fetchUserReposFx = createEffect(async () => {\n  const tournamentsSettings = $tournamentsSettings.getState();\n  await getStoreRequest();\n\n  try {\n    return await api.get<tableCellModel[]>(\"/api/tour\", {\n      network: tournamentsSettings.network?.map((elem) => elem.value).join(\",\"),\n      time: tournamentsSettings.time?.value ?? 0,\n    });\n  } catch (error: any) {\n    ErrNot(error?.response?.data?.message || \"The request failed. Try again.\");\n  }\n});\n\n$tableState.on(fetchUserReposFx.doneData, (_, data) => data);\n","import { useState } from \"react\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Divider,\n  Grid,\n  Box,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  $tournamentsSettings,\n  editableTournamentsSettings,\n  NETWORKS,\n  TIMERANGE,\n} from \"../../store/Select\";\nimport { useStore } from \"effector-react\";\nimport { NumberInput } from \"../NumberInput\";\n\nimport classes from \"./BaseSettings.module.scss\";\nimport { MultiSelect } from \"../MultiSelect\";\nimport { SingleSelect } from \"../SingleSelect\";\nimport { Checkbox } from \"../Checkbox\";\nimport { fetchUserReposFx } from \"../../store/Table\";\nimport { fetchFilterContent } from \"../../store/Filter\";\n\nconst SettingsWidgetWrapper = styled(Box)(({ theme }) => ({\n  position: \"fixed\",\n  bottom: theme.spacing(2),\n  right: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: \"50%\",\n  boxShadow: theme.shadows[3],\n  padding: theme.spacing(0.5),\n}));\n\nconst UpdateWidgetWrapper = styled(Box)(({ theme }) => ({\n  position: \"fixed\",\n  bottom: theme.spacing(2),\n  right: theme.spacing(9),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: \"50%\",\n  boxShadow: theme.shadows[3],\n  padding: theme.spacing(0.5),\n}));\n\nexport const BaseSettings = () => {\n  const [isOpen, setIsOpen] = useState(true);\n  const tournamentsSettings = useStore($tournamentsSettings);\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n    fetchFilterContent().then(() => fetchUserReposFx());\n  };\n\n  return (\n    <>\n      <SettingsWidgetWrapper>\n        <IconButton onClick={handleOpen} style={{ transform: \"scale(1.4)\" }}>\n          <SettingsIcon />\n        </IconButton>\n        <Dialog open={isOpen} onClose={handleClose}>\n          <DialogTitle className={classes.title}>Settings</DialogTitle>\n          <DialogContent>\n            <div className={classes.menu}>\n              <MultiSelect\n                value={tournamentsSettings.network as any}\n                label=\"Networks\"\n                options={NETWORKS}\n                onMultiChange={editableTournamentsSettings.handleChangeNetwork}\n              />\n              <SingleSelect\n                defaultValue={tournamentsSettings.time as any}\n                label=\"Time interval\"\n                options={TIMERANGE}\n                onSingleChange={editableTournamentsSettings.handleChangeTime}\n              />\n              <div className={classes.inputWrapper}>\n                <NumberInput\n                  label=\"bid FROM\"\n                  value={tournamentsSettings.moneyStart}\n                  onChange={editableTournamentsSettings.handleChangeMoneyStart}\n                  max={tournamentsSettings.moneyEnd}\n                  className={classes.inputBuyIn}\n                />\n                <NumberInput\n                  label=\"bid To\"\n                  value={tournamentsSettings.moneyEnd}\n                  onChange={editableTournamentsSettings.handleChangeMoneyEnd}\n                  className={classes.inputBuyIn}\n                />\n              </div>\n              <div className={classes.inputWrapper}>\n                <NumberInput\n                  label=\"prizepool FROM\"\n                  value={tournamentsSettings.prizepoolStart}\n                  onChange={\n                    editableTournamentsSettings.handleChangePrizepoolStart\n                  }\n                  max={tournamentsSettings.prizepoolEnd}\n                  className={classes.inputBuyIn}\n                />\n                <NumberInput\n                  label=\"prizepool TO\"\n                  value={tournamentsSettings.prizepoolEnd}\n                  onChange={\n                    editableTournamentsSettings.handleChangePrizepoolEnd\n                  }\n                  max={100000000}\n                  className={classes.inputBuyIn}\n                />\n              </div>\n              <div className={classes.checkboxWrapper}>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <Checkbox\n                      label=\"Knockout\"\n                      selected={tournamentsSettings.KO}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeKo(\n                          !tournamentsSettings.KO\n                        )\n                      }\n                    />\n                    <Checkbox\n                      label=\"Vanila\"\n                      selected={tournamentsSettings.freezout}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeFreezout(\n                          !tournamentsSettings.freezout\n                        )\n                      }\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Checkbox\n                      label=\"Normal\"\n                      selected={tournamentsSettings.normal}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeNormal(\n                          !tournamentsSettings.normal\n                        )\n                      }\n                    />\n                    <Checkbox\n                      label=\"Turbo\"\n                      selected={tournamentsSettings.turbo}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeTurbo(\n                          !tournamentsSettings.turbo\n                        )\n                      }\n                    />\n                    <Checkbox\n                      label=\"SuperTurbo\"\n                      selected={tournamentsSettings.superTurbo}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeSuperTurbo(\n                          !tournamentsSettings.superTurbo\n                        )\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"outlined\" size=\"large\" onClick={handleClose}>\n              Apply\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </SettingsWidgetWrapper>\n      <UpdateWidgetWrapper>\n        <IconButton onClick={handleClose} style={{ transform: \"scale(1.4)\" }}>\n          <RefreshIcon />\n        </IconButton>\n      </UpdateWidgetWrapper>\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport cx from \"classnames\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n} from \"@material-ui/core\";\nimport { green, pink } from \"@material-ui/core/colors\";\n\nimport { $filtredTableState, fetchUserReposFx } from \"../../store/Table\";\nimport { useState } from \"react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: green,\n    secondary: pink,\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      \"& .MuiTable-root\": {\n        minWidth: 650,\n      },\n    },\n    pagination: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginBottom: \"15px\",\n    },\n    head: {\n      background: \"#303F9F\",\n      fontWeight: 500,\n    },\n    tableContainer: {\n      marginBottom: theme.spacing(2),\n      boxShadow: \"0px 1px 0px 0px rgba(34, 60, 80, 0.2)\",\n      maxHeight: \"calc(100vh - 83px)\",\n    },\n    tableRow: {\n      \"&:hover\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    loaderContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"calc(100vh - 140px)\",\n    },\n    cell: {\n      maxWidth: \"300px\",\n      textAlign: \"center\",\n    },\n    cellHead: {\n      color: 'white'\n    },\n  })\n);\n\nexport const BaseTournaments = () => {\n  const loading = useStore(fetchUserReposFx.pending);\n  const classes = useStyles();\n\n  const tournaments = useStore($filtredTableState);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(20);\n\n  const handleChangePage = (\n    _: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const rows = tournaments.slice(\n    page * rowsPerPage,\n    page * rowsPerPage + rowsPerPage\n  );\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <TableContainer component={Paper} className={classes.tableContainer}>\n          <Table>\n            <TableHead className={classes.head}>\n              <TableRow>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  ID\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Start Reg\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Late Reg\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Name\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Network\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Buy-in\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Prizepool\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Ability\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Duration\n                </TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {!loading &&\n                rows.map((item) => (\n                  <TableRow\n                    key={item[\"@id\"]}\n                    className={classes.tableRow}\n                    style={{\n                      background:\n                        typeof item[\"percent\"] !== \"undefined\"\n                          ? item[\"percent\"] >= 0\n                            ? `rgba(140, 255, 0, ${Math.max(\n                                0.15,\n                                Number(item.percent) / 100\n                              )})` //green\n                            : `rgba(255, 0, 0, ${Math.max(\n                                0.2,\n                                Math.abs(item.percent) / 100\n                              )})` //red\n                          : \"\",\n                    }}\n                  >\n                    <TableCell className={classes.cell}>\n                      {item[\"@id\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@scheduledStartDate\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@lateRegEndDate\"] ?? \"-\"}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@name\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@network\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@bid\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@prizepool\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@ability\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@duration\"]}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {loading && (\n          <div className={classes.loaderContainer}>\n            <CircularProgress />\n          </div>\n        )}\n        {!rows.length && !loading && (\n          <div className={classes.loaderContainer}>The list is empty</div>\n        )}\n        <TablePagination\n          rowsPerPageOptions={[20, 50, 100]}\n          component=\"div\"\n          count={tournaments.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          className={classes.pagination}\n        />\n      </ThemeProvider>\n    </>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Link } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2),\n    marginTop: \"auto\",\n  },\n}));\n\nexport const BaseFooter = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography\n        variant=\"subtitle1\"\n        align=\"center\"\n        color=\"textSecondary\"\n        component=\"p\"\n      >\n        Contact us at{\" \"}\n        <Link href=\"mailto:pokerteamsoft@gmail.com\" color=\"inherit\">\n          pokerteamsoft@gmail.com\n        </Link>\n      </Typography>\n    </footer>\n  );\n};\n","import { useStore } from \"effector-react\";\n\nimport { $config, getConfigRequest } from \"../../store/Config\";\nimport {\n  OnPasswordSubmit,\n  PasswordSection,\n} from \"../../components/PasswordSection\";\nimport { useIntervalWorker } from \"../../hooks/useIntervalWorker\";\nimport { BaseSettings } from \"../../components/BaseSettings\";\nimport { BaseTournaments } from \"../../components/BaseTournaments\";\nimport { BaseFooter } from \"../../components/BaseFooter\";\n\nexport const MainPage = () => {\n  const config = useStore($config);\n\n  const { setIntervalWorker } = useIntervalWorker();\n\n  // выкидываем из сессии каждые 12 часов\n  setIntervalWorker(() => {\n    window.location.reload();\n  }, 12 * 60 * 60 * 1000);\n\n  const handlePasswordSubmit: OnPasswordSubmit = ({ password, login }) =>\n    getConfigRequest({ alias: login, password });\n\n  if (!config) {\n    return (\n      <>\n        <PasswordSection onSubmit={handlePasswordSubmit} />\n        <BaseFooter />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div>\n        <BaseSettings />\n        <BaseTournaments />\n      </div>\n    </>\n  );\n};\n","import { FC } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { styled } from \"@mui/system\";\n\nimport { AdminPage } from \"./AdminPage\";\nimport { InfoPage } from \"./InfoPage\";\nimport { MainPage } from \"./MainPage\";\n\nconst CustomToastContainer = styled(ToastContainer)({\n  \"& .Toastify__toast--error\": {\n    color: \"black\",\n    borderRadius: \"8px\",\n  },\n  \"& .Toastify__close-button\": {\n    color: \"black\",\n  },\n});\n\nexport const Pages: FC = () => {\n  return (\n    <>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/admin\" component={() => <AdminPage />} />\n            <Route path=\"/info\" component={() => <InfoPage />} />\n            <Route path=\"/*\" component={() => <MainPage />} />\n          </Switch>\n          <CustomToastContainer hideProgressBar={true} />\n        </BrowserRouter>\n        <div id=\"modal-root\" />\n    </>\n  );\n};\n","import { createStore } from \"effector\";\nimport { settingsModel } from \"./../../@types/settingsModel\";\n\nexport const $settings = createStore<settingsModel | null>(null);\n","import { createEffect } from \"effector\";\nimport api from \"../../api\";\nimport { $settings } from \"./state\";\n\nexport const fetchSettings = createEffect(async () => {\n  const result = await api.get<any>(\"/api/settings\");\n  return result;\n});\n\nexport const postFetchSettings = createEffect(async (json: any) => {\n  const result = await api.addSettings(json);\n  return result;\n});\n\n$settings.on(fetchSettings.doneData, (_, settings) => settings);\n","import { createStore } from \"effector\";\n\nimport { UpdateModel } from \"../../@types/updateModel\";\n\nexport const $update = createStore<UpdateModel>({\n  isUpdated: false,\n  timestamp: 0,\n});\n","import { createEffect } from \"effector\";\n\nimport api from \"../../api\";\nimport { $update } from \"./state\";\nimport { UpdateModel } from \"../../@types/updateModel\";\n\nexport const getUpdate = createEffect(\n  async () => await api.get<UpdateModel>(\"/api/update\")\n);\n\nexport const postUpdate = createEffect(\n  async () => {\n    await api.postUpdate();\n  }\n);\n\n$update.on(getUpdate.doneData, (_, update) => update);\n","import ReactDOM from \"react-dom\";\nimport { Pages } from \"./pages/index\";\nimport \"./assets/style/index.scss\";\nimport \"./store/init\";\n\nprocess.env.TZ = \"UTC\";\n\nReactDOM.render(<Pages />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BaseSettings_title__2YC8v\",\"inputWrapper\":\"BaseSettings_inputWrapper__3tJI2\",\"inputBuyIn\":\"BaseSettings_inputBuyIn__3_kH5\",\"menu\":\"BaseSettings_menu__2oBk9\",\"checkboxWrapper\":\"BaseSettings_checkboxWrapper__Sbg20\"};"],"sourceRoot":""}