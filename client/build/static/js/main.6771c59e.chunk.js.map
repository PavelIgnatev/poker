{"version":3,"sources":["components/NotificationService/NotificationService.module.scss","components/Loader/Loader.module.scss","components/BaseTable/BaseTable.module.scss","store/Alias/state.ts","api/ConfigApi.ts","api/index.ts","store/Alias/init.ts","constants.ts","components/LevelBlocks/index.tsx","components/NotificationService/NotificationService.tsx","store/Select/state.ts","store/Select/init.ts","store/Config/state.ts","store/Config/init.ts","store/Password/state.ts","components/PasswordSection/PasswordSection.tsx","store/Password/init.ts","components/SingleSelect/SingleSelect.tsx","components/Admin.AliasesSection/__Form/index.tsx","components/ConfirmationDialog/index.tsx","components/UserSettings/__Table/index.tsx","components/UserSettings/__Info/index.tsx","components/UserSettings/index.tsx","components/Admin.AliasesSection/__List/index.tsx","components/Admin.AliasesSection/index.tsx","store/Rules/state.ts","store/Rules/init.ts","components/BaseButton/BaseButton.tsx","components/ElementsToggle/index.tsx","helpers/getUniqueElemKeyGetter.tsx","components/Admin.RulesSection/constants.ts","components/Admin.RulesSection/__Rules/index.tsx","helpers/validateNumber.ts","components/Admin.RulesSection/index.tsx","store/Email/state.ts","store/Email/init.ts","components/EmailSection/index.tsx","pages/AdminPage/AdminPage.tsx","components/BaseTable/Thead/Thead.tsx","components/BaseTable/Tbody/Tbody.tsx","components/Loader/Loader.tsx","components/BaseTable/BaseTable.tsx","pages/InfoPage/InfoPage.tsx","hooks/useIntervalWorker.ts","components/NumberInput/NumberInput.tsx","components/MultiSelect/MultiSelect.tsx","components/Checkbox/Checkbox.tsx","store/Store/state.ts","store/Store/init.ts","helpers/getDate.ts","helpers/getTimeBySec.ts","helpers/isSat.ts","helpers/isSuperTurbo.ts","helpers/isTurbo.ts","helpers/isNormal.ts","store/Filter/state.ts","store/Filter/init.ts","helpers/dateToTimeString.ts","helpers/timeStringToMilliseconds.ts","store/Table/state.ts","helpers/getTimeByMS.ts","helpers/getStatus.ts","helpers/isRebuy.ts","helpers/getWeekday.ts","store/Table/init.ts","components/BaseSettings/BaseSettings.tsx","components/BaseTournaments/BaseTournaments.tsx","components/BaseFooter/BaseFooter.tsx","pages/MainPage/MainPage.tsx","pages/index.tsx","store/Settings/state.ts","store/Settings/init.ts","store/Update/state.ts","store/Update/init.ts","index.tsx","components/BaseSettings/BaseSettings.module.scss"],"names":["module","exports","$aliases","createStore","ConfigApi","_classCallCheck","_createClass","key","value","_postConfigRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","password","wrap","_context","prev","next","axios","post","abrupt","sent","stop","_x","_x2","apply","arguments","_patchConfigRequest","_callee2","alias","_context2","patch","_x3","_x4","_x5","_deleteConfig","_callee3","data","_context3","delete","_x6","Api","_ConfigApi","_inherits","_super","_createSuper","_get","url","params","_yield$axios","fullUrl","URLSearchParams","toString","t1","t0","t2","_addSettings","settings","_addAlias","_checkAdminPassword","_callee4","_context4","_postEmail","_callee5","email","_context5","_postRules","_callee6","rules","_context6","_x7","_patchRules","_callee7","_context7","_x8","_deleteRules","_callee8","_context8","_x9","_postUpdate","_callee9","_context9","api","aliasesEvents","createApi","addAlias","store","concat","_toConsumableArray","deleteAlias","filter","a","getAliasesRequest","createEffect","_ref","level","get","on","doneData","aliases","LEVELS_ARRAY","Array","fill","map","_","index","EFFMU","b","b_","with","LevelBlocks","selectedLevel","onLevelChange","_jsx","className","children","ButtonGroup","variant","Button","size","onClick","color","undefined","useLevelBlocks","_React$useState","React","useState","_React$useState2","_slicedToArray","setSelectedLevel","handleLevelChange","ErrNot","content","toast","error","classes","NotificationContent","TIMEZONES","label","TIMERANGE","NETWORKS","SHORT_NETWORKS","DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS","network","localStorage","getItem","JSON","parse","time","timezone","timezoneTable","prizepoolStart","prizepoolEnd","moneyStart","moneyEnd","KO","turbo","superTurbo","freezout","normal","dateStart","dateEnd","$tournamentsSettings","editableTournamentsSettings","handleChangeNetwork","setting","setItem","stringify","_objectSpread","handleChangeTime","handleChangeTimezonetable","handleChangeMoneyStart","handleChangeMoneyEnd","handleChangePrizepoolStart","handleChangePrizepoolEnd","handleChangeDateStart","String","Number","handleChangeDateEnd","handleChangeKo","handleChangeTurbo","handleChangeSuperTurbo","handleChangeFreezout","handleChangeNormal","handleChangeTimezone","$config","DEFAULT_EDITABLE_CONFIG","networks","$editableConfig","configDomain","createDomain","clearConfig","getConfigRequest","postConfigRequest","_ref2","patchConfigRequest","_ref4","_ref3","deleteConfigRequest","_ref5","deleteConfig","onCreateEffect","effect","fail","watch","_ref6","_error$response","_error$response$data","response","message","editableConfigEvents","setConfig","setConfig2","handleChangeEffmu","_ref7","effmu","_defineProperty","handleChangeLevel","_ref8","handleAllLevelsChange","Object","keys","reduce","acc","handleChangePassword","handleTimezoneChange","handleChangeEffmuAll","PasswordSectionType","$password","_localStorage$getItem","$isValidAdminPassword","v","setIsValidAdminPassword","validateAdminPasswordRequest","result","checkAdminPassword","theme","createTheme","useStyles","makeStyles","createStyles","formControl","minWidth","SingleSelect","options","onSingleChange","defaultValue","props","_objectWithoutProperties","_excluded","_useState","_useState2","selectedOption","setSelectedOption","ThemeProvider","_jsxs","FormControl","required","InputLabel","Select","onChange","event","option","find","target","MenuItem","form","display","flexDirection","alignItems","background","gap","maxWidth","marginTop","select","width","button","minHeight","AliasesSectionForm","postPending","useStore","pending","getPending","setAlias","_useState3","_useState4","setPassword","_useState5","_useState6","setTZone","adminPassword","handleSubmit","e","preventDefault","onSubmit","Typography","gutterBottom","TextField","name","currentTarget","autoComplete","disabled","fullWidth","_option$value","type","ConfirmationDialog","isOpen","title","onConfirm","onCancel","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","levelsOptions","tableCell","border","UserSettingsTable","renderContent","useMemo","defaultOption","TableRow","TableCell","TableContainer","component","Paper","Table","TableHead","TableBody","UserSettingsInfo","isAdminPage","defaultTimezoneOption","useEffect","handlePasswordChange","UserSettings","editableConfig","listItem","borderRadius","maxHeight","flexBasis","cursor","borderColor","list","flexWrap","justifyContent","AliasesSectionList","selectedUser","setSelectedUser","selectedAlias","setSelectedAlias","isModalOpen","setIsModalOpen","classes2","selectedConfig","newPassword","handleCloseModal","handleAliasClick","handleAliasDelete","handleDialogClose","Box","sx","textAlign","length","List","user","ListItem","ListItemText","primary","IconButton","stopPropagation","handleOpenModal","DeleteIcon","paper","style","Close","AliasesSection","_useLevelBlocks","isAllLevels","root","height","padding","boxShadow","input","marginBottom","PasswordSection","login","setLogin","isAlias","ALIAS","handleChangeLogin","useCallback","$rules","getRulesRequest","postRulesRequest","postRules","deleteRulesRequest","rule","deleteRules","patchRules","useElementsToggle","defaultElem","selectedElement","setElement","handleElementChange","elem","getUniqueElemKeyGetter","getter","prefix","RULES_TYPES_TO_FIELDS","BidEqual","placeholder","BidFrom","BidTo","PrizepoolEqual","PrizepoolFrom","PrizepoolTo","AbilityEqual","AbilityFrom","AbilityTo","EntrantsEqual","EntrantsFrom","EntrantsTo","StartRegEqual","StartRegFrom","StartRegTo","LateRegEqual","LateRegFrom","LateRegTo","Name","NotName","StartDay","Flags","Class","Structure","Game","RULES_TYPES","RulesSectionRules","savedRules","types","setTypes","values","setValues","handleAddRuleRow","editableRule","ruleIndex","i","_values$ruleIndex$i","_values$ruleIndex","handleSaveRule","handleTypeChange","rowIndex","_e$value","newTypes","newValues","handleValues","fieldIndex","status","uniqueElemKeyGetter","ruleRows","isComposite","isEditable","isSaveBtnDisabled","getIsSaveBtnDisabled","uniqueRuleKeyGetter","composite","ruleRow","ruleType","ruleValues","fields","isLastRow","uniqueRowKeyGetter","field","_field$options","elementType","isTime","isNum","uniqueFieldKeyGetter","Math","random","substr","backgroundColor","fontSize","outline","min","max","replace","validateNumber","splice","handleRemoveRuleRow","rowKey","fieldKeysCount","fieldKey","Status","Colors","ColorsValues","RulesSection","selectedEffmu","_useElementsToggle2","selectedKO","handleKOChange","_useElementsToggle3","selectedStatus","handleStatusChange","_useElementsToggle4","selectedColor","handleColorChange","selectedNetwork","setSelectedNetwork","_Fragment","k","$email","getEmail","postEmail","handleChangeEmail","EmailSection","validator","validate","AdminPage","isAdmin","ADMIN","Thead","_cx","_tournamentsSettings$","_cx2","_cx3","_cx4","_cx5","_cx6","_cx7","_cx8","setSortedKey","sortedKey","setIsReverse","isReverse","tournamentsSettings","handleClick","newSortedKey","thead","tr","cx","th","active","reverse","Tbody","tbody","slice","sort","_a$sortedKey","_b$sortedKey","dataA","toLowerCase","dataB","numberDataA","numberDataB","isNumberDataA","isNaN","isNumberDataB","item","_item$LateRegEndDate","td","Loader","wrapper","BaseTable","loading","section","id","table","nodata","InfoPage","setResult","urlSearchParams","window","location","search","fromEntries","entries","fetchData","handlers","worker","blob","Blob","workerScript","URL","createObjectURL","Worker","onmessage","createIntervalWorker","NumberInput","_ref$max","toUpperCase","newValue","parseInt","inputProps","MultiSelect","_ref$value","onMultiChange","Autocomplete","multiple","getOptionLabel","filterSelectedOptions","renderInput","Checkbox","selected","rest","FormControlLabel","control","MuiCheckbox","checked","$store","ability1","lastValue","getStoreRequest","getDate","date","Date","toLocaleString","hour12","day","month","hour","timeZone","minute","getTimeBySec","timestamp","hours","floor","minutes","seconds","padStart","join","isSat","tournament","_tournament$Name","_tournament$Flags","sat","includes","isSuperTurbo","isTurbo","_flags","_flags2","flags","superturbo","isNormal","$filterContent","fetchFilterContent","_Function","Function","dateToTimeString","ms","getUTCHours","getUTCMinutes","timeStringToMilliseconds","timeString","_timeString$split$map","split","_timeString$split$map2","$tableState","$filtredTableState","tournaments","getState","_$store$getState","_$tournamentsSettings","isKOQ","isTurboQ","isSTurboQ","isFreezoutQ","isNormalQ","_a$ScheduledStartDat","_b$ScheduledStartDat","_networks$network","_tournament$Stake","_tournament$Rake","_tournament$Schedule","_tournament$LateRegE","_ability1$network","_ability1$network$tim","_ability1$network$tim2","_tournament$Guarante","_tournament$PrizePoo","_tournament$Entrants","_tournament$ReEntrie","_tournament$Stake2","_tournament$TotalEnt","_tournament$ReEntrie2","_tournament$Stake3","_tournament$GameClas","_tournament$GameClas2","_tournament$Flags2","_ref2$level","bid","toFixed","isStartDate","isRegDate","startDate","regDate","bounty","getStatus","rebuy","isRebuy","currency","info","ability","duration","round","_$$","_$$$split","_$$$split$","$","prizepool","pp","weekday","console","log","difficulty","_filter","valid","percent","_item$ScheduledStart","_startDate$split","_startDate$split$","_startDate$split$$spl","_$tournamentsSettings2","res","fetchUserReposFx","_tournamentsSettings$2","_tournamentsSettings$3","SettingsWidgetWrapper","styled","position","bottom","spacing","right","palette","shadows","UpdateWidgetWrapper","BaseSettings","setIsOpen","handleClose","then","transform","SettingsIcon","menu","inputWrapper","inputBuyIn","checkboxWrapper","Grid","container","xs","Divider","RefreshIcon","green","secondary","pink","pagination","head","fontWeight","tableContainer","tableRow","action","hover","loaderContainer","cell","cellHead","BaseTournaments","page","setPage","rowsPerPage","setRowsPerPage","rows","abs","CircularProgress","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","footer","BaseFooter","MainPage","_useIntervalWorker","setIntervalWorker","handler","timeout","nanoid","postMessage","clearIntervalWorker","clearAllIntervals","forEach","useUnmount","useIntervalWorker","reload","CustomToastContainer","ToastContainer","Pages","BrowserRouter","Switch","Route","path","hideProgressBar","$settings","fetchSettings","json","addSettings","$update","isUpdated","getUpdate","postUpdate","update","process","TZ","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6771c59e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationSuccess\":\"NotificationService_NotificationSuccess__kWrEi\",\"icon\":\"NotificationService_icon__3lsCE\",\"NotificationError\":\"NotificationService_NotificationError__VPWSw\",\"NotificationContent\":\"NotificationService_NotificationContent__f35iv\",\"NotificationIcon\":\"NotificationService_NotificationIcon__gYYu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3hasz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"BaseTable_table__3Jlir\",\"thead\":\"BaseTable_thead__3LLdP\",\"tbody\":\"BaseTable_tbody__C8YI5\",\"tr\":\"BaseTable_tr__2Gh8U\",\"nodata\":\"BaseTable_nodata__oEkzP\",\"th\":\"BaseTable_th__1eiTa\",\"active\":\"BaseTable_active__17yZ7\",\"reverse\":\"BaseTable_reverse__2P3D9\",\"td\":\"BaseTable_td__2tYFY\",\"section\":\"BaseTable_section__24GGI\",\"select\":\"BaseTable_select__3Uud_\",\"effmu\":\"BaseTable_effmu__6LEo8\"};","import { createStore } from \"effector\";\n\nexport const $aliases = createStore<string[]>([]);\n","import { defaultConfigModel } from \"../@types/configModel\";\nimport axios from \"axios\";\nimport { ConfigModel } from \"../@types/configModel\";\n\nclass ConfigApi {\n  async postConfigRequest(config: defaultConfigModel, password: string) {\n    return await axios.post(`/api/config`, { config, password });\n  }\n  async patchConfigRequest(alias: string, config: ConfigModel, password: string) {\n    return await axios.patch(`/api/config`, { config, alias, password });\n  }\n  async deleteConfig(data: { alias: string; password: string }) {\n    return await axios.delete(`/api/config`, { data });\n  }\n}\nexport default ConfigApi;\n","import { rulesModel } from \"./../@types/rulesModel\";\nimport axios from \"axios\";\nimport ConfigApi from \"./ConfigApi\";\nclass Api extends ConfigApi {\n  async get<T>(url: string, params?: any) {\n    let fullUrl: string = url;\n    if (params) {\n      fullUrl += \"?\" + new URLSearchParams(params).toString();\n    }\n    return (await axios(fullUrl))?.data as T;\n  }\n  async addSettings(settings: any) {\n    return await axios.post(`/api/settings`, settings);\n  }\n  async addAlias(settings: any) {\n    return await axios.post(`/api/aliases`, settings);\n  }\n  async checkAdminPassword(password: string) {\n    return await axios.post(`/api/password/admin`, { password });\n  }\n  async postEmail(email: string) {\n    return await axios.post(`/api/email`, { email });\n  }\n  async postRules(rules: rulesModel[]) {\n    return await axios.post(`/api/rules`, { rules });\n  }\n  async patchRules(rules: rulesModel[]) {\n    return await axios.patch(`/api/rules`, { rules });\n  }\n  async deleteRules(data: rulesModel[]) {\n    return await axios.delete(`/api/rules`, { data });\n  }\n  async postUpdate() {\n    return await axios.post(`/api/update`);\n  }\n}\n\nconst api = new Api();\n\nexport default api;\n","import { createEffect, createApi } from \"effector\";\nimport { $aliases } from \"./state\";\nimport api from \"../../api\";\n\nexport const aliasesEvents = createApi($aliases, {\n  addAlias: (store, alias: string) => [...store, alias],\n  deleteAlias: (store, alias: string) => store.filter((a) => a !== alias),\n});\n\nexport const getAliasesRequest = createEffect(async (level?: number) => {\n  return await api.get<string[]>(\"/api/aliases\", { level });\n});\n\n$aliases.on(getAliasesRequest.doneData, (store, aliases) => aliases);\n","import { Effmu } from \"./@types/common\";\n\nexport const LEVELS_COUNT = 10;\nexport const LEVELS_ARRAY = new Array(LEVELS_COUNT).fill(null).map((_, index) => index + 1);\n\nexport const EFFMU: Effmu[] = [\"A\"];\n","import b_ from \"b_\";\nimport React, { FC } from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\n\nimport { LEVELS_ARRAY } from \"../../constants\";\n\ninterface Props {\n  selectedLevel: number | null;\n  onLevelChange: (level: number) => () => void;\n}\n\nexport const ALL_LEVELS = -1;\n\nconst b = b_.with(\"level-blocks\");\n\nexport const LevelBlocks: FC<Props> = ({ selectedLevel, onLevelChange }) => (\n  <div className={b()}>\n    <ButtonGroup variant=\"contained\" aria-label=\"Number Selector\">\n      {LEVELS_ARRAY.concat([-1]).map((level) => (\n        <Button\n          key={level}\n          size=\"large\"\n          onClick={onLevelChange(level)}\n          variant={selectedLevel === level ? \"outlined\" : \"contained\"}\n          color={selectedLevel === level ? \"primary\" : undefined}\n        >\n          {level < 0 ? \"all\" : level}\n        </Button>\n      ))}\n    </ButtonGroup>\n  </div>\n);\n\nexport const useLevelBlocks = () => {\n  const [selectedLevel, setSelectedLevel] = React.useState<number | null>(null);\n\n  const handleLevelChange = (level: number) => () => {\n    if (level === selectedLevel) {\n      setSelectedLevel(null);\n    } else {\n      setSelectedLevel(level);\n    }\n  };\n\n  return { selectedLevel, handleLevelChange };\n};\n","import { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport classes from \"./NotificationService.module.scss\";\n\n//Уведомление о успехе\nexport function SucNot(content: string) {\n  toast.success(<div className={classes.NotificationContent}>{content}</div>);\n}\n\n//Уведомление о ошибке\nexport function ErrNot(content: string) {\n  toast.error(<div className={classes.NotificationContent}>{content}</div>);\n}\n","import { tournamentsSettingsProps } from \"./types\";\nimport { createStore } from \"effector\";\n\nexport const TIMEZONES = [\n  { value: \"-43200000\", label: \"UTC-12 (IDLW)\" },\n  { value: \"-39600000\", label: \"UTC-11 (NT)\" },\n  { value: \"-36000000\", label: \"UTC-10 (HST)\" },\n  { value: \"-34200000\", label: \"UTC-9:30 (ACST)\" },\n  { value: \"-32400000\", label: \"UTC-9 (AKT)\" },\n  { value: \"-28800000\", label: \"UTC-8 (PT)\" },\n  { value: \"-25200000\", label: \"UTC-7 (MT)\" },\n  { value: \"-21600000\", label: \"UTC-6 (CT)\" },\n  { value: \"-18000000\", label: \"UTC-5 (ET)\" },\n  { value: \"-16200000\", label: \"UTC-4:30 (VET)\" },\n  { value: \"-14400000\", label: \"UTC-4 (AT)\" },\n  { value: \"-12600000\", label: \"UTC-3:30 (NST)\" },\n  { value: \"-10800000\", label: \"UTC-3 (BRT)\" },\n  { value: \"-7200000\", label: \"UTC-2 (AT)\" },\n  { value: \"-3600000\", label: \"UTC-1 (AZOT)\" },\n  { value: \"0\", label: \"UTC\" },\n  { value: \"1800000\", label: \"UTC+0:30 (NFT)\" },\n  { value: \"3600000\", label: \"UTC+1 (CET)\" },\n  { value: \"5400000\", label: \"UTC+1:30 (MET)\" },\n  { value: \"7200000\", label: \"UTC+2 (EET)\" },\n  { value: \"10800000\", label: \"UTC+3 (MSK)\" },\n  { value: \"12600000\", label: \"UTC+3:30 (IRST)\" },\n  { value: \"14400000\", label: \"UTC+4 (AZT)\" },\n  { value: \"16200000\", label: \"UTC+4:30 (AFT)\" },\n  { value: \"18000000\", label: \"UTC+5 (PKT)\" },\n  { value: \"20700000\", label: \"UTC+5:45 (NPT)\" },\n  { value: \"21600000\", label: \"UTC+6 (ALMT)\" },\n  { value: \"23400000\", label: \"UTC+6:30 (MST)\" },\n  { value: \"25200000\", label: \"UTC+7 (ICT)\" },\n  { value: \"27000000\", label: \"UTC+7:30 (MMT)\" },\n  { value: \"28800000\", label: \"UTC+8 (AWST)\" },\n  { value: \"31500000\", label: \"UTC+8:45 (CIT)\" },\n  { value: \"32400000\", label: \"UTC+9 (JST)\" },\n  { value: \"34200000\", label: \"UTC+9:30 (ACDT)\" },\n  { value: \"36000000\", label: \"UTC+10 (AEST)\" },\n  { value: \"37800000\", label: \"UTC+10:30 (AEDT)\" },\n  { value: \"39600000\", label: \"UTC+11 (AET)\" },\n  { value: \"43200000\", label: \"UTC+12 (NZST)\" },\n];\n\nexport const TIMERANGE = [\n  { value: \"600\", label: \"<10 minutes\" },\n  { value: \"3600\", label: \"<1 hour\" },\n  { value: \"10800\", label: \"<3 hours\" },\n  { value: \"21600\", label: \"<6 hours\" },\n  { value: \"43200\", label: \"<12 hours\" },\n  { value: \"86400\", label: \"<24 hours\" },\n  { value: \"604800\", label: \"<1 week\" },\n];\n\nexport const EFFMU = [{ value: \"A\", label: \"A\" }];\n\nexport const NETWORKS = [\n  { value: \"PokerStars\", label: \"PokerStars\" },\n  { value: \"PokerStars(FR-ES-PT)\", label: \"PokerStars(FR-ES-PT)\" },\n  { value: \"PartyPoker\", label: \"PartyPoker\" },\n  { value: \"888Poker\", label: \"888Poker\" },\n  { value: \"Chico\", label: \"Chico\" },\n  { value: \"WPN\", label: \"WPN\" },\n  { value: \"iPoker\", label: \"iPoker\" },\n  { value: \"GGNetwork\", label: \"GGNetwork\" },\n  { value: \"Winamax.fr\", label: \"Winamax.fr\" },\n];\n\nexport const SHORT_NETWORKS = [\n  { value: \"PokerStars\", label: \"PokerStars\" },\n  { value: \"PokerStars(FR-ES-PT)\", label: \"PokerStars(FR-ES-PT)\" },\n  { value: \"PartyPoker\", label: \"PartyPoker\" },\n  { value: \"888Poker\", label: \"888Poker\" },\n  { value: \"Chico\", label: \"Chico\" },\n  { value: \"WPN\", label: \"WPN\" },\n  { value: \"iPoker\", label: \"iPoker\" },\n  { value: \"GGNetwork\", label: \"GGNetwork\" },\n  { value: \"Winamax.fr\", label: \"Winamax.fr\" },\n  { value: \"all\", label: \"all\" },\n];\n\nexport const DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS: tournamentsSettingsProps = {\n  network: localStorage.getItem(\"networks\")\n    ? JSON.parse(localStorage.getItem(\"networks\") as string)\n    : null,\n  time: TIMERANGE[2],\n  timezone: TIMEZONES[15],\n  timezoneTable: null,\n  prizepoolStart: 0,\n  prizepoolEnd: 10000000,\n  moneyStart: 0,\n  moneyEnd: 10000,\n  KO: true,\n  turbo: true,\n  superTurbo: true,\n  freezout: true,\n  normal: true,\n  dateStart: \"00\",\n  dateEnd: \"24\",\n};\n\nexport const $tournamentsSettings = createStore<tournamentsSettingsProps>(\n  DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS\n);\n","import { createApi } from \"effector\";\nimport { MultiValue, SingleValue } from \"react-select\";\nimport { selectModel } from \"../../@types/selectsModel\";\nimport { $tournamentsSettings, TIMEZONES } from \"./state\";\n\nexport const editableTournamentsSettings = createApi($tournamentsSettings, {\n  handleChangeNetwork: (setting, network: MultiValue<selectModel>) => {\n    localStorage.setItem(\"networks\", JSON.stringify(network));\n    return {\n      ...setting,\n      network,\n    };\n  },\n  handleChangeTime: (setting, time: SingleValue<selectModel>) => ({\n    ...setting,\n    time,\n  }),\n  handleChangeTimezonetable: (setting, timezoneTable: string) => ({\n    ...setting,\n    timezoneTable,\n  }),\n  handleChangeMoneyStart: (setting, moneyStart: number) => ({\n    ...setting,\n    moneyStart,\n  }),\n  handleChangeMoneyEnd: (setting, moneyEnd: number) => ({\n    ...setting,\n    moneyEnd,\n  }),\n  handleChangePrizepoolStart: (setting, prizepoolStart: number) => ({\n    ...setting,\n    prizepoolStart,\n  }),\n  handleChangePrizepoolEnd: (setting, prizepoolEnd: number) => ({\n    ...setting,\n    prizepoolEnd,\n  }),\n  handleChangeDateStart: (setting, dateStart: string) => ({\n    ...setting,\n    dateStart: String(Number(dateStart) >= 24 ? 24 : dateStart),\n  }),\n  handleChangeDateEnd: (setting, dateEnd: string) => ({\n    ...setting,\n    dateEnd: String(Number(dateEnd) >= 24 ? 24 : dateEnd),\n  }),\n  handleChangeKo: (setting, KO: boolean) => ({\n    ...setting,\n    KO,\n  }),\n  handleChangeTurbo: (setting, turbo: boolean) => ({\n    ...setting,\n    turbo,\n  }),\n  handleChangeSuperTurbo: (setting, superTurbo: boolean) => ({\n    ...setting,\n    superTurbo,\n  }),\n  handleChangeFreezout: (setting, freezout: boolean) => ({\n    ...setting,\n    freezout,\n  }),\n  handleChangeNormal: (setting, normal: boolean) => ({\n    ...setting,\n    normal,\n  }),\n  handleChangeTimezone: (setting, timezone: typeof TIMEZONES[15]) => ({\n    ...setting,\n    timezone,\n  }),\n});\n","import { createStore } from \"effector\";\n\nimport { TIMEZONES } from \"../Select\";\nimport { ConfigModel } from \"./../../@types/configModel\";\n\nexport const $config = createStore<ConfigModel | null>(null);\n\nexport const DEFAULT_EDITABLE_CONFIG: ConfigModel = {\n  alias: \"\",\n  networks: {},\n  password: \"\",\n  timezone: TIMEZONES[15].value,\n};\nexport const $editableConfig = createStore<ConfigModel>(\n  DEFAULT_EDITABLE_CONFIG\n);\n","import { createDomain, createApi } from \"effector\";\n\nimport { ConfigModel, defaultConfigModel } from \"../../@types/configModel\";\nimport api from \"../../api\";\nimport { ErrNot } from \"../../components/NotificationService\";\n\nimport { $config, $editableConfig, DEFAULT_EDITABLE_CONFIG } from \"./state\";\nimport { Effmu, Level, Network } from \"../../@types/common\";\n\nconst DEFAULT_ERROR_MESSAGE =\n  \"An error has occurred. You are denied access to the service.\";\n\nconst configDomain = createDomain();\n\nexport const { clearConfig } = createApi($config, {\n  clearConfig: () => null,\n});\n\nexport const getConfigRequest = configDomain.createEffect(\n  async (params: { alias: string; password: string }) => {\n    return await api.get<ConfigModel>(\"/api/config\", params);\n  }\n);\n\nexport const postConfigRequest = configDomain.createEffect(\n  async (params: { config: defaultConfigModel; password: string }) => {\n    const { config, password } = params;\n\n    await api.postConfigRequest(config, password);\n  }\n);\n\nexport const patchConfigRequest = configDomain.createEffect(\n  async ({\n    alias,\n    config,\n    password,\n  }: {\n    alias: string;\n    config: ConfigModel;\n    password: string;\n  }) => {\n    await api.patchConfigRequest(alias, config, password);\n    await getConfigRequest({ alias, password: config.password });\n  }\n);\n\nexport const deleteConfigRequest = configDomain.createEffect(\n  async (params: { alias: string; password: string }) => {\n    await api.deleteConfig(params);\n    clearConfig();\n  }\n);\n\nconfigDomain.onCreateEffect((effect) => {\n  effect.fail.watch(({ error }: { error: any }) =>\n    ErrNot(error?.response?.data?.message || DEFAULT_ERROR_MESSAGE)\n  );\n});\n\nexport const editableConfigEvents = createApi($editableConfig, {\n  setConfig: (_, config: ConfigModel) => config,\n  setConfig2: (_, config: ConfigModel) => config,\n  clearConfig: (_) => DEFAULT_EDITABLE_CONFIG,\n  handleChangeEffmu: (\n    config,\n    { network, effmu }: { network: Network; effmu: Effmu }\n  ) => ({\n    ...config,\n    networks: {\n      ...config.networks,\n      [network]: { ...config.networks[network], effmu },\n    },\n  }),\n  handleChangeLevel: (\n    config,\n    { network, level }: { network: Network; level: Level }\n  ) => ({\n    ...config,\n    networks: {\n      ...config.networks,\n      [network]: { ...config.networks[network], level },\n    },\n  }),\n  handleAllLevelsChange: (config, level: Level) => {\n    const { networks } = config;\n\n    return {\n      ...config,\n      networks: Object.keys(networks).reduce(\n        (acc, network) => ({\n          ...acc,\n          [network]: { level },\n        }),\n        {}\n      ),\n    };\n  },\n  handleChangePassword: (config, password: string) => ({\n    ...config,\n    password,\n  }),\n  handleTimezoneChange: (config, timezone) => ({ ...config, timezone }),\n  handleChangeEffmuAll: (config, effmu) => ({\n    ...config,\n    networks: Object.keys(config.networks).reduce(\n      (acc, network) => ({\n        ...acc,\n        [network]: { ...config.networks[network], effmu },\n      }),\n      {}\n    ),\n  }),\n});\n\n$config.on(getConfigRequest.doneData, (_, config) => config);\n","import { createStore } from \"effector\";\n\nexport const $password = createStore<string>(localStorage.getItem(\"password\") ?? \"\");\n\nexport const $isValidAdminPassword = createStore<boolean>(false);\n","import { useStore } from \"effector-react\";\nimport { FC, useCallback, useState } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { $password, handleChangePassword } from \"../../store/Password\";\n\nimport \"./PasswordSection.scss\";\n\nexport enum PasswordSectionType {\n  ALIAS = \"alias\",\n  ADMIN = \"admin\",\n}\n\nexport type OnPasswordSubmit = ({\n  password,\n  login,\n}: {\n  password: string;\n  login: string;\n}) => void;\n\ninterface Props {\n  onSubmit: OnPasswordSubmit;\n  type?: PasswordSectionType;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"calc(100vh - 60px)\",\n    },\n    form: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: \"20px\",\n      borderRadius: \"10px\",\n      background: \"white\",\n      boxShadow: \"0px 0px 8px 2px rgba(34, 60, 80, 0.2)\",\n    },\n    input: {\n      marginBottom: \"20px\",\n      minWidth: \"300px\",\n    },\n    button: {\n      minHeight: \"50px\",\n      minWidth: \"150px\",\n    },\n  })\n);\n\nexport const PasswordSection: FC<Props> = ({ onSubmit, type }) => {\n  const classes = useStyles();\n  const [login, setLogin] = useState(localStorage.getItem(\"login\") ?? \"\");\n  const password = useStore($password);\n\n  const isAlias = type === PasswordSectionType.ALIAS || !type;\n\n  const handleChangeLogin = useCallback((v: string) => {\n    localStorage.setItem(\"login\", v);\n    setLogin(v);\n  }, []);\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      onSubmit({ password, login });\n    },\n    [onSubmit, password, login]\n  );\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={handleSubmit} className={classes.form}>\n        {isAlias && (\n          <TextField\n            label=\"Alias\"\n            variant=\"outlined\"\n            className={classes.input}\n            autoComplete=\"off\"\n            value={login}\n            onChange={(e) => handleChangeLogin(e.currentTarget.value)}\n          />\n        )}\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          className={classes.input}\n          value={password}\n          onChange={(e) => handleChangePassword(e.currentTarget.value)}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import { createApi, createEffect } from \"effector\";\nimport api from \"../../api\";\nimport { $isValidAdminPassword, $password } from \"./state\";\n\nexport const { handleChangePassword } = createApi($password, {\n  handleChangePassword: (_: string, v: string) => {\n    localStorage.setItem(\"password\", v);\n\n    return v;\n  },\n});\n\nexport const { setIsValidAdminPassword } = createApi($isValidAdminPassword, {\n  setIsValidAdminPassword: (_: boolean, v: boolean) => v,\n});\n\nexport const validateAdminPasswordRequest = createEffect(\n  async (password: string) => {\n    const result = await api.checkAdminPassword(password);\n    setIsValidAdminPassword(!!result.data);\n  }\n);\n","import React, { useState } from \"react\";\nimport { makeStyles, createStyles, ThemeProvider } from \"@mui/styles\";\nimport { createTheme } from \"@mui/material/styles\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select, { SelectChangeEvent, SelectProps } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nconst theme = createTheme();\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    formControl: {\n      minWidth: 120,\n    },\n  })\n);\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props extends Omit<SelectProps, \"multiple\"> {\n  label: string;\n  value?: any;\n  options: Option[];\n  defaultValue: Option | null;\n  onSingleChange: (v: Option | null) => void;\n}\n\nexport const SingleSelect: React.FC<Props> = ({\n  label,\n  value,\n  options,\n  onSingleChange,\n  defaultValue,\n  ...props\n}) => {\n  const classes = useStyles();\n  const [selectedOption, setSelectedOption] = useState<Option | null>(\n    defaultValue\n  );\n\n  const handleChange = (event: SelectChangeEvent<unknown>) => {\n    const option = options.find(\n      (option) => option.value === event.target.value\n    );\n    setSelectedOption(option || null);\n    onSingleChange(option || null);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <FormControl variant=\"outlined\" className={classes.formControl} required>\n        <InputLabel>{label}</InputLabel>\n        <Select\n          value={value >= 0 ? value : selectedOption?.value}\n          onChange={handleChange}\n          label={label}\n          {...props}\n        >\n          {options.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </ThemeProvider>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { FC, FormEvent, useState } from \"react\";\nimport { TextField, Button, Typography } from \"@mui/material\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nimport { getAliasesRequest } from \"../../../store/Alias\";\nimport { postConfigRequest } from \"../../../store/Config\";\nimport { $password } from \"../../../store/Password\";\nimport { TIMEZONES } from \"../../../store/Select\";\n\nimport { SingleSelect } from \"../../SingleSelect\";\n\ninterface AliasesSectionFormProps {\n  selectedLevel: number | null;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    form: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      background: \"white\",\n      gap: \"10px\",\n      maxWidth: \"300px\",\n      marginTop: \"15px\",\n    },\n    select: {\n      width: \"300px\",\n    },\n    button: {\n      minHeight: \"50px\",\n      width: \"300px\",\n    },\n  })\n);\n\nexport const AliasesSectionForm: FC<AliasesSectionFormProps> = ({\n  selectedLevel,\n}) => {\n  const classes = useStyles();\n  const postPending = useStore(postConfigRequest.pending)\n  const getPending = useStore(getAliasesRequest.pending)\n  const pending = postPending || getPending\n\n  const [alias, setAlias] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [timezone, setTZone] = useState<string>(\"0\");\n  const adminPassword = useStore($password);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    await postConfigRequest({\n      config: {\n        alias,\n        level: selectedLevel ?? 0,\n        password,\n        timezone,\n      },\n      password: adminPassword,\n    });\n\n    await getAliasesRequest(selectedLevel ?? 0);\n\n    setAlias(\"\");\n    setPassword(\"\");\n    setTZone(TIMEZONES[15].value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={classes.form}>\n      <Typography variant=\"h6\" gutterBottom>\n        Creating a new account\n      </Typography>\n      <TextField\n        label=\"Alias\"\n        name=\"login\"\n        value={alias}\n        onChange={(e) => setAlias(e.currentTarget.value)}\n        autoComplete=\"off\"\n        required\n        disabled={pending}\n        fullWidth\n      />\n      <TextField\n        label=\"Password\"\n        name=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.currentTarget.value)}\n        autoComplete=\"off\"\n        disabled={pending}\n        required\n        fullWidth\n      />\n      <SingleSelect\n        className={classes.select}\n        label=\"Timezone\"\n        options={TIMEZONES}\n        defaultValue={TIMEZONES[15]}\n        required\n        fullWidth\n        disabled={pending}\n        onSingleChange={(option) => setTZone(option?.value ?? \"0\")}\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={pending}\n        className={classes.button}\n      >\n        Add\n      </Button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n} from \"@mui/material\";\n\ntype ConfirmationDialogProps = {\n  isOpen: boolean;\n  title: string;\n  content: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\n\nexport const ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  isOpen,\n  title,\n  content,\n  onConfirm,\n  onCancel,\n}) => {\n  return (\n    <Dialog open={isOpen} onClose={onCancel}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <Typography>{content}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button onClick={onConfirm}>Confirm</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import b_ from \"b_\";\nimport { FC, useMemo } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Networks } from \"../../../@types/common\";\nimport { SelectOption } from \"../../../@types/selectsModel\";\nimport { LEVELS_ARRAY } from \"../../../constants\";\nimport { editableConfigEvents } from \"../../../store/Config\";\n\nimport { SingleSelect } from \"../../SingleSelect\";\n\ninterface Props {\n  networks: Networks;\n}\n\nconst b = b_.with(\"user-settings-table\");\n\nconst levelsOptions: SelectOption<number>[] = LEVELS_ARRAY.map((level) => ({\n  value: level,\n  label: level,\n}));\n\nconst useStyles = makeStyles({\n  tableCell: {\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n  },\n});\n\nexport const UserSettingsTable: FC<Props> = ({ networks }) => {\n  const classes = useStyles();\n\n  const renderContent = useMemo(\n    () =>\n      Object.keys(networks).map((network) => {\n        const { level } = networks[network];\n\n        const defaultOption = levelsOptions.find(\n          (option) => option.value === level\n        );\n\n        const handleLevelChange = (option: SelectOption<number>) =>\n          editableConfigEvents.handleChangeLevel({\n            network,\n            level: option.value,\n          });\n\n        return (\n          <TableRow key={network}>\n            <TableCell className={classes.tableCell}><b>{network}</b></TableCell>\n            <TableCell className={classes.tableCell}>\n              <SingleSelect\n                label=\"Level\"\n                options={levelsOptions as any}\n                value={defaultOption?.value as any}\n                defaultValue={defaultOption as any}\n                className={b(\"select\")}\n                onSingleChange={handleLevelChange as any}\n              />\n            </TableCell>\n          </TableRow>\n        );\n      }),\n    [networks, classes.tableCell]\n  );\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\" className={classes.tableCell}>\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.tableCell}><b>Network</b></TableCell>\n            <TableCell className={classes.tableCell}><b>Level</b></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{renderContent}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { FC, useEffect } from \"react\";\nimport b_ from \"b_\";\nimport { TextField, Typography } from \"@mui/material\";\n\nimport { SelectOption } from \"../../../@types/selectsModel\";\nimport { ConfigModel } from \"../../../@types/configModel\";\nimport { editableConfigEvents } from \"../../../store/Config\";\nimport { editableTournamentsSettings, TIMEZONES } from \"../../../store/Select\";\n\nimport { LEVELS_ARRAY } from \"../../../constants\";\nimport { SingleSelect } from \"../../SingleSelect\";\n\nconst levelsOptions: SelectOption<number>[] = LEVELS_ARRAY.map((level) => ({\n  value: level,\n  label: level,\n}));\n\ninterface Props {\n  config: ConfigModel;\n  isAdminPage?: boolean;\n}\n\nconst b = b_.with(\"user-settings-info\");\n\nexport const UserSettingsInfo: FC<Props> = ({ config, isAdminPage }) => {\n  const { alias, password, timezone } = config;\n\n  const defaultTimezoneOption =\n    TIMEZONES.find((option) => option.value === timezone) || TIMEZONES[15];\n\n  const handlePasswordChange = (password: string) =>\n    editableConfigEvents.handleChangePassword(password);\n  const handleTimezoneChange = (option: SelectOption<typeof TIMEZONES[15]>) =>\n    editableConfigEvents.handleTimezoneChange(option.value);\n  const handleLevelChange = (option: SelectOption<number>) => {\n    editableConfigEvents.handleAllLevelsChange(option.value as any);\n  };\n\n  useEffect(() => {\n    editableTournamentsSettings.handleChangeTimezone(defaultTimezoneOption);\n  }, [defaultTimezoneOption]);\n\n  return (\n    <div className={b()}>\n      <div className={b(\"header\")}>\n        <div className={b(\"header-conent\")}>\n          <Typography variant=\"h5\">Alias: {alias}</Typography>\n        </div>\n      </div>\n      <div className={b(\"settings\")}>\n        <div className={b(\"settings-wrapper\")}>\n          <div className={b(\"timezones-wrapper\")}>\n            <SingleSelect\n              label=\"Change all levels\"\n              options={levelsOptions as any}\n              defaultValue={null}\n              className={b(\"select\")}\n              onSingleChange={handleLevelChange as any}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={b(\"settings\")}>\n        <div className={b(\"settings-wrapper\")}>\n          <div className={b(\"password-wrapper\")}>\n            <SingleSelect\n              label=\"Timezone\"\n              className={b(\"select\")}\n              options={TIMEZONES}\n              required\n              autoComplete=\"off\"\n              defaultValue={defaultTimezoneOption}\n              onSingleChange={handleTimezoneChange as any}\n            />\n          </div>\n        </div>\n      </div>\n      {isAdminPage && (\n        <div className={b(\"password-wrapper\")}>\n          <TextField\n            label=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => handlePasswordChange(e.currentTarget.value)}\n            autoComplete=\"off\"\n            required\n            fullWidth\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\nimport b_ from \"b_\";\n\nimport { ConfigModel } from \"../../@types/configModel\";\nimport { $editableConfig, editableConfigEvents } from \"../../store/Config\";\n\nimport { UserSettingsTable } from \"./__Table\";\nimport { UserSettingsInfo } from \"./__Info\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  config: ConfigModel;\n}\n\nexport const b = b_.with(\"user-settings\");\n\nexport const UserSettings = ({ config }: Props) => {\n  const editableConfig = useStore($editableConfig);\n  const { alias, networks } = editableConfig;\n\n  React.useEffect(() => {\n    editableConfigEvents.setConfig(config);\n\n    return editableConfigEvents.clearConfig;\n  }, [config]);\n\n  if (!alias) {\n    return null;\n  }\n\n  return (\n    <div className={b()}>\n      <div className={b(\"content\")}>\n        <div className={b(\"content-main-block\")}>\n          <UserSettingsInfo config={editableConfig} isAdminPage />\n        </div>\n        <UserSettingsTable networks={networks} />\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport b_ from \"b_\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Close } from \"@mui/icons-material\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Dialog,\n  Box,\n  Typography,\n  IconButton,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useStore } from \"effector-react\";\n\nimport { $password } from \"../../../store/Password\";\nimport {\n  $aliases,\n  aliasesEvents,\n  getAliasesRequest,\n} from \"../../../store/Alias\";\nimport {\n  $config,\n  $editableConfig,\n  deleteConfigRequest,\n  getConfigRequest,\n  patchConfigRequest,\n} from \"../../../store/Config\";\nimport { ConfirmationDialog } from \"../../ConfirmationDialog\";\nimport { UserSettings } from \"../../UserSettings\";\n\nexport const b = b_.with(\"aliases-section\");\n\nconst useStyles = makeStyles(() => ({\n  listItem: {\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n    borderRadius: \"4px\",\n    maxHeight: \"56px\",\n    flexBasis: \"calc(50% - 10px)\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      borderColor: \"black\",\n    },\n  },\n  list: {\n    gap: \"10px\",\n    marginTop: \"9px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nexport const AliasesSectionList = ({\n  selectedLevel,\n}: {\n  selectedLevel: number;\n}) => {\n  const [selectedUser, setSelectedUser] = useState<any>(null);\n  const [selectedAlias, setSelectedAlias] = useState<any>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const classes2 = useStyles();\n  const pending = useStore(getAliasesRequest.pending);\n\n  const password = useStore($password);\n  const aliases = useStore($aliases);\n  const selectedConfig = useStore($config);\n  const editableConfig = useStore($editableConfig);\n\n  const { alias, networks, password: newPassword, ...props } = editableConfig;\n\n  const handleOpenModal = (user: string) => {\n    setSelectedAlias(user);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleAliasClick = async (alias: string) => {\n    setSelectedUser(alias);\n    await getConfigRequest({ alias, password });\n  };\n\n  const handleAliasDelete = async () => {\n    aliasesEvents.deleteAlias(selectedAlias);\n    await deleteConfigRequest({ alias: selectedAlias, password });\n    handleCloseModal();\n  };\n\n  const handleDialogClose = async () => {\n    setSelectedUser(null);\n    await patchConfigRequest({\n      alias,\n      config: {\n        ...props,\n        networks,\n        password: newPassword,\n        alias,\n      },\n      password,\n    });\n\n    if (selectedLevel === -1) {\n      getAliasesRequest();\n    } else if (selectedLevel !== null) {\n      getAliasesRequest(selectedLevel);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginTop: \"15px\",\n        textAlign: \"center\",\n      }}\n    >\n      {aliases.length > 0 && (\n        <Typography variant=\"h6\" gutterBottom>\n          List of aliases\n        </Typography>\n      )}\n      <List className={classes2.list}>\n        {aliases.map((user) => (\n          <ListItem\n            key={user}\n            onClick={() => {\n              if (!pending) {\n                handleAliasClick(user);\n              }\n            }}\n            className={classes2.listItem}\n          >\n            <ListItemText primary={user} />\n            <IconButton\n              color=\"error\"\n              aria-label=\"delete user\"\n              onClick={(e) => {\n                if (!pending) {\n                  e.stopPropagation();\n                  handleOpenModal(user);\n                }\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Dialog\n        open={selectedUser !== null}\n        onClose={handleDialogClose}\n        classes={{ paper: b(\"dialog\") }}\n      >\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <IconButton onClick={handleDialogClose}>\n            <Close />\n          </IconButton>\n        </div>\n        {selectedConfig && <UserSettings config={selectedConfig} />}\n      </Dialog>\n      <ConfirmationDialog\n        isOpen={isModalOpen}\n        title=\"Are you sure?\"\n        content=\"Do you really want to perform this action?\"\n        onCancel={handleCloseModal}\n        onConfirm={handleAliasDelete}\n      />\n    </Box>\n  );\n};\n","import b_ from \"b_\";\nimport React from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { getAliasesRequest } from \"../../store/Alias\";\nimport { LevelBlocks, ALL_LEVELS, useLevelBlocks } from \"../LevelBlocks\";\nimport { AliasesSectionForm } from \"./__Form\";\n\nimport { AliasesSectionList } from \"./__List\";\n\nimport \"./index.scss\";\n\nexport const b = b_.with(\"aliases-section\");\n\nexport const AliasesSection = () => {\n  const { selectedLevel, handleLevelChange } = useLevelBlocks();\n  const isAllLevels = selectedLevel === ALL_LEVELS;\n\n  React.useEffect(() => {\n    if (isAllLevels) {\n      getAliasesRequest();\n    } else if (selectedLevel !== null) {\n      getAliasesRequest(selectedLevel);\n    }\n  }, [selectedLevel, isAllLevels]);\n\n  return (\n    <section className={b()}>\n      <Typography variant=\"h5\" gutterBottom>\n        Alias control\n      </Typography>\n      <LevelBlocks\n        selectedLevel={selectedLevel}\n        onLevelChange={handleLevelChange}\n      />\n      {selectedLevel !== null && (\n        <div className={b(\"content-wrapper\")}>\n          {!isAllLevels && <AliasesSectionForm selectedLevel={selectedLevel} />}\n          <AliasesSectionList selectedLevel={selectedLevel} />\n        </div>\n      )}\n    </section>\n  );\n};\n","import { rulesModel } from \"./../../@types/rulesModel\";\nimport { createStore } from \"effector\";\n\nexport const $rules = createStore<Array<rulesModel[]> | null>(null);\n","import { rulesModel } from \"../../@types/rulesModel\";\nimport { createDomain } from \"effector\";\n\nimport api from \"../../api\";\nimport { ErrNot } from \"../../components/NotificationService\";\n\nimport { $rules } from \"./state\";\n\nconst DEFAULT_ERROR_MESSAGE = \"An error has occurred. You are denied access to the service.\";\n\nconst configDomain = createDomain();\n\nexport const getRulesRequest = configDomain.createEffect(\n  async (params: { color: string; level: string; network: string; status: string; KO: string }) => {\n    return await api.get<Array<rulesModel[]>>(\"/api/rules\", params);\n  },\n);\n\nexport const postRulesRequest = configDomain.createEffect(async (rules: rulesModel[]) => {\n  await api.postRules(rules);\n  await getRulesRequest(rules[0]);\n});\n\nexport const deleteRulesRequest = configDomain.createEffect(async (rule: rulesModel[]) => {\n  await api.deleteRules(rule);\n  await getRulesRequest(rule[0]);\n});\n\nexport const patchRulesRequest = configDomain.createEffect(\n  async ({ rule }: { rule: rulesModel[] }) => {\n    await api.patchRules(rule);\n    await getRulesRequest(rule[0]);\n  },\n);\n\nconfigDomain.onCreateEffect((effect) => {\n  effect.fail.watch(({ error }: { error: any }) =>\n    ErrNot(error?.response?.data?.message || DEFAULT_ERROR_MESSAGE),\n  );\n});\n\n$rules.on(getRulesRequest.doneData, (_, rules) => rules);\n","import b_ from \"b_\";\nimport cx from \"classnames\";\nimport { CSSProperties, FC } from \"react\";\n\nimport \"./BaseButton.scss\";\n\ninterface BaseButtonProps {\n  onClick: () => void;\n  className?: string;\n  disabled?: boolean;\n  clear?: boolean;\n  red?: boolean;\n  green?: boolean;\n  autoFocus?: boolean;\n  style?: CSSProperties;\n}\n\nconst b = b_.with(\"base-button\");\n\n// todo все пропсы для обычной кнопки, и вписать их в типы как наследование, а не каждый отдельно\nexport const BaseButton: FC<BaseButtonProps> = ({\n  onClick,\n  className,\n  children,\n  disabled,\n  clear,\n  red,\n  green,\n  autoFocus,\n  style,\n}) => {\n  return (\n    <button\n      className={cx(b({ clear, red, green }), className)}\n      onClick={onClick}\n      disabled={disabled}\n      style={style}\n      autoFocus={autoFocus}\n    >\n      {children}\n    </button>\n  );\n};\n","import b_ from \"b_\";\nimport cx from \"classnames\";\nimport { useState } from \"react\";\n\nimport { BaseButton } from \"../BaseButton\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  selectedElement: string;\n  onElementChange: (element: any) => () => void;\n  elements: string[];\n  mix?: string;\n}\n\nconst b = b_.with(\"elements-toggle\");\n\nexport const ElementsToggle = ({ selectedElement, onElementChange, elements, mix }: Props) => (\n  <div className={cx(b(), mix)}>\n    {elements.map((elem) => (\n      <BaseButton\n        className={b(\"button\")}\n        onClick={onElementChange(elem)}\n        clear={elem !== selectedElement}\n        key={elem}\n      >\n        {elem}\n      </BaseButton>\n    ))}\n  </div>\n);\n\n// @ts-ignore ругается на T = \"\", типа T может не быть стрингой (но она extends от нее!!)\nexport function useElementsToggle<T extends string>(defaultElem: T = \"\") {\n  const [selectedElement, setElement] = useState(defaultElem);\n  const handleElementChange = (elem: T) => () => {\n    if (elem !== selectedElement) {\n      setElement(elem);\n    }\n  };\n\n  return { selectedElement, handleElementChange };\n}\n","export const getUniqueElemKeyGetter = (elem: string) => {\n  const getter = (prefix?: string) => getUniqueElemKeyGetter(elem + prefix);\n  getter.key = elem;\n  return getter;\n};\n","import { rulesType } from \"../../@types/rulesModel\";\n\n// если здесь чет меняем то меняем и на сервере\nexport const RULES_TYPES_TO_FIELDS = {\n  BidEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  BidFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  BidTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  PrizepoolEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  PrizepoolFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  PrizepoolTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  AbilityEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  AbilityFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  AbilityTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  EntrantsEqual: [\n    {\n      type: \"number\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  EntrantsFrom: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  EntrantsTo: [\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  StartRegEqual: [\n    {\n      type: \"time\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  StartRegFrom: [\n    {\n      type: \"time\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  StartRegTo: [\n    {\n      type: \"time\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  LateRegEqual: [\n    {\n      type: \"time\",\n      placeholder: \"Equal\",\n      options: null,\n    },\n  ],\n  LateRegFrom: [\n    {\n      type: \"time\",\n      placeholder: \"From\",\n      options: null,\n    },\n  ],\n  LateRegTo: [\n    {\n      type: \"time\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  Name: [\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  NotName: [\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  StartDay: [\n    {\n      type: \"string\",\n      placeholder: \"Weekday\",\n      options: [\n        \"Sunday\",\n        \"Monday\",\n        \"Thusday\",\n        \"Webnesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ],\n    },\n  ],\n  Flags: [\n    {\n      type: \"string\",\n      options: [\n        \"rebuy\",\n        \"od\",\n        \"deepstack\",\n        \"sat\",\n        \"!rebuy\",\n        \"!od\",\n        \"!deepstack\",\n        \"!sat\",\n      ],\n      placeholder: \"Flags\",\n    },\n  ],\n  Class: [\n    {\n      type: \"string\",\n      options: [\"sng\", \"scheduled\", \"!sng\", \"!scheduled\"],\n      placeholder: \"Class\",\n    },\n  ],\n  Structure: [\n    {\n      type: \"string\",\n      options: [\n        \"NL\",\n        \"PL\",\n        \"PNL\",\n        \"FL\",\n        \"ML\",\n        \"!NL\",\n        \"!PL\",\n        \"!PNL\",\n        \"!FL\",\n        \"!ML\",\n      ],\n      placeholder: \"Structure\",\n    },\n  ],\n  Game: [\n    {\n      type: \"string\",\n      options: [\"H\", \"H6\", \"O\", \"OHL\", \"!H\", \"!H6\", \"!O\", \"!OHL\"],\n      placeholder: \"Game\",\n    },\n  ],\n};\n\nexport const RULES_TYPES = Object.keys(RULES_TYPES_TO_FIELDS) as rulesType[];\n","import { useState } from \"react\";\nimport { TextField, Button, IconButton } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport { useStore } from \"effector-react\";\nimport { rulesModel, rulesType } from \"../../../@types/rulesModel\";\nimport { getUniqueElemKeyGetter } from \"../../../helpers/getUniqueElemKeyGetter\";\nimport {\n  $rules,\n  deleteRulesRequest,\n  postRulesRequest,\n} from \"../../../store/Rules\";\nimport { validateNumber } from \"../../../helpers/validateNumber\";\n\nimport { RULES_TYPES_TO_FIELDS, RULES_TYPES } from \"../constants\";\nimport { b } from \"../index\";\nimport { SingleSelect } from \"../../SingleSelect\";\n\ntype RulesSectionRulesProps = {\n  color: string;\n  level: string;\n  network: string;\n  status: string;\n  KO: string;\n};\ntype valuesType = Array<Record<string, number | string>>;\n\ntype Field = {\n  type: string;\n  placeholder: string;\n  options: string[];\n};\n\nexport const RulesSectionRules = (props: RulesSectionRulesProps) => {\n  const savedRules = useStore($rules) as Array<rulesModel[]>;\n\n  const [types, setTypes] = useState<rulesType[]>([RULES_TYPES[0]]);\n  const [values, setValues] = useState<valuesType>([{}]);\n\n  const handleAddRuleRow = () => {\n    setTypes((types) => [...types, RULES_TYPES[0]]);\n    setValues((values) => [...values, {}]);\n  };\n\n  const handleRemoveRuleRow = (ruleIndex: number) => {\n    setTypes((types) => {\n      const newTypes = [...types];\n      newTypes.splice(ruleIndex, 1);\n      return newTypes;\n    });\n    setValues((values) => {\n      const newValues = [...values];\n      newValues.splice(ruleIndex, 1);\n      return newValues;\n    });\n  };\n\n  const editableRule = types.map((type, ruleIndex) => ({\n    type,\n    values: new Array(RULES_TYPES_TO_FIELDS[type].length)\n      .fill(null)\n      .map((_, i) => values?.[ruleIndex]?.[i] ?? \"\"),\n    ...props,\n  }));\n  const rules: rulesModel[][] = [\n    editableRule,\n    ...(savedRules ? savedRules : []),\n  ];\n\n  const handleSaveRule = () => {\n    postRulesRequest(editableRule);\n    setValues([{}]);\n  };\n\n  const handleTypeChange = (rowIndex: number) => (e: any) => {\n    setTypes((types) => {\n      const newTypes = [...types];\n      newTypes[rowIndex] = e?.value ?? RULES_TYPES[0];\n      return newTypes;\n    });\n    setValues((values) => {\n      const newValues = [...values];\n      newValues[rowIndex] = {};\n      return newValues;\n    });\n  };\n\n  const handleValues = (\n    value: string | number,\n    rowIndex: number,\n    fieldIndex: number\n  ) => {\n    setValues((values) => {\n      const newValues = [...values];\n\n      if (!newValues[rowIndex]) {\n        newValues[rowIndex] = {};\n      }\n      newValues[rowIndex][fieldIndex] = value;\n\n      return newValues;\n    });\n  };\n\n  const { color, level, network, status, KO } = props;\n  const uniqueElemKeyGetter = getUniqueElemKeyGetter(\n    color + level + network + status + KO\n  );\n\n  return (\n    <div className={b(\"rules\")}>\n      {rules.map((ruleRows, ruleIndex) => {\n        const isComposite = ruleRows.length > 1;\n        const isEditable = ruleIndex === 0;\n\n        const isSaveBtnDisabled = getIsSaveBtnDisabled(ruleRows, values);\n\n        const uniqueRuleKeyGetter = uniqueElemKeyGetter(\"rule\" + ruleIndex);\n\n        return (\n          <div\n            className={b(\"rule\", { composite: isComposite })}\n            key={uniqueRuleKeyGetter.key}\n          >\n            <div className={b(\"rule-stripe\")} />\n            {ruleRows.map((ruleRow, rowIndex) => {\n              const { type: ruleType, values: ruleValues } = ruleRow;\n              const fields = RULES_TYPES_TO_FIELDS[ruleType] as Field[];\n              const isLastRow = rowIndex === ruleRows.length - 1;\n\n              const uniqueRowKeyGetter = uniqueRuleKeyGetter(\n                \"row\" + ruleType + rowIndex\n              );\n\n              return (\n                <div className={b(\"rule-row\")} key={uniqueRowKeyGetter.key}>\n                  <SingleSelect\n                    options={RULES_TYPES?.map((type) => ({\n                      value: type,\n                      label: type,\n                    }))}\n                    disabled={!isEditable}\n                    label=\"Modifier\"\n                    required\n                    style={{ width: \"160px\" }}\n                    onSingleChange={handleTypeChange(rowIndex)}\n                    className={b(\"rule-row-select\")}\n                    defaultValue={{ value: ruleType, label: ruleType }}\n                  />\n                  {fields.map((field, fieldIndex) => {\n                    const { type: elementType, placeholder, options } = field;\n\n                    const isTime = elementType === \"time\";\n                    const isNum = elementType === \"number\";\n                    const value = String(ruleValues?.[fieldIndex] || \"\");\n\n                    const uniqueFieldKeyGetter = uniqueRowKeyGetter(\n                      \"field\" + fieldIndex\n                    );\n\n                    if (field.options?.length) {\n                      return (\n                        <SingleSelect\n                          // className={b(\"rule-row-field\", { select: true })}\n                          label={placeholder}\n                          defaultValue={value ? { value, label: value } : null}\n                          options={options?.map((option) => ({\n                            value: option,\n                            label: option,\n                          }))}\n                          disabled={!isEditable}\n                          onSingleChange={(e) => {\n                            const value = e?.value || \"\";\n                            handleValues(value, rowIndex, fieldIndex);\n                          }}\n                          key={String(Math.random()).substr(2, 12)}\n                        />\n                      );\n                    }\n\n                    if (isTime) {\n                      return (\n                        <input\n                          key={String(Math.random()).substr(2, 12)}\n                          type=\"time\"\n                          disabled={!isEditable}\n                          style={{\n                            backgroundColor: \"white\",\n                            borderRadius: \"4px\",\n                            color: `${\n                              isEditable ? \"black\" : \"rgba(0, 0, 0, 0.38)\"\n                            }`,\n                            fontSize: \"16px\",\n                            padding: \"10px\",\n                            border: \"none\",\n                            outline: `1px solid ${\n                              isEditable ? \"black\" : \"#bdbdbd\"\n                            }`,\n                            borderColor: \"#333333\",\n                          }}\n                          value={value}\n                          onChange={(e) => {\n                            const value = e.currentTarget.value;\n                            handleValues(value, rowIndex, fieldIndex);\n                          }}\n                          min=\"00:00\"\n                          max=\"23:59\"\n                        />\n                      );\n                    }\n\n                    return (\n                      <TextField\n                        label={placeholder}\n                        name={placeholder}\n                        value={value}\n                        autoComplete=\"off\"\n                        required\n                        disabled={!isEditable}\n                        onChange={(e) => {\n                          const value = e.currentTarget.value;\n\n                          handleValues(\n                            isNum ? validateNumber(value) : value,\n                            rowIndex,\n                            fieldIndex\n                          );\n                        }}\n                        key={uniqueFieldKeyGetter(\"input\").key}\n                      />\n                    );\n                  })}\n                  {isEditable && (\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete user\"\n                      style={{ width: \"56px\" }}\n                      onClick={() => handleRemoveRuleRow(rowIndex)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  )}\n                  {!isEditable && isLastRow && (\n                    <IconButton\n                      color=\"error\"\n                      aria-label=\"delete user\"\n                      style={{ width: \"56px\" }}\n                      onClick={() => {\n                        deleteRulesRequest(rules[ruleIndex]);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  )}\n                </div>\n              );\n            })}\n\n            {isEditable && (\n              <div className={b(\"rule-row\")}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleAddRuleRow}\n                >\n                  Add row\n                </Button>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={handleSaveRule}\n                  disabled={isSaveBtnDisabled}\n                >\n                  Save rule\n                </Button>\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst getIsSaveBtnDisabled = (ruleRows: rulesModel[], values: valuesType) => {\n  for (let rowKey = 0; rowKey < ruleRows.length; rowKey += 1) {\n    if (!values[rowKey]) {\n      return true;\n    }\n    const fieldKeysCount = RULES_TYPES_TO_FIELDS[ruleRows[rowKey].type].length;\n    for (let fieldKey = 0; fieldKey < fieldKeysCount; fieldKey += 1) {\n      if (!values[rowKey][fieldKey]) {\n        return true;\n      }\n    }\n  }\n\n  return ruleRows.length === 0;\n};\n","export const validateNumber = (value: string) => {\n  return value\n    .replace(/[^\\d.]*/g, \"\")\n    .replace(/([.])[.]+/g, \"$1\")\n    .replace(/^[^\\d]*(\\d+([.]\\d{0,5})?).*$/g, \"$1\");\n};\n","import b_ from \"b_\";\nimport { useEffect, useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nimport { Effmu } from \"../../@types/common\";\nimport { SelectOption } from \"../../@types/selectsModel\";\nimport { EFFMU } from \"../../constants\";\nimport { getRulesRequest } from \"../../store/Rules\";\nimport { SHORT_NETWORKS } from \"../../store/Select\";\n\nimport { SingleSelect } from \"../SingleSelect\";\nimport { useElementsToggle } from \"../ElementsToggle\";\nimport { LevelBlocks, useLevelBlocks } from \"../LevelBlocks\";\nimport { RulesSectionRules } from \"./__Rules\";\n\nimport \"./index.scss\";\n\ntype KOType = \"Knockout\" | \"Freeze-out\" | \"all\";\ntype StatusType = \"Normal\" | \"Turbo\" | \"SuperTurbo\" | \"all\";\ntype ColorsType = \"blue\" | \"green\" | \"orange\";\nconst KO: KOType[] = [\"Knockout\", \"Freeze-out\", \"all\"];\nconst Status: StatusType[] = [\"Normal\", \"Turbo\", \"SuperTurbo\", \"all\"];\nconst Colors: ColorsType[] = [\"blue\", \"green\", \"orange\"];\nconst ColorsValues = [\n  { value: \"blue\", label: \"Default\" },\n  { value: \"orange\", label: \"Invert\" },\n  { value: \"green\", label: \"Exception\" },\n];\n\nexport const b = b_.with(\"rules-section\");\n\nexport const RulesSection = () => {\n  const { selectedLevel, handleLevelChange } = useLevelBlocks();\n  const { selectedElement: selectedEffmu } = useElementsToggle<Effmu | \"all\">(\n    EFFMU[0]\n  );\n  const { selectedElement: selectedKO, handleElementChange: handleKOChange } =\n    useElementsToggle<KOType>(KO[0]);\n\n  const {\n    selectedElement: selectedStatus,\n    handleElementChange: handleStatusChange,\n  } = useElementsToggle<StatusType>(Status[0]);\n  const {\n    selectedElement: selectedColor,\n    handleElementChange: handleColorChange,\n  } = useElementsToggle<ColorsType>(Colors[0]);\n  const [selectedNetwork, setSelectedNetwork] = useState(\n    SHORT_NETWORKS[0].value\n  );\n  const handleNetworkChange = (option: SelectOption<string>) =>\n    setSelectedNetwork(option.value ?? SHORT_NETWORKS[0].value);\n\n  useEffect(() => {\n    if (selectedLevel !== null) {\n      getRulesRequest({\n        color: selectedColor,\n        level: selectedLevel + selectedEffmu,\n        network: selectedNetwork,\n        status: selectedStatus,\n        KO: selectedKO,\n      });\n    }\n  }, [\n    selectedLevel,\n    selectedColor,\n    selectedEffmu,\n    selectedNetwork,\n    selectedStatus,\n    selectedKO,\n  ]);\n\n  return (\n    <section className={b()}>\n      <Typography variant=\"h5\" gutterBottom>\n        Rules control\n      </Typography>\n      <LevelBlocks\n        selectedLevel={selectedLevel}\n        onLevelChange={handleLevelChange}\n      />\n      {selectedLevel !== null && (\n        <>\n          <div className={b(\"filter\")}>\n            <SingleSelect\n              label=\"Network\"\n              className={b(\"select\")}\n              options={SHORT_NETWORKS}\n              required\n              autoComplete=\"off\"\n              defaultValue={SHORT_NETWORKS[0]}\n              onSingleChange={handleNetworkChange as any}\n            />\n            <SingleSelect\n              label=\"Format\"\n              className={b(\"select\")}\n              options={KO.map((k) => ({ value: k, label: k }))}\n              required\n              autoComplete=\"off\"\n              defaultValue={{ value: selectedKO, label: selectedKO }}\n              onSingleChange={(e) => handleKOChange(e?.value as any)()}\n            />\n            <SingleSelect\n              label=\"Speed\"\n              className={b(\"select\")}\n              options={Status.map((k) => ({ value: k, label: k }))}\n              required\n              autoComplete=\"off\"\n              defaultValue={{ value: selectedStatus, label: selectedStatus }}\n              onSingleChange={(e) => handleStatusChange(e?.value as any)()}\n            />\n            <SingleSelect\n              label=\"Rule\"\n              className={b(\"select\")}\n              options={ColorsValues}\n              required\n              autoComplete=\"off\"\n              defaultValue={{ value: selectedColor, label: selectedColor }}\n              onSingleChange={(e) => handleColorChange(e?.value as any)()}\n            />\n          </div>\n          <RulesSectionRules\n            color={selectedColor}\n            level={selectedLevel + selectedEffmu}\n            network={selectedNetwork}\n            status={selectedStatus}\n            KO={selectedKO}\n          />\n        </>\n      )}\n    </section>\n  );\n};\n","import { createStore } from \"effector\";\n\nexport const $email = createStore<string>(\"\");\n","import { emailModel } from \"../../@types/emailModel\";\nimport { createEffect, createApi } from \"effector\";\nimport api from \"../../api\";\nimport { $email } from \"./state\";\n\nexport const getEmail = createEffect(async () => {\n  const result = await api.get<emailModel>(\"/api/email\");\n\n  return result.email;\n});\n\nexport const postEmail = createEffect(async ({ email }: { email: string }) => {\n  await api.postEmail(email);\n});\n\nexport const { handleChangeEmail } = createApi($email, {\n  handleChangeEmail: (_, email: string) => email,\n});\n\n$email.on(getEmail.doneData, (_, email) => email);\n","import b_ from \"b_\";\nimport { useStore } from \"effector-react\";\nimport { TextField, Button, Typography } from \"@mui/material\";\nimport validator from \"email-validator\";\n\nimport { $email, handleChangeEmail, postEmail } from \"../../store/Email\";\n\nimport \"./index.scss\";\n\nexport const b = b_.with(\"email-section\");\n\nexport const EmailSection = () => {\n  const email = useStore($email);\n\n  return (\n    <section className={b()}>\n      <Typography\n        variant=\"h5\"\n        gutterBottom\n        style={{\n          marginTop: \"10px\",\n        }}\n      >\n        Email control \n      </Typography>\n      <TextField\n        variant=\"outlined\"\n        label=\"Email\"\n        autoComplete=\"off\"\n        style={{ width: \"250px\" }}\n        value={email}\n        onChange={(e) => handleChangeEmail(e.currentTarget.value)}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{\n          display: \"block\",\n          width: \"250px\",\n          marginTop: \"10px\",\n        }}\n        onClick={() => postEmail({ email })}\n        disabled={!validator.validate(email)}\n      >\n        Save\n      </Button>\n    </section>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { FC, useEffect } from \"react\";\n\nimport { AliasesSection } from \"../../components/Admin.AliasesSection\";\nimport {\n  OnPasswordSubmit,\n  PasswordSection,\n  PasswordSectionType,\n} from \"../../components/PasswordSection\";\nimport {\n  $isValidAdminPassword,\n  validateAdminPasswordRequest,\n} from \"../../store/Password\";\nimport { RulesSection } from \"../../components/Admin.RulesSection\";\nimport { EmailSection } from \"../../components/EmailSection\";\nimport { getEmail } from \"../../store/Email\";\n\nexport const AdminPage: FC = () => {\n  const isAdmin = useStore($isValidAdminPassword);\n\n  useEffect(() => {\n    getEmail();\n  }, [isAdmin]);\n\n  const handlePasswordSubmit: OnPasswordSubmit = ({ password }) =>\n    validateAdminPasswordRequest(password);\n\n  if (!isAdmin) {\n    return (\n      <PasswordSection\n        onSubmit={handlePasswordSubmit}\n        type={PasswordSectionType.ADMIN}\n      />\n    );\n  }\n\n  return (\n    <>\n      <EmailSection />\n      <RulesSection />\n      <AliasesSection />\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { useCallback } from \"react\";\nimport cx from \"classnames\";\nimport { $tournamentsSettings } from \"../../../store/Select\";\nimport classes from \"../BaseTable.module.scss\";\n\ninterface TheadProps {\n  setSortedKey: React.Dispatch<React.SetStateAction<string | null>>;\n  sortedKey: string | null;\n  setIsReverse: React.Dispatch<React.SetStateAction<boolean>>;\n  isReverse: boolean;\n}\n\nexport const Thead = ({\n  setSortedKey,\n  sortedKey,\n  setIsReverse,\n  isReverse,\n}: TheadProps) => {\n  const tournamentsSettings = useStore($tournamentsSettings);\n\n  const handleClick = useCallback(\n    (newSortedKey: string) => {\n      if (sortedKey === newSortedKey) {\n        setIsReverse((prev) => !prev);\n      } else {\n        setSortedKey(newSortedKey);\n      }\n    },\n    [sortedKey, setIsReverse, setSortedKey]\n  );\n\n  return (\n    <thead className={classes.thead}>\n      <tr className={classes.tr}>\n        <th\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@date\",\n            [classes.reverse]: isReverse,\n          })}\n          onClick={() => handleClick(\"@date\")}\n        >\n          Start\n          {tournamentsSettings.timezone?.label\n            ? ` (${tournamentsSettings.timezone.label})`\n            : \"\"}\n        </th>\n        <th\n          onClick={() => handleClick(\"@numberLateRegEndDate\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@numberLateRegEndDate\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Late Reg\n        </th>\n        <th\n          onClick={() => handleClick(\"@network\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@network\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Network\n        </th>\n        <th\n          onClick={() => handleClick(\"@name\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@name\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Name\n        </th>\n        <th\n          onClick={() => handleClick(\"@bid\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@bid\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Buy-in\n        </th>\n        <th\n          onClick={() => handleClick(\"@prizepool\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@prizepool\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Prizepool\n        </th>\n        <th\n          onClick={() => handleClick(\"@ability\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@ability\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Ability\n        </th>\n        <th\n          onClick={() => handleClick(\"@duration\")}\n          className={cx(classes.th, {\n            [classes.active]: sortedKey === \"@duration\",\n            [classes.reverse]: isReverse,\n          })}\n        >\n          Duration\n        </th>\n      </tr>\n    </thead>\n  );\n};\n","import { FC } from \"react\";\n\nimport classes from \"../BaseTable.module.scss\";\n\ntype TbodyProps = {\n  sortedKey: string | null;\n  data: Array<Record<string, any>>;\n  isReverse: boolean;\n};\n\nexport const Tbody: FC<TbodyProps> = ({ data, sortedKey, isReverse }) => {\n  return (\n    <tbody className={classes.tbody}>\n      {data\n        .slice(0)\n        .sort((a, b) => {\n          if (!sortedKey) {\n            return 0;\n          }\n          const dataA = String(a[sortedKey] ?? \"\").toLowerCase();\n          const dataB = String(b[sortedKey] ?? \"\").toLowerCase();\n\n          const numberDataA = Number(dataA);\n          const numberDataB = Number(dataB);\n\n          const isNumberDataA = !isNaN(numberDataA);\n          const isNumberDataB = !isNaN(numberDataB);\n\n          if (isNumberDataA && isNumberDataB) {\n            return isReverse\n              ? numberDataB - numberDataA\n              : numberDataA - numberDataB;\n          }\n          if (dataA < dataB) {\n            return isReverse ? 1 : -1;\n          }\n          if (dataA > dataB) {\n            return isReverse ? -1 : 1;\n          }\n          return 0;\n        })\n        .map((item, index: number) => {\n          return (\n            <tr className={classes.tr} key={index}>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@scheduledStartDate\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@lateRegEndDate\"] ?? \"-\"}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@network\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@name\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@bid\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@prizepool\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@ability\"]}\n              </td>\n              <td\n                className={classes.td}\n                style={{ backgroundColor: item.color, marginBottom: \"1px\" }}\n              >\n                {item[\"@duration\"]}\n              </td>\n            </tr>\n          );\n        })}\n    </tbody>\n  );\n};\n","import { FC } from \"react\";\nimport classes from \"./Loader.module.scss\";\n\nexport const Loader: FC = () => {\n  return (\n    <div className={classes.wrapper}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { Thead } from \"./Thead\";\nimport { Tbody } from \"./Tbody/Tbody\";\nimport { Loader } from \"../Loader/Loader\";\n\nimport classes from \"./BaseTable.module.scss\";\n\ntype BaseTableProps = {\n  data?: Array<Record<string, any>>;\n  loading: boolean;\n};\n\nexport const BaseTable: FC<BaseTableProps> = ({ data, loading }) => {\n  const [sortedKey, setSortedKey] = useState<string | null>(\"@date\");\n  const [isReverse, setIsReverse] = useState(false);\n\n  if (loading)\n    return (\n      <section className={classes.section}>\n        <Loader />\n      </section>\n    );\n\n  if (!data?.length)\n    return <section className={classes.nodata}>Nothing found</section>;\n\n  if (!data)\n    return (\n      <section className={classes.nodata}>\n        Select the options you are interested in and click the \"Update\" button\n      </section>\n    );\n\n  return (\n    <section className={classes.section}>\n      <table id=\"grid\" className={classes.table}>\n        <Thead\n          setSortedKey={setSortedKey}\n          sortedKey={sortedKey}\n          setIsReverse={setIsReverse}\n          isReverse={isReverse}\n        />\n        <Tbody data={data} sortedKey={sortedKey} isReverse={isReverse} />\n      </table>\n    </section>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport api from \"../../api\";\nimport { BaseTable } from \"../../components/BaseTable\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\n\nexport const InfoPage: FC = () => {\n  const [result, setResult] = useState<tableCellModel[] | undefined>(undefined);\n\n  useEffect(() => {\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n\n    const fetchData = async () => {\n      const data = await api.get<tableCellModel[]>(\"/api/info\", params);\n\n      setResult(data);\n    };\n\n    fetchData();\n  }, []);\n\n  return <BaseTable data={result as any} loading={!result} />;\n};\n","import { nanoid } from \"nanoid\";\nimport { useCallback } from \"react\";\nimport { useUnmount } from \"react-use\";\n\nexport type IntervalWorkerHandler = () => void;\nexport type IntervalWorkerId = string;\nexport type IntervalWorkerTimeout = number;\n\nconst handlers: Record<IntervalWorkerId, IntervalWorkerHandler> = {};\n\nconst createIntervalWorker = () => {\n  const blob = new Blob([\n    `let intervalById = {};\n        onmessage = function ({data: { name, timeout, id }}) {\n            switch (name) {\n                case 'setInterval':\n                    intervalById[id] = setInterval(function () {\n                        postMessage({ id });\n                    }, timeout);\n                    break;\n                case 'clearInterval':\n                    if (intervalById.hasOwnProperty(id)) {\n                        clearInterval(intervalById[id]);\n                        delete intervalById[id];\n                    }\n                    break;\n            }\n        };\n    `,\n  ]);\n\n  const workerScript = URL.createObjectURL(blob);\n\n  const worker = new Worker(workerScript);\n\n  worker.onmessage = ({ data: { id } }) => {\n    if (id in handlers) {\n      handlers[id]();\n    }\n  };\n\n  return worker;\n};\n\nconst worker = createIntervalWorker();\n\nexport const useIntervalWorker = () => {\n  const setIntervalWorker = useCallback(\n    (handler: IntervalWorkerHandler, timeout: IntervalWorkerTimeout) => {\n      if (!worker) {\n        return;\n      }\n\n      const id = nanoid();\n      handlers[id] = handler;\n      worker.postMessage({\n        name: \"setInterval\",\n        timeout,\n        id,\n      });\n\n      return id;\n    },\n    []\n  );\n\n  const clearIntervalWorker = useCallback((id: IntervalWorkerId) => {\n    if (!worker) {\n      return;\n    }\n    delete handlers[id];\n    worker.postMessage({\n      name: \"clearInterval\",\n      id,\n    });\n  }, []);\n\n  const clearAllIntervals = useCallback(() => {\n    Object.keys(handlers).forEach((id) => {\n      clearIntervalWorker(id);\n    });\n  }, [clearIntervalWorker]);\n\n  useUnmount(clearAllIntervals);\n\n  return { setIntervalWorker, clearIntervalWorker };\n};\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\ninterface NumberInputProps {\n  value: number;\n  onChange: (value: number) => void;\n  label?: string;\n  className?: string;\n  max?: number;\n}\n\nexport const NumberInput = ({\n  value,\n  onChange,\n  label,\n  className,\n  max = 10000,\n}: NumberInputProps) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = parseInt(event.target.value, 10);\n\n    if (!isNaN(newValue) && newValue >= 0 && newValue <= max) {\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <TextField\n      type=\"number\"\n      className={className}\n      label={label?.toUpperCase()}\n      value={value}\n      onChange={handleChange}\n      inputProps={{ min: 0, max }}\n      autoComplete=\"off\"\n    />\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete, { AutocompleteProps } from \"@mui/material/Autocomplete\";\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\ninterface Props\n  extends Omit<AutocompleteProps<Option, true, false, false>, \"renderInput\"> {\n  label: string;\n  value: Option[];\n  options: Option[];\n  onMultiChange: (v: Option[]) => {};\n}\n\nexport const MultiSelect: React.FC<Props> = ({\n  label,\n  value = [],\n  options,\n  onMultiChange,\n  ...props\n}) => {\n  const handleChange = (_: React.ChangeEvent<{}>, value: Option[]) => {\n    onMultiChange(value);\n  };\n\n  return (\n    <div>\n      <Autocomplete\n        multiple\n        options={options}\n        getOptionLabel={(option) => option.label}\n        filterSelectedOptions\n        value={value ?? []}\n        onChange={handleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            label={label}\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n        )}\n        {...props}\n      />\n    </div>\n  );\n};\n","import { ChangeEvent } from \"react\";\nimport {\n  Checkbox as MuiCheckbox,\n  FormControlLabel,\n  CheckboxProps as MuiCheckboxProps,\n} from \"@mui/material\";\n\ntype CheckboxProps = {\n  selected: boolean;\n  onChange: (selected: boolean) => void;\n  label?: string;\n} & Omit<MuiCheckboxProps, \"checked\" | \"onChange\">;\n\nexport const Checkbox = ({\n  selected,\n  onChange,\n  label,\n  ...rest\n}: CheckboxProps) => {\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={\n        <MuiCheckbox checked={selected} onChange={handleOnChange} {...rest} />\n      }\n      label={label}\n    />\n  );\n};\n","import { createStore } from \"effector\";\n\nexport interface StoreModel {\n  ability1: any;\n  lastValue: any;\n}\n\nexport const DEFAULT_STORE: StoreModel = {\n  ability1: {},\n  lastValue: 1,\n};\n\nexport const $store = createStore<StoreModel>(DEFAULT_STORE);\n","import { createDomain } from \"effector\";\n\nimport api from \"../../api\";\n\nimport { $store, StoreModel } from \"./state\";\n\nconst storeDomain = createDomain();\n\nexport const getStoreRequest = storeDomain.createEffect(async () => {\n  const ability1 = await api.get<StoreModel[\"ability1\"]>(\"/api/store/ability1\");\n  const lastValue = await api.get<StoreModel[\"lastValue\"]>(\"/api/store/currency\");\n\n  return { ability1, lastValue };\n});\n\n$store.on(getStoreRequest.doneData, (_, store) => store);\n","\nexport const getDate = (date:any) => {\n    return new Date(date)\n      .toLocaleString(\"en-EN\", {\n        hour12: false,\n        day: \"numeric\",\n        month: \"short\",\n        hour: \"numeric\",\n        timeZone: 'UTC',\n        minute: \"numeric\",\n      })\n      .replace(\", 24\", \", 00\");\n  };\n  \n  ","export const getTimeBySec = (timestamp:any) => {\n    let hours = Math.floor(timestamp / 60 / 60);\n    let minutes = Math.floor(timestamp / 60) - hours * 60;\n    let seconds = timestamp % 60;\n  \n    return [\n      hours.toString().padStart(2, \"0\"),\n      minutes.toString().padStart(2, \"0\"),\n      seconds.toString().padStart(2, \"0\"),\n    ].join(\":\");\n  };","import { getNetwork } from \"./getNetwork\";\nimport { tableCellModel } from \"./../@types/tableCellModel\";\n\nexport const isSat = (tournament: tableCellModel) => {\n  const name = tournament[\"@name\"]?.toLowerCase();\n  const network = getNetwork(tournament[\"@network\"]);\n  let sat = !!tournament[\"@flags\"]?.includes(\"SAT\");\n\n  if (!sat && name) {\n    if (network === \"GGNetwork\") {\n      sat =\n        name.includes(\" seats\") ||\n        name.includes(\"seats \") ||\n        name.includes(\" seat\") ||\n        name.includes(\"seat \") ||\n        name.includes(\" qualifier\") ||\n        name.includes(\"qualifier \") ||\n        name.includes(\" step\") ||\n        name.includes(\"step \") ||\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \");\n    } else if (network === \"Winamax.fr\") {\n      sat =\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \") ||\n        name.includes(\"satellite\") ||\n        name.includes(\"qualif\") ||\n        name.includes(\"last chance\") ||\n        name.includes(\"hit&run\");\n    } else if (network === \"WPN\") {\n      sat =\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \") ||\n        name.includes(\"satellite\") ||\n        name.includes(\"seat\") ||\n        name.includes(\" qualifier\") ||\n        name.includes(\"qualifier \");\n    } else if (network === \"iPoker\") {\n      sat =\n        name.includes(\" seats\") ||\n        name.includes(\"seats \") ||\n        (name.includes(\" sat\") && !name.includes(\" satu\")) ||\n        name.includes(\"sat  \") ||\n        name.includes(\" x \");\n    }\n  }\n\n  return !!sat;\n};\n","import { tableCellModel } from \"../@types/tableCellModel\";\n\nexport const isSuperTurbo = (tournament:tableCellModel) => {\n    const name = (tournament[\"@name\"] ?? \"\").toLowerCase();\n    const superturbo = tournament[\"@flags\"]?.includes(\"ST\") || name?.includes(\"hyper\");\n  \n    return superturbo;\n  };","import { isSat } from './isSat';\nimport { isSuperTurbo } from './isSuperTurbo';\nimport { tableCellModel } from \"../@types/tableCellModel\";\nimport { getNetwork } from \"./getNetwork\";\n\nexport const isTurbo = (tournament:tableCellModel) => {\n    let flags = tournament[\"@flags\"];\n    const name = (tournament[\"@name\"] ?? \"\").toLowerCase();\n    const network = getNetwork(tournament[\"@network\"]);\n    const superturbo = isSuperTurbo(tournament);\n    const sat = isSat(tournament);\n    if ((sat && flags) || flags?.includes(\"SAT\")) flags = flags.replace(\"SAT\", \"\");\n  \n    const turbo =\n      (flags?.includes(\"T\") ||\n        name?.includes(\"turbo\") ||\n        (network === \"PokerStars\" && name?.includes(\"hot\"))) &&\n      !superturbo;\n  \n    return turbo;\n  };","import { tableCellModel } from \"../@types/tableCellModel\";\n\n\nexport const isNormal = (tournament:tableCellModel) => {\n    const name = (tournament[\"@name\"] ?? \"\").toLowerCase();\n  \n    return !!(tournament[\"@flags\"]?.includes(\"B\") || name?.includes(\"bounty\"));\n  };\n  ","import { createStore } from \"effector\";\n\nexport const $filterContent = createStore<any>(null);\n","import { createEffect } from \"effector\";\n\nimport { $filterContent } from \"./state\";\n\nimport api from \"../../api\";\n\nexport const fetchFilterContent = createEffect(async () => {\n  const result = await api.get(\"api/filter\");\n\n  try {\n    // @ts-ignore\n    const { filter } = new Function(\n      // @ts-ignore\n      result.replace(\n        // @ts-ignore\n        \"module.exports = filter_1;\",\n        // @ts-ignore\n        \"return { filter: filter_1};\"\n        // @ts-ignore\n      )\n      // @ts-ignore\n    )();\n\n    return filter.filter;\n  } catch (error) {}\n});\n\n$filterContent.on(fetchFilterContent.doneData, (_, data) => data);\n","\n\n\nexport const dateToTimeString = (ms: number): string => {\n  const date = new Date(ms);\n  const hours = date.getUTCHours().toString().padStart(2, \"0\");\n  const minutes = date.getUTCMinutes().toString().padStart(2, \"0\");\n  return `${hours}:${minutes}`;\n}","\n\n\nexport const timeStringToMilliseconds = (timeString: string): number => {\n  const [hours, minutes] = timeString.split(\":\").map(Number);\n  return (hours * 60 + minutes) * 60 * 1000;\n}","import { createStore } from \"effector\";\n\nimport { getDate } from \"./../../helpers/getDate\";\nimport { getWeekday } from \"./../../helpers/getWeekday\";\nimport { getTimeBySec } from \"./../../helpers/getTimeBySec\";\nimport { isSat } from \"./../../helpers/isSat\";\nimport { isRebuy } from \"./../../helpers/isRebuy\";\nimport { getStatus } from \"./../../helpers/getStatus\";\nimport { isSuperTurbo } from \"./../../helpers/isSuperTurbo\";\nimport { isTurbo } from \"./../../helpers/isTurbo\";\nimport { isNormal } from \"./../../helpers/isNormal\";\nimport { getTimeByMS } from \"./../../helpers/getTimeByMS\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\nimport { $tournamentsSettings } from \"../Select\";\n\nimport { getNetwork } from \"./../../helpers/getNetwork\";\nimport { $config } from \"../Config\";\nimport { $filterContent } from \"../Filter\";\nimport { $store } from \"../Store\";\nimport { dateToTimeString } from \"../../helpers/dateToTimeString\";\nimport { timeStringToMilliseconds } from \"../../helpers/timeStringToMilliseconds\";\n\nexport const $tableState = createStore<tableCellModel[] | null | undefined>(\n  null\n);\n\nexport const $filtredTableState = $tableState.map((tournaments) => {\n  if (!tournaments) {\n    return [];\n  }\n\n  const config = $config.getState();\n  const filter = $filterContent.getState();\n  const { ability1, lastValue } = $store.getState();\n\n  const {\n    moneyStart,\n    moneyEnd,\n    KO: isKOQ,\n    turbo: isTurboQ,\n    superTurbo: isSTurboQ,\n    freezout: isFreezoutQ,\n    normal: isNormalQ,\n    prizepoolStart,\n    prizepoolEnd,\n  } = $tournamentsSettings.getState();\n\n  const { networks, timezone } = config ?? {};\n\n  // сортировка по времени старта турнира\n  tournaments = tournaments.sort(\n    (a, b) =>\n      Number(a[\"@scheduledStartDate\"] ?? 0) -\n      Number(b[\"@scheduledStartDate\"] ?? 0)\n  );\n\n  // мапим все данные о турнирах\n  tournaments = tournaments.map((tournament) => {\n    const network = getNetwork(tournament[\"@network\"]);\n    const { level: networksLevel = 1 } = networks?.[network] ?? {};\n    const level = networksLevel + \"A\";\n    const name = tournament[\"@name\"]?.toLowerCase();\n    const stake = Number(tournament[\"@stake\"] ?? 0);\n    const rake = Number(tournament[\"@rake\"] ?? 0);\n    const bid = (stake + rake).toFixed(2);\n    const isStartDate = tournament[\"@scheduledStartDate\"] ?? 0;\n    const isRegDate = tournament[\"@lateRegEndDate\"] ?? 0;\n    const startDate = Number(isStartDate) * 1000 + Number(timezone);\n    const regDate = Number(isRegDate) * 1000 + Number(timezone);\n    const time = getTimeByMS(Number(`${isStartDate}000`));\n    const bounty = isNormal(tournament);\n    const turbo = isTurbo(tournament);\n    const superturbo = isSuperTurbo(tournament);\n    const status = getStatus(tournament);\n    const rebuy = isRebuy(tournament);\n    const currency = tournament[\"@currency\"];\n\n    const info = ability1?.[network]?.[time]?.[bid]?.[name];\n    const ability = info?.[\"@avability\"];\n\n    const duration = info?.[\"@duration\"]\n      ? Math.round(info?.[\"@duration\"])\n      : null;\n    const sat = isSat(tournament);\n\n    //Фикс гарантии для WPN и 888Poker и Chiko\n    if (network === \"WPN\" || network === \"888Poker\" || network === \"Chico\") {\n      const $ = tournament[\"@name\"].split(\"$\");\n      if ($.length > 1) {\n        if (network === \"Chico\" && !sat) {\n          tournament[\"@guarantee\"] = $[2]\n            ?.split(\" \")?.[0]\n            ?.replace(\",\", \"\")\n            .replace(\".5K\", \"500\")\n            .replace(\"K\", \"000\")\n            .replace(\"M\", \"000000\")\n            .replace(\".\", \"\");\n        } else if ((network === \"WPN\" && !sat) || network === \"888Poker\") {\n          tournament[\"@guarantee\"] = $[1]\n            .split(\" \")[0]\n            .replace(\")\", \"\")\n            .replace(\",\", \"\");\n        }\n      }\n    }\n\n    const prizepool = Math.round(\n      Math.max(\n        Number(tournament[\"@guarantee\"] ?? 0),\n        Number(tournament[\"@prizePool\"] ?? 0),\n        (Number(tournament[\"@entrants\"] ?? 0) +\n          Number(tournament[\"@reEntries\"] ?? 0)) *\n          Number(tournament[\"@stake\"] ?? 0),\n        (Number(tournament[\"@totalEntrants\"] ?? 0) +\n          Number(tournament[\"@reEntries\"] ?? 0)) *\n          Number(tournament[\"@stake\"] ?? 0)\n      )\n    );\n\n    const pp = prizepool >= 0 ? prizepool : \"-\";\n    return {\n      ...tournament,\n      \"@date\": isStartDate,\n      \"@bid\": bid,\n      \"@realBid\": bid,\n      \"@turbo\": !!turbo,\n      \"@rebuy\": !!rebuy,\n      \"@od\": !!tournament[\"@flags\"]?.includes(\"OD\"),\n      \"@bounty\": !!bounty,\n      \"@sat\": !!sat,\n      \"@sng\": !!tournament[\"@gameClass\"]?.includes(\"sng\"),\n      \"@scheduled\": !!tournament[\"@gameClass\"]?.includes(\"scheduled\"),\n      \"@NL\": !!(tournament[\"@structure\"] === \"NL\"),\n      \"@PL\": !!(tournament[\"@structure\"] === \"PL\"),\n      \"@PNL\": !!(tournament[\"@structure\"] === \"PNL\"),\n      \"@FL\": !!(tournament[\"@structure\"] === \"FL\"),\n      \"@ML\": !!(tournament[\"@structure\"] === \"ML\"),\n      \"@H\": !!(tournament[\"@game\"] === \"H\"),\n      \"@H6\": !!(tournament[\"@game\"] === \"H6\"),\n      \"@O\": !!(tournament[\"@game\"] === \"O\"),\n      \"@OHL\": !!(tournament[\"@game\"] === \"OHL\"),\n      \"@deepstack\": !!tournament[\"@flags\"]?.includes(\"D\"),\n      \"@superturbo\": !!superturbo,\n      \"@prizepool\": pp,\n      \"@network\": network,\n      \"@ability\": ability ? ability : \"-\",\n      \"@duration\": duration ? getTimeBySec(duration) : \"-\",\n      \"@getWeekday\": isStartDate ? getWeekday(Number(isStartDate) * 1000) : \"-\",\n      \"@scheduledStartDate\": isStartDate ? getDate(startDate) : \"-\",\n      \"@lateRegEndDate\": isRegDate ? getDate(regDate) : \"-\",\n      \"@numberLateRegEndDate\": regDate,\n      \"@timezone\": timezone,\n      \"@status\": status,\n      \"@level\": level,\n      \"@usdBid\":\n        currency === \"CNY\" ? Math.round(Number(bid) / lastValue) : Number(bid),\n      \"@usdPrizepool\": currency === \"CNY\" && pp !== \"-\" ? pp / lastValue : pp,\n      \"@msStartForRule\": isStartDate\n        ? timeStringToMilliseconds(dateToTimeString(Number(isStartDate) * 1000))\n        : \"-\",\n      \"@msLateForRule\": isRegDate\n        ? timeStringToMilliseconds(dateToTimeString(Number(isRegDate) * 1000))\n        : \"-\",\n    };\n  });\n\n  // фильтр по параметрам\n  tournaments = tournaments.filter((tournament) => {\n    const bounty = tournament[\"@bounty\"];\n    const turbo = tournament[\"@turbo\"];\n    const superturbo = tournament[\"@superturbo\"];\n    const prizepool = tournament[\"@usdPrizepool\"];\n\n    return (\n      Number(tournament[\"@usdBid\"]) >= Number(moneyStart) &&\n      Number(tournament[\"@usdBid\"]) <= Number(moneyEnd) &&\n      ((isKOQ !== false && isNormalQ !== false\n        ? bounty && !turbo && !superturbo\n        : false) ||\n        (isKOQ !== false && isTurboQ !== false ? bounty && turbo : false) ||\n        (isKOQ !== false && isSTurboQ !== false\n          ? bounty && superturbo\n          : false) ||\n        (isFreezoutQ !== false && isNormalQ !== false\n          ? !bounty && !turbo && !superturbo\n          : false) ||\n        (isFreezoutQ !== false && isTurboQ !== false\n          ? !bounty && turbo\n          : false) ||\n        (isFreezoutQ !== false && isSTurboQ !== false\n          ? !bounty && superturbo\n          : false)) &&\n      (prizepool !== \"-\"\n        ? Number(prizepoolStart) <= Number(prizepool) &&\n          Number(prizepool) <= Number(prizepoolEnd)\n        : true)\n    );\n  });\n\n  console.log(tournaments);\n\n  // определение цвета турнира\n  tournaments = tournaments.map((tournament) => {\n    const level = tournament[\"@level\"];\n\n    const { valid, ...props } = filter(level, tournament, true);\n\n    function calculateDifficultyPercent(difficulty: number) {\n      if (difficulty === 69) {\n        return 0;\n      } else if (difficulty > 69 && difficulty <= 89) {\n        return -((difficulty - 69) / 20) * 100;\n      } else if (difficulty >= 55 && difficulty < 69) {\n        return ((69 - difficulty) / 14) * 100;\n      } else if (difficulty > 89) {\n        return -100;\n      } else if (difficulty < 55) {\n        return 100;\n      }\n    }\n\n    return {\n      ...tournament,\n      valid,\n      percent: calculateDifficultyPercent(Number(tournament[\"@ability\"])),\n      props,\n    };\n  });\n\n  // фильтр по времени \"от\"-\"до\"\n  tournaments = tournaments.filter((item) => {\n    const startDate = item?.[\"@scheduledStartDate\"] ?? \"-\";\n    const { dateStart, dateEnd } = $tournamentsSettings.getState();\n\n    if (!item.valid) return false;\n    if (startDate === \"-\") return true;\n\n    const res = startDate?.split(\", \")?.[1]?.split(\":\")?.[0];\n    const r = dateEnd === \"00\" && dateStart <= dateEnd ? \"24\" : dateEnd;\n\n    return dateStart <= dateEnd\n      ? dateStart <= res && res <= r\n      : !(dateStart > res && res > dateEnd);\n  });\n\n  console.log(tournaments);\n\n  return tournaments;\n});\n","export const getTimeByMS = (timestamp:any) => {\n    return new Date(timestamp)\n      .toLocaleString(\"en-EN\", {\n        hour12: false,\n        hour: \"numeric\",\n        minute: \"numeric\",\n        timeZone: 'UTC'\n      })\n      .replace(\"24\", \"00\");\n  };\n  ","import { isSuperTurbo } from './isSuperTurbo';\nimport { isTurbo } from './isTurbo';\nimport { isNormal } from './isNormal';\nimport { tableCellModel } from './../@types/tableCellModel';\n\n\nexport const getStatus = (tournament:tableCellModel) => {\n  const KO = isNormal(tournament);\n  const turbo = isTurbo(tournament);\n  const superturbo = isSuperTurbo(tournament);\n  const status = `${KO ? \"KO\" : \"!KO\"}${superturbo ? \"SuperTurbo\" : turbo ? \"Turbo\" : \"Normal\"}`;\n  return status;\n};\n","import { tableCellModel } from './../@types/tableCellModel';\n\nexport const isRebuy = (tournament:tableCellModel) => {\n  return tournament[\"@flags\"]?.includes(\"R\") && !tournament[\"@flags\"]?.includes(\"RH\");\n};\n","\nexport const getWeekday = (date:any) => {\n    return new Date(date).toLocaleString(\"en-EN\", {\n      weekday: \"long\",\n      timeZone: 'UTC'\n    });\n  };\n  ","import { getStoreRequest } from './../Store/init';\nimport { createEffect } from \"effector\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\nimport { $tournamentsSettings } from \"../Select\";\nimport { ErrNot } from \"../../components/NotificationService\";\nimport { $tableState } from \"./state\";\n\nimport api from \"../../api\";\n\nexport const fetchUserReposFx = createEffect(async () => {\n  const tournamentsSettings = $tournamentsSettings.getState();\n  await getStoreRequest();\n\n  try {\n    return await api.get<tableCellModel[]>(\"/api/tour\", {\n      network: tournamentsSettings.network?.map((elem) => elem.value).join(\",\"),\n      time: tournamentsSettings.time?.value ?? 0,\n    });\n  } catch (error: any) {\n    ErrNot(error?.response?.data?.message || \"The request failed. Try again.\");\n  }\n});\n\n$tableState.on(fetchUserReposFx.doneData, (_, data) => data);\n","import { useState } from \"react\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Divider,\n  Grid,\n  Box,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nimport {\n  $tournamentsSettings,\n  editableTournamentsSettings,\n  NETWORKS,\n  TIMERANGE,\n} from \"../../store/Select\";\nimport { useStore } from \"effector-react\";\nimport { NumberInput } from \"../NumberInput\";\n\nimport classes from \"./BaseSettings.module.scss\";\nimport { MultiSelect } from \"../MultiSelect\";\nimport { SingleSelect } from \"../SingleSelect\";\nimport { Checkbox } from \"../Checkbox\";\nimport { fetchUserReposFx } from \"../../store/Table\";\nimport { fetchFilterContent } from \"../../store/Filter\";\n\nconst SettingsWidgetWrapper = styled(Box)(({ theme }) => ({\n  position: \"fixed\",\n  bottom: theme.spacing(2),\n  right: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: \"50%\",\n  boxShadow: theme.shadows[3],\n  padding: theme.spacing(0.5),\n}));\n\nconst UpdateWidgetWrapper = styled(Box)(({ theme }) => ({\n  position: \"fixed\",\n  bottom: theme.spacing(2),\n  right: theme.spacing(9),\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: \"50%\",\n  boxShadow: theme.shadows[3],\n  padding: theme.spacing(0.5),\n}));\n\nexport const BaseSettings = () => {\n  const [isOpen, setIsOpen] = useState(true);\n  const tournamentsSettings = useStore($tournamentsSettings);\n\n  const handleOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n    fetchFilterContent().then(() => fetchUserReposFx());\n  };\n\n  return (\n    <>\n      <SettingsWidgetWrapper>\n        <IconButton onClick={handleOpen} style={{ transform: \"scale(1.4)\" }}>\n          <SettingsIcon />\n        </IconButton>\n        <Dialog open={isOpen} onClose={handleClose}>\n          <DialogTitle className={classes.title}>Settings</DialogTitle>\n          <DialogContent>\n            <div className={classes.menu}>\n              <MultiSelect\n                value={tournamentsSettings.network as any}\n                label=\"Networks\"\n                options={NETWORKS}\n                onMultiChange={editableTournamentsSettings.handleChangeNetwork}\n              />\n              <SingleSelect\n                defaultValue={tournamentsSettings.time as any}\n                label=\"Time interval\"\n                options={TIMERANGE}\n                onSingleChange={editableTournamentsSettings.handleChangeTime}\n              />\n              <div className={classes.inputWrapper}>\n                <NumberInput\n                  label=\"bid FROM\"\n                  value={tournamentsSettings.moneyStart}\n                  onChange={editableTournamentsSettings.handleChangeMoneyStart}\n                  max={tournamentsSettings.moneyEnd}\n                  className={classes.inputBuyIn}\n                />\n                <NumberInput\n                  label=\"bid To\"\n                  value={tournamentsSettings.moneyEnd}\n                  onChange={editableTournamentsSettings.handleChangeMoneyEnd}\n                  className={classes.inputBuyIn}\n                />\n              </div>\n              <div className={classes.inputWrapper}>\n                <NumberInput\n                  label=\"prizepool FROM\"\n                  value={tournamentsSettings.prizepoolStart}\n                  onChange={\n                    editableTournamentsSettings.handleChangePrizepoolStart\n                  }\n                  max={tournamentsSettings.prizepoolEnd}\n                  className={classes.inputBuyIn}\n                />\n                <NumberInput\n                  label=\"prizepool TO\"\n                  value={tournamentsSettings.prizepoolEnd}\n                  onChange={\n                    editableTournamentsSettings.handleChangePrizepoolEnd\n                  }\n                  max={100000000}\n                  className={classes.inputBuyIn}\n                />\n              </div>\n              <div className={classes.checkboxWrapper}>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <Checkbox\n                      label=\"Knockout\"\n                      selected={tournamentsSettings.KO}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeKo(\n                          !tournamentsSettings.KO\n                        )\n                      }\n                    />\n                    <Checkbox\n                      label=\"Vanila\"\n                      selected={tournamentsSettings.freezout}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeFreezout(\n                          !tournamentsSettings.freezout\n                        )\n                      }\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Checkbox\n                      label=\"Normal\"\n                      selected={tournamentsSettings.normal}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeNormal(\n                          !tournamentsSettings.normal\n                        )\n                      }\n                    />\n                    <Checkbox\n                      label=\"Turbo\"\n                      selected={tournamentsSettings.turbo}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeTurbo(\n                          !tournamentsSettings.turbo\n                        )\n                      }\n                    />\n                    <Checkbox\n                      label=\"SuperTurbo\"\n                      selected={tournamentsSettings.superTurbo}\n                      onChange={() =>\n                        editableTournamentsSettings.handleChangeSuperTurbo(\n                          !tournamentsSettings.superTurbo\n                        )\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"outlined\" size=\"large\" onClick={handleClose}>\n              Apply\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </SettingsWidgetWrapper>\n      <UpdateWidgetWrapper>\n        <IconButton onClick={handleClose} style={{ transform: \"scale(1.4)\" }}>\n          <RefreshIcon />\n        </IconButton>\n      </UpdateWidgetWrapper>\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport cx from \"classnames\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport {\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n} from \"@material-ui/core\";\nimport { green, pink } from \"@material-ui/core/colors\";\n\nimport { $filtredTableState, fetchUserReposFx } from \"../../store/Table\";\nimport { useState } from \"react\";\n\nconst theme = createTheme({\n  palette: {\n    primary: green,\n    secondary: pink,\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      \"& .MuiTable-root\": {\n        minWidth: 650,\n      },\n    },\n    pagination: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginBottom: \"15px\",\n    },\n    head: {\n      background: \"#303F9F\",\n      fontWeight: 500,\n    },\n    tableContainer: {\n      marginBottom: theme.spacing(2),\n      boxShadow: \"0px 1px 0px 0px rgba(34, 60, 80, 0.2)\",\n      maxHeight: \"calc(100vh - 83px)\",\n    },\n    tableRow: {\n      \"&:hover\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    loaderContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"calc(100vh - 140px)\",\n    },\n    cell: {\n      maxWidth: \"300px\",\n      textAlign: \"center\",\n    },\n    cellHead: {\n      color: 'white'\n    },\n  })\n);\n\nexport const BaseTournaments = () => {\n  const loading = useStore(fetchUserReposFx.pending);\n  const classes = useStyles();\n\n  const tournaments = useStore($filtredTableState);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(20);\n\n  const handleChangePage = (\n    _: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\n    newPage: number\n  ) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const rows = tournaments.slice(\n    page * rowsPerPage,\n    page * rowsPerPage + rowsPerPage\n  );\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <TableContainer component={Paper} className={classes.tableContainer}>\n          <Table>\n            <TableHead className={classes.head}>\n              <TableRow>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  ID\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Start Reg\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Late Reg\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Name\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Network\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Buy-in\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Prizepool\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Ability\n                </TableCell>\n                <TableCell className={cx(classes.cell, classes.cellHead)}>\n                  Duration\n                </TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {!loading &&\n                rows.map((item) => (\n                  <TableRow\n                    key={item[\"@id\"]}\n                    className={classes.tableRow}\n                    style={{\n                      background:\n                        typeof item[\"percent\"] !== \"undefined\"\n                          ? item[\"percent\"] >= 0\n                            ? `rgba(140, 255, 0, ${Math.max(\n                                0.15,\n                                Number(item.percent) / 100\n                              )})` //green\n                            : `rgba(255, 0, 0, ${Math.max(\n                                0.2,\n                                Math.abs(item.percent) / 100\n                              )})` //red\n                          : \"\",\n                    }}\n                  >\n                    <TableCell className={classes.cell}>\n                      {item[\"@id\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@scheduledStartDate\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@lateRegEndDate\"] ?? \"-\"}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@name\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@network\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@bid\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@prizepool\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@ability\"]}\n                    </TableCell>\n                    <TableCell className={classes.cell}>\n                      {item[\"@duration\"]}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {loading && (\n          <div className={classes.loaderContainer}>\n            <CircularProgress />\n          </div>\n        )}\n        {!rows.length && !loading && (\n          <div className={classes.loaderContainer}>The list is empty</div>\n        )}\n        <TablePagination\n          rowsPerPageOptions={[20, 50, 100]}\n          component=\"div\"\n          count={tournaments.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          className={classes.pagination}\n        />\n      </ThemeProvider>\n    </>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Link } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2),\n    marginTop: \"auto\",\n  },\n}));\n\nexport const BaseFooter = () => {\n  const classes = useStyles();\n\n  return <></>;\n};\n","import { useStore } from \"effector-react\";\n\nimport { $config, getConfigRequest } from \"../../store/Config\";\nimport {\n  OnPasswordSubmit,\n  PasswordSection,\n} from \"../../components/PasswordSection\";\nimport { useIntervalWorker } from \"../../hooks/useIntervalWorker\";\nimport { BaseSettings } from \"../../components/BaseSettings\";\nimport { BaseTournaments } from \"../../components/BaseTournaments\";\nimport { BaseFooter } from \"../../components/BaseFooter\";\n\nexport const MainPage = () => {\n  const config = useStore($config);\n\n  const { setIntervalWorker } = useIntervalWorker();\n\n  // выкидываем из сессии каждые 12 часов\n  setIntervalWorker(() => {\n    window.location.reload();\n  }, 12 * 60 * 60 * 1000);\n\n  const handlePasswordSubmit: OnPasswordSubmit = ({ password, login }) =>\n    getConfigRequest({ alias: login, password });\n\n  if (!config) {\n    return (\n      <>\n        <PasswordSection onSubmit={handlePasswordSubmit} />\n        <BaseFooter />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div>\n        <BaseSettings />\n        <BaseTournaments />\n      </div>\n    </>\n  );\n};\n","import { FC } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { styled } from \"@mui/system\";\n\nimport { AdminPage } from \"./AdminPage\";\nimport { InfoPage } from \"./InfoPage\";\nimport { MainPage } from \"./MainPage\";\n\nconst CustomToastContainer = styled(ToastContainer)({\n  \"& .Toastify__toast--error\": {\n    color: \"black\",\n    borderRadius: \"8px\",\n  },\n  \"& .Toastify__close-button\": {\n    color: \"black\",\n  },\n});\n\nexport const Pages: FC = () => {\n  return (\n    <>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/admin\" component={() => <AdminPage />} />\n            <Route path=\"/info\" component={() => <InfoPage />} />\n            <Route path=\"/*\" component={() => <MainPage />} />\n          </Switch>\n          <CustomToastContainer hideProgressBar={true} />\n        </BrowserRouter>\n        <div id=\"modal-root\" />\n    </>\n  );\n};\n","import { createStore } from \"effector\";\nimport { settingsModel } from \"./../../@types/settingsModel\";\n\nexport const $settings = createStore<settingsModel | null>(null);\n","import { createEffect } from \"effector\";\nimport api from \"../../api\";\nimport { $settings } from \"./state\";\n\nexport const fetchSettings = createEffect(async () => {\n  const result = await api.get<any>(\"/api/settings\");\n  return result;\n});\n\nexport const postFetchSettings = createEffect(async (json: any) => {\n  const result = await api.addSettings(json);\n  return result;\n});\n\n$settings.on(fetchSettings.doneData, (_, settings) => settings);\n","import { createStore } from \"effector\";\n\nimport { UpdateModel } from \"../../@types/updateModel\";\n\nexport const $update = createStore<UpdateModel>({\n  isUpdated: false,\n  timestamp: 0,\n});\n","import { createEffect } from \"effector\";\n\nimport api from \"../../api\";\nimport { $update } from \"./state\";\nimport { UpdateModel } from \"../../@types/updateModel\";\n\nexport const getUpdate = createEffect(\n  async () => await api.get<UpdateModel>(\"/api/update\")\n);\n\nexport const postUpdate = createEffect(\n  async () => {\n    await api.postUpdate();\n  }\n);\n\n$update.on(getUpdate.doneData, (_, update) => update);\n","import ReactDOM from \"react-dom\";\nimport { Pages } from \"./pages/index\";\nimport \"./assets/style/index.scss\";\nimport \"./store/init\";\n\nprocess.env.TZ = \"UTC\";\n\nReactDOM.render(<Pages />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BaseSettings_title__2YC8v\",\"inputWrapper\":\"BaseSettings_inputWrapper__3tJI2\",\"inputBuyIn\":\"BaseSettings_inputBuyIn__3_kH5\",\"menu\":\"BaseSettings_menu__2oBk9\",\"checkboxWrapper\":\"BaseSettings_checkboxWrapper__Sbg20\"};"],"sourceRoot":""}