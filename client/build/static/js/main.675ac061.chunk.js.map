{"version":3,"sources":["components/BaseHeader/BaseHeader.module.scss","components/BaseTable/BaseTable.module.scss","constants.ts","api/index.ts","api/ConfigApi.ts","store/Settings/state.ts","store/Settings/init.ts","components/LevelBlocks/index.tsx","components/BaseButton/BaseButton.tsx","components/ElementsToggle/index.tsx","helpers/getSelectOptionsFromKeys.tsx","components/BaseSelect/BaseSelect.tsx","components/BaseInputString/BaseInputString.tsx","components/Admin.Ability2Section/__Rules/index.tsx","components/Loader/Loader.tsx","components/Admin.Ability2Section/index.tsx","store/Alias/state.ts","store/Alias/init.ts","components/Icon/Error.tsx","components/NotificationService/NotificationService.tsx","store/Config/state.ts","store/Config/init.ts","store/Password/state.ts","components/PasswordSection/PasswordSection.tsx","store/Password/init.ts","store/Select/state.ts","store/Select/init.ts","components/Admin.AliasesSection/__Form/index.tsx","assets/icons/close.svg","components/ApprovalSection/index.tsx","components/UserSettings/__Table/index.tsx","assets/icons/info.svg","assets/icons/mail.svg","assets/icons/settings.png","assets/icons/eye.svg","components/UserSettings/__Info/index.tsx","components/UserSettings/index.tsx","components/Modal/index.tsx","components/Admin.AliasesSection/__List/index.tsx","components/Admin.AliasesSection/index.tsx","store/Sample/state.ts","store/Sample/init.ts","components/BaseInputNumber/BaseInputNumber.tsx","components/SampleSection/index.tsx","store/Offpeak/state.ts","store/Offpeak/init.ts","components/BaseInputMask/BaseInputMask.tsx","components/OffpeakSection/index.tsx","store/Rules/state.ts","store/Rules/init.ts","components/ColorPalette/index.tsx","helpers/getUniqueElemKeyGetter.tsx","components/Admin.RulesSection/constants.ts","components/Admin.RulesSection/__Rules/index.tsx","helpers/validateNumber.ts","components/Admin.RulesSection/index.tsx","pages/AdminPage/AdminPage.tsx","components/BaseTable/Thead/Thead.tsx","components/BaseTable/Tbody/Tbody.tsx","components/BaseTable/BaseTable.tsx","pages/InfoPage/InfoPage.tsx","components/BaseSelectMulti/BaseSelectMulti.tsx","components/BaseInput/BaseInput.tsx","components/BaseCheckbox/BaseCheckbox.tsx","components/ComponentCategory/ComponentCategory.tsx","store/Table/state.ts","store/Table/init.ts","components/BaseHeader/BaseHeader.tsx","pages/MainPage/MainPage.tsx","pages/index.tsx","index.tsx","components/NotificationService/NotificationService.module.scss","components/BaseInputMask/BaseInputMask.module.scss","components/BaseInput/BaseInput.module.scss","components/ComponentCategory/ComponentCategory.module.scss","components/BaseInputNumber/BaseInputNumber.module.scss","components/BaseSelectMulti/BaseSelectMulti.module.scss","components/BaseCheckbox/BaseCheckbox.module.scss","components/Loader/Loader.module.scss"],"names":["module","exports","LEVELS_ARRAY","Array","fill","map","_","index","EFFMU","url","params","fullUrl","URLSearchParams","toString","axios","data","settings","post","password","sample","offpeak","rules","patch","delete","config","alias","$settings","createStore","fetchSettings","createEffect","a","api","get","result","fetchStateAbility2","$prevSettings","on","doneData","user","$state","postFetchSettings","json","addSettings","b","b_","with","LevelBlocks","selectedLevel","onLevelChange","withAllLevels","className","level","selected","onClick","all","useLevelBlocks","React","useState","setSelectedLevel","handleLevelChange","BaseButton","children","disabled","clear","red","green","autoFocus","style","cx","ElementsToggle","selectedElement","onElementChange","elements","mix","elem","useElementsToggle","defaultElem","setElement","handleElementChange","getSelectOptionsFromKeys","object","Object","keys","sort","key","value","label","GRAY_COLOR","COLOR","specialSelectStyles","option","provided","state","color","isSelected","cursor","indicatorSeparator","display","control","border","borderRadius","boxShadow","background","isDisabled","height","container","transition","selectProps","menuIsOpen","singleValue","dropdownIndicator","paddingLeft","input","valueContainer","paddingRight","placeholder","BaseSelect","props","options","onChange","defaultValue","isClearable","id","BaseInputString","classNames","e","currentTarget","handleOnSelectChange","handleSaveFn","Ability2SectionRules","savedRules","effmu","levelPlusEffmu","selectedRules","network","setNetwork","currency","setCurrency","bid","setBid","status","setStatus","name","setName","ability","setAbility","ability2","allNetworks","allCurrencies","allBids","allStatuses","allNames","clearRows","useEffect","rows","rowStatus","rule","console","log","formData","styles","method","apply","Loader","classes","wrapper","Ability2Section","useStore","ability2Loading","pending","selectedEffmu","handleEffmuChange","$aliases","aliasesEvents","createApi","addAlias","store","deleteAlias","filter","getAliasesRequest","Error","width","viewBox","xmlns","fillRule","clipRule","d","aliases","ErrNot","content","toast","error","NotificationContent","NotificationIcon","NotificationError","$config","DEFAULT_EDITABLE_CONFIG","networks","mail","$editableConfig","configDomain","createDomain","clearConfig","getConfigRequest","postConfigRequest","patchConfigRequest","deleteConfigRequest","deleteConfig","onCreateEffect","effect","fail","watch","response","message","editableConfigEvents","setConfig","setConfig2","handleChangeMail","handleChangeEffmu","handleChangeLevel","handleChangePassword","PasswordSectionType","$password","$isValidAdminPassword","v","setIsValidAdminPassword","validateAdminPasswordRequest","checkAdminPassword","TIMERANGE","NETWORKS","SHORT_NETWORKS","DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS","time","timezone","timezoneTable","prizepoolStart","prizepoolEnd","moneyStart","moneyEnd","KO","turbo","superTurbo","freezout","normal","dateStart","dateEnd","$tournamentsSettings","editableTournamentsSettings","handleChangeNetwork","setting","handleChangeTime","handleChangeTimezone","handleChangeTimezonetable","handleChangeMoneyStart","handleChangeMoneyEnd","handleChangePrizepoolStart","handleChangePrizepoolEnd","handleChangeDateStart","String","Number","handleChangeDateEnd","handleChangeKo","handleChangeTurbo","handleChangeSuperTurbo","handleChangeFreezout","handleChangeNormal","selectStyles","fontWeight","fontSize","AliasesSectionForm","setAlias","setMail","setPassword","setEffmu","adminPassword","handleSubmit","ApprovalSection","onApprove","onClose","title","subtitle","withCloseIcon","src","CloseIcon","alt","noOptionsMessage","levelsOptions","UserSettingsTable","canChangeLevels","headline","defaultOption","find","select","UserSettingsInfo","isAdminPage","showPassword","setShowPassword","defaultEffMuOption","whichAccount","p","hidden","EyeIcon","email","text","InfoIcon","MailIcon","SettingsIcon","UserSettings","progress","setProgress","editableConfig","newPassword","Modal","forwardRef","ref","show","setShow","open","close","useImperativeHandle","isOpened","closeListener","keyCode","window","addEventListener","removeEventListener","document","getElementById","ReactDOM","createPortal","AliasesSectionList","search","settingsModalRef","useRef","selectedAlias","setSelectedAlias","deleteModalRef","handleModalOpen","current","handleModalClose","selectedConfig","toLocaleLowerCase","includes","aliasesLoading","handleAliasClick","length","padding","AliasesSection","setSearch","isAllLevels","PasswordSection","onSubmit","type","login","setLogin","isAdmin","ADMIN","isAlias","ALIAS","whosePassword","$sample","getSample","count","postSample","handleChangeSample","BaseInputNumber","handleChange","max","BaseInput","test","classnames","SampleSection","$offpeak","fromHour","fromMinutes","toHour","toMinutes","getOffpeak","postOffpeak","handleChangeOffpeakFromHour","from","handleChangeOffpeakToHour","to","handleChangeOffpeakFromMinutes","handleChangeOffpeakToMinutes","BaseInputMask","htmlFor","mask","maskPlaceholder","OffpeakSection","$rules","getRulesRequest","postRulesRequest","postRules","deleteRulesRequest","deleteRules","patchRulesRequest","patchRules","ColorPalette","getUniqueElemKeyGetter","getter","prefix","RULES_TYPES_TO_FIELDS","FromTo","FromToName","BidGt","Ticket","BidGtName","FromToGt","BidName","Name","NotName","FLAGS","Entrants","StartDay","RULES_TYPES","RulesSectionRules","types","setTypes","values","setValues","handleAddRuleRow","editableRule","ruleIndex","i","handleSaveRule","handleTypeChange","rowIndex","newTypes","newValues","handleValues","fieldIndex","uniqueElemKeyGetter","ruleRows","isComposite","isEditable","isSaveBtnDisabled","getIsSaveBtnDisabled","uniqueRuleKeyGetter","composite","ruleRow","ruleType","ruleValues","fields","isOffpeak","findIndex","isLastRow","uniqueRowKeyGetter","Math","random","substr","field","elementType","isNum","uniqueFieldKeyGetter","replace","validateNumber","splice","handleRemoveRuleRow","rowKey","fieldKeysCount","fieldKey","Status","Colors","RulesSection","selectedKO","handleKOChange","selectedStatus","handleStatusChange","selectedColor","handleColorChange","selectedNetwork","setSelectedNetwork","concat","AdminPage","marginTop","Thead","tournamentsSettings","thead","tr","th","Tbody","tbody","item","param","td","location","pathname","BaseTable","loading","section","table","nodata","InfoPage","undefined","setResult","urlSearchParams","fromEntries","entries","fetchData","BaseSelectMulti","isMulti","hideSelectedOptions","closeMenuOnSelect","controlShouldRenderValue","min","target","BaseCheckbox","checkbox","ComponentCategory","category","$tableState","$filtredTableState","el","startDate","getState","res","split","fetchUserReposFx","join","BaseHeader","header","info","userInfo","menu","inputWrapper","prizepool","starts","inputTime","checkboxWrapper","line","button","MainPage","tournaments","Pages","path","component","hideProgressBar","render"],"mappings":"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","file":"static/js/main.675ac061.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BaseHeader_header__32MmW\",\"menu\":\"BaseHeader_menu__3TSqs\",\"content\":\"BaseHeader_content__30g5a\",\"timezone\":\"BaseHeader_timezone__ZUrHu\",\"makeup\":\"BaseHeader_makeup__94VkG\",\"time\":\"BaseHeader_time__3tuvy\",\"network\":\"BaseHeader_network__3Ls-N\",\"level\":\"BaseHeader_level__1Y_hz\",\"inputWrapper\":\"BaseHeader_inputWrapper__14j3D\",\"checkboxWrapper\":\"BaseHeader_checkboxWrapper__3FQ_I\",\"checkbox\":\"BaseHeader_checkbox__ICtXy\",\"input\":\"BaseHeader_input__39X-X\",\"inputTime\":\"BaseHeader_inputTime__3XHxw\",\"button\":\"BaseHeader_button__3693i\",\"starts\":\"BaseHeader_starts__2gocD\",\"profileImage\":\"BaseHeader_profileImage__3mSuH\",\"alias\":\"BaseHeader_alias__2x_xt\",\"dot\":\"BaseHeader_dot__ySNlP\",\"info\":\"BaseHeader_info__2UkRr\",\"userInfo\":\"BaseHeader_userInfo__OpBWk\",\"settings\":\"BaseHeader_settings__QcOEE\",\"prizepool\":\"BaseHeader_prizepool__1YrLu\",\"line\":\"BaseHeader_line__2zD2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"BaseTable_table__3Jlir\",\"thead\":\"BaseTable_thead__3LLdP\",\"tbody\":\"BaseTable_tbody__C8YI5\",\"tr\":\"BaseTable_tr__2Gh8U\",\"nodata\":\"BaseTable_nodata__oEkzP\",\"th\":\"BaseTable_th__1eiTa\",\"td\":\"BaseTable_td__2tYFY\",\"section\":\"BaseTable_section__24GGI\"};","import { Effmu } from \"./@types/common\";\n\nexport const LEVELS_COUNT = 17;\nexport const LEVELS_ARRAY = new Array(LEVELS_COUNT).fill(null).map((_, index) => index);\n\nexport const EFFMU: Effmu[] = [\"A\", \"B\", \"C\"];\n","import { rulesModel } from \"./../@types/rulesModel\";\nimport { offpeakModel } from \"../@types/offpeakModel\";\nimport axios from \"axios\";\nimport ConfigApi from \"./ConfigApi\";\nclass Api extends ConfigApi {\n  async get<T>(url: string, params?: any) {\n    let fullUrl: string = url;\n    if (params) {\n      fullUrl += \"?\" + new URLSearchParams(params).toString();\n    }\n    return (await axios(fullUrl))?.data as T;\n  }\n  async addSettings(settings: any) {\n    return await axios.post(`/api/settings`, settings);\n  }\n  async addAlias(settings: any) {\n    return await axios.post(`/api/aliases`, settings);\n  }\n  async checkAdminPassword(password: string) {\n    return await axios.post(`/api/password/admin`, { password });\n  }\n  async postSample(sample: string) {\n    return await axios.post(`/api/sample`, { sample });\n  }\n  async postOffpeak(offpeak: offpeakModel) {\n    return await axios.post(`/api/offpeak`, { offpeak });\n  }\n  async postRules(rules: rulesModel[]) {\n    return await axios.post(`/api/rules`, { rules });\n  }\n  async patchRules(rules: rulesModel[], offpeak: boolean) {\n    return await axios.patch(`/api/rules`, { rules, offpeak });\n  }\n  async deleteRules(data: rulesModel[]) {\n    return await axios.delete(`/api/rules`, { data });\n  }\n}\n\nexport default new Api();\n","import { defaultConfigModel } from \"../@types/configModel\";\nimport axios from \"axios\";\nimport { ConfigModel } from \"../@types/configModel\";\n\nclass ConfigApi {\n  async postConfigRequest(config: defaultConfigModel, password: string) {\n    return await axios.post(`/api/config`, { config, password });\n  }\n  async patchConfigRequest(alias: string, config: ConfigModel, password: string) {\n    return await axios.patch(`/api/config`, { config, alias, password });\n  }\n  async deleteConfig(data: { alias: string; password: string }) {\n    return await axios.delete(`/api/config`, { data });\n  }\n}\nexport default ConfigApi;\n","import { createStore } from \"effector\";\nimport { settingsModel } from \"./../../@types/settingsModel\";\n\nexport const $settings = createStore<settingsModel | null>(null);\n","import { settingsModel } from \"./../../@types/settingsModel\";\nimport { createEffect, createStore } from \"effector\";\nimport api from \"../../api\";\nimport { $settings } from \"./state\";\n\nexport const fetchSettings = createEffect(async () => {\n  const result = await api.get<any>(\"/api/settings\");\n  return result;\n});\n\nexport const fetchStateAbility2 = createEffect(async () => {\n  const result = await api.get<settingsModel>(\"/api/state\");\n  return result;\n});\n\nexport const $prevSettings = createStore([]).on(fetchSettings.doneData, (_, user) => user);\n\nexport const $state = createStore({}).on(fetchStateAbility2.doneData, (_, user) => user);\n\nexport const postFetchSettings = createEffect(async (json: any) => {\n  const result = await api.addSettings(json);\n  return result;\n});\n\n$settings.on(fetchSettings.doneData, (_, settings) => settings);\n","import b_ from \"b_\";\nimport React, { FC } from \"react\";\n\nimport { LEVELS_ARRAY } from \"../../constants\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  selectedLevel: number | null;\n  onLevelChange: (level: number) => () => void;\n  withAllLevels?: boolean;\n}\n\nexport const ALL_LEVELS = -1;\n\nconst b = b_.with(\"level-blocks\");\n\nexport const LevelBlocks: FC<Props> = ({ selectedLevel, onLevelChange, withAllLevels }) => (\n  <div className={b()}>\n    {LEVELS_ARRAY.map((level) => (\n      <button\n        className={b(\"block\", {\n          selected: selectedLevel === level,\n        })}\n        key={level}\n        onClick={onLevelChange(level)}\n      >\n        <span className={b(\"block-text\")}>{level}</span>\n      </button>\n    ))}\n    {withAllLevels && (\n      <button\n        className={b(\"block\", {\n          selected: selectedLevel === ALL_LEVELS,\n          all: true,\n        })}\n        onClick={onLevelChange(ALL_LEVELS)}\n      >\n        <span className={b(\"block-text\")}>All</span>\n      </button>\n    )}\n  </div>\n);\n\nexport const useLevelBlocks = () => {\n  const [selectedLevel, setSelectedLevel] = React.useState<number | null>(null);\n\n  const handleLevelChange = (level: number) => () => {\n    if (level === selectedLevel) {\n      setSelectedLevel(null);\n    } else {\n      setSelectedLevel(level);\n    }\n  };\n\n  return { selectedLevel, handleLevelChange };\n};\n","import b_ from \"b_\";\nimport cx from \"classnames\";\nimport { CSSProperties, FC } from \"react\";\n\nimport \"./BaseButton.scss\";\n\ninterface BaseButtonProps {\n  onClick: () => void;\n  className?: string;\n  disabled?: boolean;\n  clear?: boolean;\n  red?: boolean;\n  green?: boolean;\n  autoFocus?: boolean;\n  style?: CSSProperties;\n}\n\nconst b = b_.with(\"base-button\");\n\n// todo все пропсы для обычной кнопки, и вписать их в типы как наследование, а не каждый отдельно\nexport const BaseButton: FC<BaseButtonProps> = ({\n  onClick,\n  className,\n  children,\n  disabled,\n  clear,\n  red,\n  green,\n  autoFocus,\n  style,\n}) => {\n  return (\n    <button\n      className={cx(b({ clear, red, green }), className)}\n      onClick={onClick}\n      disabled={disabled}\n      style={style}\n      autoFocus={autoFocus}\n    >\n      {children}\n    </button>\n  );\n};\n","import b_ from \"b_\";\nimport cx from \"classnames\";\nimport { useState } from \"react\";\n\nimport { BaseButton } from \"../BaseButton\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  selectedElement: string;\n  onElementChange: (element: any) => () => void;\n  elements: string[];\n  mix?: string;\n}\n\nconst b = b_.with(\"elements-toggle\");\n\nexport const ElementsToggle = ({ selectedElement, onElementChange, elements, mix }: Props) => (\n  <div className={cx(b(), mix)}>\n    {elements.map((elem) => (\n      <BaseButton\n        className={b(\"button\")}\n        onClick={onElementChange(elem)}\n        clear={elem !== selectedElement}\n        key={elem}\n      >\n        {elem}\n      </BaseButton>\n    ))}\n  </div>\n);\n\n// @ts-ignore ругается на T = \"\", типа T может не быть стрингой (но она extends от нее!!)\nexport function useElementsToggle<T extends string>(defaultElem: T = \"\") {\n  const [selectedElement, setElement] = useState(defaultElem);\n  const handleElementChange = (elem: T) => () => {\n    if (elem !== selectedElement) {\n      setElement(elem);\n    }\n  };\n\n  return { selectedElement, handleElementChange };\n}\n","export const getSelectOptionsFromKeys = (object: { [key: string]: void } | null) => {\n  return Object.keys(object ?? {})\n    .sort()\n    .map((key) => {\n      return { value: key, label: key };\n    });\n};\n","import Select from \"react-select\";\nimport { BaseSelectModel } from \"./types\";\n\nconst GRAY_BACKGROUND_COLOR = \"rgb(242, 242, 242)\";\nconst GRAY_COLOR = \"rgb(124, 124, 124)\";\nconst COLOR = \"#4A72FF\";\nconst BOX_SHADOW_100 =\n  \"0 0 1px 1px rgba(0, 0, 0, 0.02), 0 0.1px 0.3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.2)\";\nconst BOX_SHADOW_300 =\n  \"0 0 1px 1px rgba(0, 0, 0, 0.02), 0 0.4px 0.8px rgba(0, 0, 0, 0.1), 0 3px 6px rgba(0, 0, 0, 0.2)\";\n\nexport const specialSelectStyles = {\n  option: (provided: object, state: any) => ({\n    ...provided,\n    color: state.isSelected ? \"#FFFFFF\" : COLOR,\n    cursor: \"pointer\",\n  }),\n  indicatorSeparator: () => ({\n    display: \"none\",\n  }),\n  control: (provided: object, state: any) => ({\n    ...provided,\n    border: `none !important`,\n    borderRadius: \"10px\",\n    boxShadow: \"none\",\n    background: state.isDisabled ? GRAY_BACKGROUND_COLOR : \"#F5F8FF\",\n    cursor: \"pointer\",\n    height: \"100%\",\n  }),\n  container: (provided: any, state: any) => ({\n    ...provided,\n    transition: \"50ms ease-out box-shadow\",\n    boxShadow: state.selectProps.menuIsOpen ? BOX_SHADOW_300 : BOX_SHADOW_100,\n    borderRadius: \"10px\",\n  }),\n  singleValue: (provided: object, state: any) => ({\n    ...provided,\n    color: state.isDisabled ? GRAY_COLOR : COLOR,\n  }),\n  dropdownIndicator: (provided: object, state: any) => ({\n    ...provided,\n    color: state.isDisabled ? GRAY_COLOR : `${COLOR} !important`,\n    paddingLeft: 0,\n  }),\n  input: (provided: object, state: any) => ({\n    ...provided,\n    color: state.isDisabled ? GRAY_COLOR : COLOR,\n  }),\n  valueContainer: (provided: object) => ({\n    ...provided,\n    paddingRight: 0,\n  }),\n  placeholder: (provided: object) => ({\n    ...provided,\n    color: \"rgb(160, 160, 160)\",\n  }),\n};\n\nexport const BaseSelect = (props: BaseSelectModel) => {\n  const { options, onChange, className, placeholder, disabled, defaultValue } = props;\n\n  return (\n    <Select\n      className={className}\n      isClearable={true}\n      options={options}\n      onChange={onChange}\n      placeholder={placeholder}\n      isDisabled={disabled}\n      defaultValue={defaultValue}\n      id={className}\n    />\n  );\n};\n","import classNames from \"classnames\";\nimport { FC, ChangeEventHandler } from \"react\";\nimport \"./BaseInputString.scss\";\n\ntype BaseInputStringProps = {\n  value: string | undefined;\n  onChange: (v: string) => void;\n  className?: string;\n  disabled?: boolean;\n  placeholder?: string;\n};\n\nexport const BaseInputString: FC<BaseInputStringProps> = ({\n  onChange,\n  className,\n  value,\n  disabled,\n  placeholder,\n}) => {\n  return (\n    <input\n      className={classNames(\"BaseInputString\", className)}\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n      disabled={disabled}\n      placeholder={placeholder}\n    />\n  );\n};\n","import { FC, useCallback, useEffect, useState } from \"react\";\nimport Select from \"react-select\";\n\nimport { getSelectOptionsFromKeys } from \"../../../helpers/getSelectOptionsFromKeys\";\nimport { Effmu, Level, Rule } from \"../../../@types/common\";\nimport { SelectOption } from \"../../../@types/selectsModel\";\n\nimport { specialSelectStyles } from \"../../BaseSelect\";\nimport { BaseInputString } from \"../../BaseInputString\";\nimport { BaseButton } from \"../../BaseButton\";\n\nimport { b, SavedRules } from \"../index\";\nimport { fetchSettings, postFetchSettings } from \"../../../store/Settings\";\n\ninterface Props {\n  savedRules: SavedRules;\n  // здесь хранится что-то типа стейта для каждого поля формы\n  state: any;\n  level: Level;\n  effmu: Effmu;\n}\n\ntype HandleSaveFn = (value: string) => void;\nconst handleOnSelectChange = (handleSaveFn: HandleSaveFn) => (option: SelectOption<string>) =>\n  handleSaveFn(option?.value ?? \"\");\n\nexport const Ability2SectionRules: FC<Props> = ({ savedRules, state, level, effmu }) => {\n  const levelPlusEffmu = level + effmu;\n  const selectedRules = savedRules[levelPlusEffmu] || [];\n\n  const [network, setNetwork] = useState<string>(\"\");\n  const [currency, setCurrency] = useState<string>(\"\");\n  const [bid, setBid] = useState<string>(\"\");\n  const [status, setStatus] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [ability, setAbility] = useState<string>(\"\");\n\n  const ability2 =\n    state[network]?.[levelPlusEffmu]?.[currency]?.[bid]?.[status]?.[\n      Object.keys(state[network]?.[levelPlusEffmu]?.[currency]?.[bid]?.[status] ?? [])[0]\n    ] ?? 0;\n\n  const allNetworks = state;\n  const allCurrencies = allNetworks?.[network]?.[levelPlusEffmu];\n  const allBids = allCurrencies?.[currency];\n  const allStatuses = allBids?.[bid];\n  const allNames = {\n    [`all (A2: ${ability2})`]: null,\n    ...allStatuses?.[status],\n  };\n\n  const clearRows = () => {\n    setNetwork(\"\");\n    setCurrency(\"\");\n    setBid(\"\");\n    setStatus(\"\");\n    setName(\"\");\n    setAbility(\"\");\n  };\n\n  useEffect(clearRows, [effmu, level]);\n\n  const rows = [\n    {\n      rowStatus: \"editable\",\n      rule: { network, currency, bid, status, name, ability } as Rule,\n    },\n    ...selectedRules.map((rule) => ({ rowStatus: \"saved\", rule })),\n  ];\n\n  console.log(rows);\n\n  return (\n    <div className={b(\"rules\")}>\n      {rows.map(({ rowStatus, rule }, index) => {\n        const disabled = rowStatus !== \"editable\";\n\n        const formData = { ...rule, ability2, level: levelPlusEffmu };\n\n        return (\n          <div className={b(\"rules-row\")} key={rule.network + rule.bid + rule.name + index}>\n            <Select\n              styles={specialSelectStyles}\n              placeholder=\"Network\"\n              options={getSelectOptionsFromKeys(allNetworks)}\n              // @ts-ignore\n              onChange={handleOnSelectChange(setNetwork)}\n              className={b(\"rules-select\", { network: true })}\n              defaultValue={rule.network && { value: rule.network, label: rule.network }}\n              isDisabled={disabled}\n            />\n            <Select\n              styles={specialSelectStyles}\n              placeholder=\"Currency\"\n              options={getSelectOptionsFromKeys(allCurrencies)}\n              // @ts-ignore\n              onChange={handleOnSelectChange(setCurrency)}\n              className={b(\"rules-select\", { currency: true })}\n              defaultValue={rule.currency && { value: rule.currency, label: rule.currency }}\n              isDisabled={disabled || !rule.network}\n            />\n            <Select\n              styles={specialSelectStyles}\n              placeholder=\"Bid\"\n              options={getSelectOptionsFromKeys(allBids)}\n              // @ts-ignore\n              onChange={handleOnSelectChange(setBid)}\n              className={b(\"rules-select\", { bid: true })}\n              defaultValue={rule.bid && { value: rule.bid, label: rule.bid }}\n              isDisabled={disabled || !rule.currency}\n            />\n            <Select\n              styles={specialSelectStyles}\n              placeholder=\"Status\"\n              options={getSelectOptionsFromKeys(allStatuses)}\n              // @ts-ignore\n              onChange={handleOnSelectChange(setStatus)}\n              className={b(\"rules-select\", { status: true })}\n              defaultValue={rule.status && { value: rule.status, label: rule.status }}\n              isDisabled={disabled || !rule.bid}\n            />\n            <Select\n              styles={specialSelectStyles}\n              placeholder=\"Name\"\n              options={getSelectOptionsFromKeys(allNames)}\n              // @ts-ignore\n              onChange={handleOnSelectChange(setName)}\n              className={b(\"rules-select\", { name: true })}\n              defaultValue={rule.name && { value: rule.name, label: rule.name }}\n              isDisabled={disabled || !rule.status}\n            />\n            <BaseInputString\n              value={rule.ability}\n              onChange={setAbility}\n              className={b(\"rules-ability\")}\n              disabled={disabled || !rule.name}\n              placeholder=\"Ability 2\"\n            />\n            {!disabled && (\n              <BaseButton\n                onClick={async () => {\n                  await postFetchSettings({\n                    method: \"add\",\n                    ...formData,\n                  });\n                  await fetchSettings();\n                  clearRows();\n                }}\n                className={b(\"button\", { apply: true })}\n                disabled={!rule.status || !rule.ability}\n                green\n              >\n                Apply\n              </BaseButton>\n            )}\n            {disabled && (\n              <BaseButton\n                onClick={async () => {\n                  await postFetchSettings({ method: \"delete\", ...formData });\n                  await fetchSettings();\n                }}\n                className={b(\"button\", { delete: true })}\n                red\n              >\n                Delete\n              </BaseButton>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { FC } from \"react\";\nimport classes from \"./Loader.module.scss\";\n\nexport const Loader: FC = () => {\n  return (\n    <div className={classes.wrapper}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n","import b_ from \"b_\";\nimport { useStore } from \"effector-react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Effmu, LevelPlusEffmu, Rule } from \"../../@types/common\";\nimport { EFFMU } from \"../../constants\";\nimport { $prevSettings, $state, fetchSettings, fetchStateAbility2 } from \"../../store/Settings\";\n\nimport { LevelBlocks, useLevelBlocks } from \"../LevelBlocks\";\nimport { ElementsToggle, useElementsToggle } from \"../ElementsToggle\";\n\nimport { Ability2SectionRules } from \"./__Rules\";\n\nimport \"./index.scss\";\nimport { Loader } from \"../Loader\";\n\n// поработать над неймингом если есть желание\ntype State = any;\nexport type SavedRules = {\n  [key: LevelPlusEffmu]: Rule[] | null;\n};\n\nexport const b = b_.with(\"ability-2-section\");\n\nexport const Ability2Section = () => {\n  // @ts-ignore блять пиздец нахуй блять что тут с типами и неймингом\n  const savedRules = useStore($prevSettings) as SavedRules;\n  const state = useStore($state) as State;\n\n  useEffect(() => {\n    fetchStateAbility2();\n    fetchSettings();\n  }, []);\n\n  const ability2Loading = useStore(fetchStateAbility2.pending);\n\n  const { selectedLevel, handleLevelChange } = useLevelBlocks();\n  const { selectedElement: selectedEffmu, handleElementChange: handleEffmuChange } =\n    useElementsToggle<Effmu>(EFFMU[0]);\n\n  return (\n    <section className={b()}>\n      <span className={b(\"title\")}>Rules Ability 2:</span>\n      <LevelBlocks selectedLevel={selectedLevel} onLevelChange={handleLevelChange} />\n      {selectedLevel !== null && (\n        <>\n          <span className={b(\"subtitle\")}>Rules for {selectedLevel} level</span>\n          <ElementsToggle\n            mix={b(\"effmu-toggle\")}\n            selectedElement={selectedEffmu}\n            onElementChange={handleEffmuChange}\n            elements={EFFMU}\n          />\n          {!ability2Loading ? (\n            <Ability2SectionRules\n              savedRules={savedRules}\n              state={state}\n              level={selectedLevel}\n              effmu={selectedEffmu}\n            />\n          ) : (\n            <div className={b(\"loader\")}>\n              <Loader />\n              <span className={b(\"loader-title\")}>\n                Maximum time - 1 minute (in case the sample value is 1-3)\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n","import { createStore } from \"effector\";\n\nexport const $aliases = createStore<string[]>([]);\n","import { createEffect, createApi } from \"effector\";\nimport { $aliases } from \"./state\";\nimport api from \"../../api\";\n\nexport const aliasesEvents = createApi($aliases, {\n  addAlias: (store, alias: string) => [...store, alias],\n  deleteAlias: (store, alias: string) => store.filter((a) => a !== alias),\n});\n\nexport const getAliasesRequest = createEffect(async (level?: number) => {\n  return await api.get<string[]>(\"/api/aliases\", { level });\n});\n\n$aliases.on(getAliasesRequest.doneData, (store, aliases) => aliases);\n","export function Error(props: { className: string }) {\n  return (\n    <svg\n      width=\"16\"\n      height=\"17\"\n      viewBox=\"0 0 16 17\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0 8.00275C0 12.421 3.58172 16.0027 8 16.0027C12.4183 16.0027 16 12.421 16 8.00275C16 3.58447 12.4183 0.00274658 8 0.00274658C3.58172 0.00274658 0 3.58447 0 8.00275ZM14 8.00275C14 11.3165 11.3137 14.0027 8 14.0027C4.68629 14.0027 2 11.3165 2 8.00275C2 4.68904 4.68629 2.00275 8 2.00275C11.3137 2.00275 14 4.68904 14 8.00275ZM6.86011 11.0307C6.86011 10.3587 7.35211 9.89075 8.00011 9.89075C8.64811 9.89075 9.14011 10.3587 9.14011 11.0307C9.14011 11.7027 8.64811 12.1707 8.00011 12.1707C7.35211 12.1707 6.86011 11.7027 6.86011 11.0307ZM7.57875 4H8.42125C8.86497 4 9.21168 4.38312 9.16753 4.82464L8.79503 8.54925C8.76947 8.80485 8.55438 8.9995 8.29751 8.9995H7.70249C7.44562 8.9995 7.23053 8.80485 7.20497 8.54925L6.83247 4.82464C6.78832 4.38312 7.13503 4 7.57875 4Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n}\n","import { toast } from \"react-toastify\";\nimport { Check } from \"../Icon/Check\";\nimport { Error } from \"../Icon/Error\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport classes from \"./NotificationService.module.scss\";\n\n//Уведомление о успехе\nexport function SucNot(content: string) {\n  toast.success(\n    <div className={classes.NotificationContent}>\n      <Check className={classes.NotificationIcon} /> {content}\n    </div>,\n    {\n      className: classes.NotificationSuccess,\n    },\n  );\n}\n\n//Уведомление о ошибке\nexport function ErrNot(content: string) {\n  toast.error(\n    <div className={classes.NotificationContent}>\n      <Error className={classes.NotificationIcon} /> {content}\n    </div>,\n    {\n      className: classes.NotificationError,\n    },\n  );\n}\n","import { createStore } from \"effector\";\nimport { ConfigModel } from \"./../../@types/configModel\";\n\nexport const $config = createStore<ConfigModel | null>(null);\n\nexport const DEFAULT_EDITABLE_CONFIG: ConfigModel = {\n  alias: \"\",\n  // @ts-ignore шатал я рот этого тайпскрипта, todo ему нужен конфиг, пропускающий []\n  networks: [],\n  mail: \"\",\n  effmu: \"A\",\n  // todo чекнуть на баги\n  password: \"\",\n};\nexport const $editableConfig = createStore<ConfigModel>(DEFAULT_EDITABLE_CONFIG);\n","import { createDomain, createApi } from \"effector\";\n\nimport { ConfigModel, defaultConfigModel } from \"../../@types/configModel\";\nimport api from \"../../api\";\nimport { ErrNot } from \"../../components/NotificationService\";\n\nimport { $config, $editableConfig, DEFAULT_EDITABLE_CONFIG } from \"./state\";\nimport { Effmu, Level, Network } from \"../../@types/common\";\n\nconst DEFAULT_ERROR_MESSAGE = \"An error has occurred. You are denied access to the service.\";\n\nconst configDomain = createDomain();\n\nexport const { clearConfig } = createApi($config, {\n  clearConfig: () => null,\n});\n\nexport const getConfigRequest = configDomain.createEffect(\n  async (params: { alias: string; password: string }) => {\n    return await api.get<ConfigModel>(\"/api/config\", params);\n  },\n);\n\nexport const postConfigRequest = configDomain.createEffect(\n  async (params: { config: defaultConfigModel; password: string }) => {\n    const { config, password } = params;\n\n    await api.postConfigRequest(config, password);\n  },\n);\n\nexport const patchConfigRequest = configDomain.createEffect(\n  async ({ alias, config, password }: { alias: string; config: ConfigModel; password: string }) => {\n    await api.patchConfigRequest(alias, config, password);\n    await getConfigRequest({ alias, password: config.password });\n  },\n);\n\nexport const deleteConfigRequest = configDomain.createEffect(\n  async (params: { alias: string; password: string }) => {\n    await api.deleteConfig(params);\n    clearConfig();\n  },\n);\n\nconfigDomain.onCreateEffect((effect) => {\n  effect.fail.watch(({ error }: { error: any }) =>\n    ErrNot(error?.response?.data?.message || DEFAULT_ERROR_MESSAGE),\n  );\n});\n\nexport const editableConfigEvents = createApi($editableConfig, {\n  setConfig: (_, config: ConfigModel) => config,\n  setConfig2: (_, config: ConfigModel) => config,\n  clearConfig: (_) => DEFAULT_EDITABLE_CONFIG,\n  handleChangeMail: (config, mail: string) => ({\n    ...config,\n    mail,\n  }),\n  handleChangeEffmu: (config, effmu: Effmu) => ({\n    ...config,\n    effmu,\n  }),\n  handleChangeLevel: (config, { network, level }: { network: Network; level: Level }) => ({\n    ...config,\n    networks: { ...config.networks, [network]: level },\n  }),\n  handleChangePassword: (config, password: string) => ({\n    ...config,\n    password,\n  }),\n});\n\n$config.on(getConfigRequest.doneData, (_, config) => config);\n","import { createStore } from \"effector\";\n\nexport const $password = createStore<string>(\"\");\n\nexport const $isValidAdminPassword = createStore<boolean>(false);\n","import b_ from \"b_\";\nimport { useStore } from \"effector-react\";\nimport { FC, useState } from \"react\";\n\nimport { $password, handleChangePassword } from \"../../store/Password\";\n\nimport { BaseInputString } from \"../BaseInputString\";\nimport { BaseButton } from \"../BaseButton\";\n\nimport \"./PasswordSection.scss\";\n\nexport enum PasswordSectionType {\n  ALIAS = \"alias\",\n  ADMIN = \"admin\",\n}\n\nexport type OnPasswordSubmit = ({ password, login }: { password: string; login: string }) => void;\n\ninterface Props {\n  onSubmit: OnPasswordSubmit;\n  type?: PasswordSectionType;\n}\n\nconst b = b_.with(\"password-section\");\n\nexport const PasswordSection: FC<Props> = ({ onSubmit, type }) => {\n  const [login, setLogin] = useState(\"\");\n  const password = useStore($password);\n\n  const isAdmin = type === PasswordSectionType.ADMIN;\n  const isAlias = type === PasswordSectionType.ALIAS || !type;\n\n  const whosePassword = isAdmin ? \"admin\" : \"your\";\n\n  return (\n    <section className={b()}>\n      <div className={b(\"content-wrapper\")}>\n        {isAlias && (\n          <div className={b(\"input-wrapper\")}>\n            <span className={b(\"label\")}>\n              Enter <strong>your alias</strong> here\n            </span>\n            <BaseInputString className={b(\"input\")} value={login} onChange={setLogin} />\n          </div>\n        )}\n\n        <div className={b(\"input-wrapper\")}>\n          <span className={b(\"label\")}>\n            Enter <strong>{whosePassword} password</strong> here\n          </span>\n          <BaseInputString\n            className={b(\"input\")}\n            value={password}\n            onChange={handleChangePassword}\n          />\n        </div>\n        <BaseButton className={b(\"submit-button\")} onClick={() => onSubmit({ password, login })}>\n          Submit\n        </BaseButton>\n      </div>\n    </section>\n  );\n};\n","import { createApi, createEffect } from \"effector\";\nimport api from \"../../api\";\nimport { $isValidAdminPassword, $password } from \"./state\";\n\nexport const { handleChangePassword } = createApi($password, {\n  handleChangePassword: (_: string, v: string) => v,\n});\n\nexport const { setIsValidAdminPassword } = createApi($isValidAdminPassword, {\n  setIsValidAdminPassword: (_: boolean, v: boolean) => v,\n});\n\nexport const validateAdminPasswordRequest = createEffect(async (password: string) => {\n  const result = await api.checkAdminPassword(password);\n  setIsValidAdminPassword(!!result.data);\n});\n","import { tournamentsSettingsProps } from \"./types\";\nimport { createStore } from \"effector\";\n\nexport const TIMEZONES = [{ value: \"28800000\", label: \"MSK\" }];\n\nexport const TIMERANGE = [\n  { value: \"600\", label: \"<10 minutes\" },\n  { value: \"3600\", label: \"<1 hour\" },\n  { value: \"43200\", label: \"<12 hours\" },\n  { value: \"86400\", label: \"<24 hours\" },\n  { value: \"604800\", label: \"<1 week\" },\n];\n\nexport const EFFMU = [\n  { value: \"A\", label: \"A\" },\n  { value: \"B\", label: \"B\" },\n  { value: \"C\", label: \"C\" },\n];\n\nexport const NETWORKS = [\n  { value: \"PokerStars\", label: \"PS.eu\" },\n  { value: \"iPoker\", label: \"IP\" },\n  { value: \"Chico\", label: \"Chico\" },\n  { value: \"PokerStars(FR-ES-PT)\", label: \"PS.es\" },\n  { value: \"PartyPoker\", label: \"Party\" },\n  { value: \"GGNetwork\", label: \"GG\" },\n  { value: \"888Poker\", label: \"888\" },\n  { value: \"Winamax\", label: \"WNMX\" },\n  { value: \"WPN\", label: \"WPN\" },\n];\n\nexport const SHORT_NETWORKS = [\n  { value: \"PS.eu\", label: \"PS.eu\" },\n  { value: \"IP\", label: \"IP\" },\n  { value: \"Chico\", label: \"Chico\" },\n  { value: \"PS.es\", label: \"PS.es\" },\n  { value: \"Party\", label: \"Party\" },\n  { value: \"GG\", label: \"GG\" },\n  { value: \"888\", label: \"888\" },\n  { value: \"WNMX\", label: \"WNMX\" },\n  { value: \"WPN\", label: \"WPN\" },\n];\n\nexport const DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS: tournamentsSettingsProps = {\n  network: null,\n  time: TIMERANGE[1],\n  timezone: TIMEZONES[0],\n  timezoneTable: null,\n  prizepoolStart: 0,\n  prizepoolEnd: 10000000,\n  moneyStart: 1,\n  moneyEnd: 10000,\n  KO: false,\n  turbo: false,\n  superTurbo: false,\n  freezout: false,\n  normal: false,\n  dateStart: \"00\",\n  dateEnd: \"24\",\n};\n\nexport const $tournamentsSettings = createStore<tournamentsSettingsProps>(\n  DEFAULT_EDITABLE_TOURNAMENTS_SETTINGS\n);\n","import { createApi } from \"effector\";\nimport { MultiValue, SingleValue } from \"react-select\";\nimport { selectModel } from \"../../@types/selectsModel\";\nimport { $tournamentsSettings } from \"./state\";\n\nexport const editableTournamentsSettings = createApi($tournamentsSettings, {\n  handleChangeNetwork: (setting, network: MultiValue<selectModel>) => ({\n    ...setting,\n    network,\n  }),\n  handleChangeTime: (setting, time: SingleValue<selectModel>) => ({\n    ...setting,\n    time,\n  }),\n  handleChangeTimezone: (setting, timezone: SingleValue<selectModel>) => ({\n    ...setting,\n    timezone,\n  }),\n  handleChangeTimezonetable: (setting, timezoneTable: string) => ({\n    ...setting,\n    timezoneTable,\n  }),\n  handleChangeMoneyStart: (setting, moneyStart: number) => ({\n    ...setting,\n    moneyStart,\n  }),\n  handleChangeMoneyEnd: (setting, moneyEnd: number) => ({\n    ...setting,\n    moneyEnd,\n  }),\n  handleChangePrizepoolStart: (setting, prizepoolStart: number) => ({\n    ...setting,\n    prizepoolStart,\n  }),\n  handleChangePrizepoolEnd: (setting, prizepoolEnd: number) => ({\n    ...setting,\n    prizepoolEnd,\n  }),\n  handleChangeDateStart: (setting, dateStart: string) => ({\n    ...setting,\n    dateStart: String(Number(dateStart) >= 24 ? 24 : dateStart),\n  }),\n  handleChangeDateEnd: (setting, dateEnd: string) => ({\n    ...setting,\n    dateEnd: String(Number(dateEnd) >= 24 ? 24 : dateEnd),\n  }),\n  handleChangeKo: (setting, KO: boolean) => ({\n    ...setting,\n    KO,\n  }),\n  handleChangeTurbo: (setting, turbo: boolean) => ({\n    ...setting,\n    turbo,\n  }),\n  handleChangeSuperTurbo: (setting, superTurbo: boolean) => ({\n    ...setting,\n    superTurbo,\n  }),\n  handleChangeFreezout: (setting, freezout: boolean) => ({\n    ...setting,\n    freezout,\n  }),\n  handleChangeNormal: (setting, normal: boolean) => ({\n    ...setting,\n    normal,\n  }),\n});\n","import { useStore } from \"effector-react\";\nimport { FC, FormEvent, useState } from \"react\";\nimport Select from \"react-select\";\n\nimport { getAliasesRequest } from \"../../../store/Alias\";\nimport { postConfigRequest } from \"../../../store/Config\";\nimport { $password } from \"../../../store/Password\";\nimport { EFFMU } from \"../../../store/Select\";\nimport { specialSelectStyles } from \"../../BaseSelect\";\nimport { BaseInputString } from \"../../BaseInputString\";\n\ninterface AliasesSectionFormProps {\n  selectedLevel: number | null;\n}\n\nimport { b } from \"../index\";\nimport { SelectOption } from \"../../../@types/selectsModel\";\nimport { Effmu } from \"../../../@types/common\";\nimport { BaseButton } from \"../../BaseButton\";\n\nconst selectStyles = {\n  ...specialSelectStyles,\n  control: (provided: object, state: any) => ({\n    ...specialSelectStyles.control(provided, state),\n    fontWeight: 700,\n    fontSize: \"20px\",\n    width: \"90px\",\n  }),\n};\n\nexport const AliasesSectionForm: FC<AliasesSectionFormProps> = ({ selectedLevel }) => {\n  const [alias, setAlias] = useState<string>(\"\");\n  const [mail, setMail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [effmu, setEffmu] = useState<Effmu>(\"A\");\n  const adminPassword = useStore($password);\n\n  const handleSubmit = async () => {\n    await postConfigRequest({\n      config: {\n        alias,\n        level: selectedLevel ?? 16,\n        effmu,\n        mail,\n        password,\n      },\n      password: adminPassword,\n    });\n    await getAliasesRequest(selectedLevel ?? 16);\n    setAlias(\"\");\n    setMail(\"\");\n    setPassword(\"\");\n    setEffmu(\"A\");\n  };\n\n  return (\n    <div className={b(\"alias-form\")}>\n      <BaseInputString\n        onChange={setAlias}\n        value={alias}\n        placeholder=\"Alias\"\n        className={b(\"alias-form-input\")}\n      />\n      <BaseInputString\n        onChange={setPassword}\n        value={password}\n        placeholder=\"Password\"\n        className={b(\"alias-form-input\")}\n      />\n      <BaseInputString\n        onChange={setMail}\n        value={mail}\n        placeholder=\"Mail\"\n        className={b(\"alias-form-input\")}\n      />\n      <Select\n        options={EFFMU}\n        placeholder=\"Effmu\"\n        defaultValue={EFFMU[0]}\n        // @ts-ignore react-select конечно молодец, но типы и стили ужасны\n        onChange={(option: SelectOption<Effmu>) => setEffmu(option.value)}\n        styles={selectStyles}\n      />\n      <BaseButton className={b(\"alias-form-button\")} onClick={handleSubmit} green>\n        Add\n      </BaseButton>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/close.db961a99.svg\";","import b_ from \"b_\";\n\nimport CloseIcon from \"../../assets/icons/close.svg\";\n\nimport { BaseButton } from \"../BaseButton\";\n\nimport \"./index.scss\";\n\nexport const b = b_.with(\"approval-section\");\n\ninterface ApprovalSectionProps {\n  onClose: () => void;\n  onApprove: () => void;\n  title?: string;\n  subtitle?: string;\n  withCloseIcon?: boolean;\n}\n\nconst DEFAULT_TITLE = \"Do you really want to perform this action?\";\nconst DEFAULT_SUBTITLE = \"This action cannot be undone\";\n\nexport const ApprovalSection = ({\n  onApprove,\n  onClose,\n  title,\n  subtitle,\n  withCloseIcon,\n}: ApprovalSectionProps) => {\n  return (\n    <section className={b()}>\n      <h2 className={b(\"title\")}>{title ?? DEFAULT_TITLE}</h2>\n      <h4 className={b(\"subtitle\")}>{subtitle ?? DEFAULT_SUBTITLE}</h4>\n      <div className={b(\"button-wrapper\")}>\n        <BaseButton onClick={onApprove} className={b(\"approve-button\")} autoFocus>\n          Agree\n        </BaseButton>\n        <BaseButton onClick={onClose} className={b(\"close-button\")} clear>\n          Cancel\n        </BaseButton>\n      </div>\n      {withCloseIcon && (\n        <button onClick={onClose} className={b(\"close-icon\")}>\n          <img src={CloseIcon} alt=\"close\" />\n        </button>\n      )}\n    </section>\n  );\n};\n","import b_ from \"b_\";\nimport { FC } from \"react\";\nimport Select from \"react-select\";\n\nimport { Networks } from \"../../../@types/common\";\nimport { SelectOption } from \"../../../@types/selectsModel\";\nimport { LEVELS_ARRAY } from \"../../../constants\";\nimport { editableConfigEvents } from \"../../../store/Config\";\n\nimport { specialSelectStyles } from \"../../BaseSelect\";\n\nconst selectStyles = {\n  ...specialSelectStyles,\n  option: (provided: object, state: any) => ({\n    ...specialSelectStyles.option(provided, state),\n    fontSize: \"20px\",\n  }),\n  control: (provided: object, state: any) => ({\n    ...specialSelectStyles.control(provided, state),\n    fontSize: \"20px\",\n    width: \"70px\",\n  }),\n  noOptionsMessage: (provided: object) => ({\n    display: \"none\",\n  }),\n};\n\ninterface Props {\n  networks: Networks;\n  canChangeLevels?: boolean;\n}\n\nconst b = b_.with(\"user-settings-table\");\n\nconst levelsOptions: SelectOption<number>[] = LEVELS_ARRAY.map((level) => ({\n  value: level,\n  label: level,\n}));\n\nexport const UserSettingsTable: FC<Props> = ({ networks, canChangeLevels }) => {\n  return (\n    <div className={b({ \"select-in-cells\": canChangeLevels })}>\n      <div className={b(\"row\", { headline: true })}>\n        <div className={b(\"cell\")}>Network</div>\n        <div className={b(\"cell\")}>Level</div>\n      </div>\n      {Object.keys(networks).map((network) => {\n        const level = networks[network];\n        const defaultOption = levelsOptions.find((option) => option.value === level);\n        const handleLevelChange = (option: SelectOption<number>) =>\n          editableConfigEvents.handleChangeLevel({ network, level: option.value });\n\n        return (\n          <div className={b(\"row\")} key={network}>\n            <div className={b(\"cell\")}>{network}</div>\n            <div className={b(\"cell\")}>\n              {canChangeLevels ? (\n                <Select\n                  options={levelsOptions}\n                  defaultValue={defaultOption}\n                  // @ts-ignore все работает\n                  onChange={handleLevelChange}\n                  className={b(\"input\", { select: true })}\n                  styles={selectStyles}\n                />\n              ) : (\n                networks[network]\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/info.e560efa3.svg\";","export default __webpack_public_path__ + \"static/media/mail.f0afad49.svg\";","export default __webpack_public_path__ + \"static/media/settings.45389f62.png\";","export default __webpack_public_path__ + \"static/media/eye.f07b983c.svg\";","import { FC, useState } from \"react\";\nimport Select from \"react-select\";\n\nimport { Effmu } from \"../../../@types/common\";\nimport { SelectOption } from \"../../../@types/selectsModel\";\nimport { ConfigModel } from \"../../../@types/configModel\";\nimport InfoIcon from \"../../../assets/icons/info.svg\";\nimport MailIcon from \"../../../assets/icons/mail.svg\";\nimport SettingsIcon from \"../../../assets/icons/settings.png\";\nimport EyeIcon from \"../../../assets/icons/eye.svg\";\nimport { editableConfigEvents } from \"../../../store/Config\";\nimport { EFFMU } from \"../../../store/Select\";\n\nimport { specialSelectStyles } from \"../../BaseSelect\";\nimport { BaseInputString } from \"../../BaseInputString\";\n\nimport b_ from \"b_\";\n\ninterface Props {\n  config: ConfigModel;\n  isAdminPage?: boolean;\n}\n\nconst selectStyles = {\n  ...specialSelectStyles,\n  control: (provided: object, state: any) => ({\n    ...specialSelectStyles.control(provided, state),\n    fontWeight: 700,\n    fontSize: \"22px\",\n    width: \"90px\",\n  }),\n};\n\nconst b = b_.with(\"user-settings-info\");\n\nexport const UserSettingsInfo: FC<Props> = ({ config, isAdminPage }) => {\n  const { effmu, alias, mail, password } = config;\n  const [showPassword, setShowPassword] = useState(false);\n  const toggleShowPassword = () => setShowPassword((p) => !p);\n\n  const defaultEffMuOption = EFFMU.find((option) => option.value === effmu) || EFFMU[0];\n\n  const handleEmailChange = (email: string) => editableConfigEvents.handleChangeMail(email);\n  const handlePasswordChange = (password: string) =>\n    editableConfigEvents.handleChangePassword(password);\n  const handleEffMuChange = (option: SelectOption<Effmu>) =>\n    editableConfigEvents.handleChangeEffmu(option.value);\n\n  const whichAccount = isAdminPage ? \"this\" : \"your\";\n\n  return (\n    <div className={b()}>\n      <div className={b(\"header\")}>\n        <span className={b(\"header-alias\")}>\n          <b>Alias:</b> {alias}\n        </span>\n        {!isAdminPage && (\n          <span className={b(\"header-password\")}>\n            <b>Password:</b>\n            <div className={b(\"header-password-block\")} onClick={toggleShowPassword}>\n              <span className={b(\"header-password-text\", { hidden: !showPassword })}>\n                {showPassword ? password : \"****\"}\n              </span>\n              <img className={b(\"header-password-img\")} src={EyeIcon} alt=\"\" />\n            </div>\n          </span>\n        )}\n      </div>\n      <div className={b(\"settings\")}>\n        <div className={b(\"effmu-wrapper\")}>\n          <b className={b(\"label\")}>Eff mu</b>\n          <Select\n            options={EFFMU}\n            defaultValue={defaultEffMuOption}\n            // @ts-ignore все работает че дурной жалуется\n            onChange={handleEffMuChange}\n            className={b(\"input\", { effmu: true })}\n            styles={selectStyles}\n          />\n        </div>\n        <div className={b(\"email-wrapper\")}>\n          <b className={b(\"label\")}>E-mail</b>\n          <BaseInputString\n            value={mail}\n            onChange={handleEmailChange}\n            className={b(\"input\", { text: true })}\n          />\n        </div>\n      </div>\n      {isAdminPage && (\n        <div className={b(\"password-wrapper\")}>\n          <b className={b(\"label\")}>Password</b>\n          <BaseInputString\n            value={password}\n            onChange={handlePasswordChange}\n            className={b(\"input\", { text: true })}\n            disabled={!isAdminPage}\n          />\n        </div>\n      )}\n      <div className={b(\"additional-info\")}>\n        <div className={b(\"additional-info-line\")}>\n          <img src={InfoIcon} alt=\"info\" />\n          Here you can change the Eff mu and E-mail for {whichAccount} account\n        </div>\n        <div className={b(\"additional-info-line\")}>\n          <img src={MailIcon} alt=\"mail\" />\n          Previously played tournaments that do not comply with the team's rules will be sent to\n          {whichAccount} email every day\n        </div>\n        {!isAdminPage && (\n          <div className={b(\"additional-info-line\")}>\n            <img src={SettingsIcon} alt=\"levels\" />\n            To change the level of {whichAccount} account on a particular network, contact the\n            administrators\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport React from \"react\";\nimport b_ from \"b_\";\n\nimport CloseIcon from \"../../assets/icons/close.svg\";\nimport { $password } from \"../../store/Password\";\nimport { ConfigModel } from \"../../@types/configModel\";\nimport { $editableConfig, editableConfigEvents, patchConfigRequest } from \"../../store/Config\";\n\nimport { BaseButton } from \"../BaseButton\";\n\nimport { UserSettingsTable } from \"./__Table\";\nimport { UserSettingsInfo } from \"./__Info\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  config: ConfigModel;\n  isAdminPage?: boolean;\n  onClose: () => void;\n}\n\nexport const b = b_.with(\"user-settings\");\n\nexport const UserSettings = ({ config, isAdminPage, onClose }: Props) => {\n  const [progress, setProgress] = React.useState(false);\n\n  const editableConfig = useStore($editableConfig);\n  const { mail, effmu, alias, networks, password: newPassword } = editableConfig;\n\n  const password = useStore($password);\n\n  React.useEffect(() => {\n    editableConfigEvents.setConfig(config);\n\n    return editableConfigEvents.clearConfig;\n  }, [config]);\n\n  if (!alias) {\n    return null;\n  }\n\n  const handleSubmit = async () => {\n    setProgress(true);\n    await patchConfigRequest({\n      alias,\n      config: {\n        networks: isAdminPage ? networks : config.networks,\n        mail,\n        effmu,\n        alias,\n        password: isAdminPage ? newPassword : config.password,\n      },\n      password,\n    });\n    setProgress(false);\n\n    onClose();\n  };\n\n  return (\n    <div className={b()}>\n      <button onClick={onClose} className={b(\"close-icon\")}>\n        <img src={CloseIcon} alt=\"close\" />\n      </button>\n      <div className={b(\"content\")}>\n        <UserSettingsTable networks={networks} canChangeLevels={isAdminPage} />\n        <div className={b(\"content-main-block\")}>\n          <UserSettingsInfo config={editableConfig} isAdminPage={isAdminPage} />\n          <BaseButton onClick={handleSubmit} className={b(\"save-button\")} disabled={progress}>\n            Save changes\n          </BaseButton>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { forwardRef, useImperativeHandle } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport cx from \"classnames\";\nimport b_ from \"b_\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  children: React.ReactNode;\n  mix?: string;\n}\n\nexport interface ModalRef {\n  open: () => void;\n  close: () => void;\n  isOpened: boolean;\n}\n\nconst b = b_.with(\"modal\");\n\nexport const Modal = forwardRef(({ children, mix }: Props, ref) => {\n  const [show, setShow] = React.useState(false);\n\n  const open = () => setShow(true);\n  const close = () => setShow(false);\n\n  useImperativeHandle<unknown, ModalRef>(ref, () => ({ open, close, isOpened: show }));\n\n  React.useEffect(() => {\n    const closeListener = (e: KeyboardEvent) => {\n      if (e.keyCode === 27) {\n        close();\n      }\n    };\n\n    window.addEventListener(\"keydown\", closeListener);\n    return () => window.removeEventListener(\"keydown\", closeListener);\n  }, []);\n\n  const container = document.getElementById(\"modal-root\");\n\n  if (!container || !show) {\n    return null;\n  }\n\n  return ReactDOM.createPortal(\n    <div className={b(\"wrapper\")}>\n      <div onClick={close} className={b(\"backdrop\")} />\n      <div className={cx(b(\"box\"), mix)}>{children}</div>\n    </div>,\n    container,\n  );\n});\n","import { useStore } from \"effector-react\";\nimport React, { FC, RefObject } from \"react\";\n\nimport CloseIcon from \"../../../assets/icons/close.svg\";\nimport { $config, deleteConfigRequest, getConfigRequest } from \"../../../store/Config\";\nimport { $aliases, aliasesEvents, getAliasesRequest } from \"../../../store/Alias\";\nimport { $isValidAdminPassword, $password } from \"../../../store/Password\";\n\nimport { ApprovalSection } from \"../../ApprovalSection\";\nimport { UserSettings } from \"../../UserSettings\";\nimport { Modal, ModalRef } from \"../../Modal\";\n\nimport { b } from \"../index\";\n\ninterface Props {\n  selectedLevel: number | null;\n  search: string;\n}\n\nexport const AliasesSectionList: FC<Props> = ({ selectedLevel, search }) => {\n  const settingsModalRef = React.useRef<ModalRef>(null);\n  const [selectedAlias, setSelectedAlias] = React.useState<string>(\"\");\n  const deleteModalRef = React.useRef<ModalRef>(null);\n  const handleModalOpen = (ref: RefObject<ModalRef>) => ref.current?.open();\n  const handleModalClose = (ref: RefObject<ModalRef>) => {\n    ref.current?.close();\n  };\n\n  const isAdminPage = useStore($isValidAdminPassword);\n  const selectedConfig = useStore($config);\n  const password = useStore($password);\n  const aliases =\n    useStore($aliases)?.filter((alias) =>\n      alias.toLocaleLowerCase().includes(search.toLocaleLowerCase()),\n    ) ?? [];\n\n  const aliasesLoading = useStore(getAliasesRequest.pending);\n\n  if (selectedLevel === null) {\n    return null;\n  }\n\n  if (aliasesLoading) {\n    return <span>Loading</span>;\n  }\n\n  const handleAliasClick = (alias: string) => async () => {\n    await getConfigRequest({ alias, password });\n    handleModalOpen(settingsModalRef);\n  };\n\n  const handleAliasDelete = (alias: string) => async () => {\n    await aliasesEvents.deleteAlias(alias);\n    await deleteConfigRequest({ alias, password });\n    await handleModalClose(deleteModalRef);\n  };\n\n  return (\n    <div className={b(\"alias-list\")}>\n      {aliases.length ? (\n        aliases.map((alias) => (\n          <div className={b(\"alias-item\")} key={alias}>\n            <div className={b(\"alias-item-text\")} onClick={handleAliasClick(alias)}>\n              {alias}\n            </div>\n            <div\n              className={b(\"alias-item-delete-wrapper\")}\n              onClick={async () => {\n                handleModalOpen(deleteModalRef);\n                await setSelectedAlias(alias);\n              }}\n            >\n              <img src={CloseIcon} alt=\"close\" />\n            </div>\n          </div>\n        ))\n      ) : (\n        <div>Nothing found</div>\n      )}\n      <Modal ref={settingsModalRef}>\n        {selectedConfig ? (\n          <UserSettings\n            config={selectedConfig}\n            isAdminPage={isAdminPage}\n            onClose={() => handleModalClose(settingsModalRef)}\n          />\n        ) : (\n          <div style={{ padding: 50 }}>Loading config</div>\n        )}\n      </Modal>\n      <Modal ref={deleteModalRef}>\n        <ApprovalSection\n          title=\"Do you really want to delete this alias?\"\n          onApprove={handleAliasDelete(selectedAlias)}\n          onClose={() => handleModalClose(deleteModalRef)}\n        />\n      </Modal>\n    </div>\n  );\n};\n","import b_ from \"b_\";\nimport React from \"react\";\n\nimport { getAliasesRequest } from \"../../store/Alias\";\n\nimport { BaseInputString } from \"../BaseInputString\";\nimport { LevelBlocks, ALL_LEVELS, useLevelBlocks } from \"../LevelBlocks\";\n\nimport { AliasesSectionForm } from \"./__Form\";\nimport { AliasesSectionList } from \"./__List\";\n\nimport \"./index.scss\";\n\nexport const b = b_.with(\"aliases-section\");\n\nexport const AliasesSection = () => {\n  const [search, setSearch] = React.useState<string>(\"\");\n\n  const { selectedLevel, handleLevelChange } = useLevelBlocks();\n  const isAllLevels = selectedLevel === ALL_LEVELS;\n\n  React.useEffect(() => {\n    if (isAllLevels) {\n      getAliasesRequest();\n    } else if (selectedLevel !== null) {\n      getAliasesRequest(selectedLevel);\n    }\n  }, [selectedLevel]);\n\n  // крч добавляем юзеров асинхронно - и запрос шлем и сами добавляем, если ошибка - убираем его\n  // с удалением то же самое\n  // чтобы не было много загрузок - можно было по многу добавлять\n\n  return (\n    <section className={b()}>\n      <h2 className={b(\"title\")}>Aliases by level:</h2>\n      <LevelBlocks selectedLevel={selectedLevel} onLevelChange={handleLevelChange} withAllLevels />\n      {selectedLevel !== null && (\n        <div className={b(\"content-wrapper\")}>\n          <div className={b(\"subtitle-wrapper\")}>\n            {!isAllLevels ? (\n              <h2 className={b(\"subtitle\")}>\n                Aliases for <strong>{selectedLevel} level</strong>\n              </h2>\n            ) : (\n              <h2 className={b(\"subtitle\")}>\n                Aliases for <strong>all level</strong>\n              </h2>\n            )}\n            <BaseInputString\n              onChange={setSearch}\n              value={search}\n              placeholder=\"Search\"\n              className={b(\"alias-form-input\", { search: true })}\n            />\n          </div>\n          {!isAllLevels && <AliasesSectionForm selectedLevel={selectedLevel} />}\n          <AliasesSectionList selectedLevel={selectedLevel} search={search} />\n        </div>\n      )}\n    </section>\n  );\n};\n","import { createStore } from \"effector\";\n\nexport const $sample = createStore<string>(\"0\");\n","import { sampleModel } from \"./../../@types/sampleModel\";\nimport { createEffect, createApi } from \"effector\";\nimport api from \"../../api\";\nimport { $sample } from \"./state\";\n\nexport const getSample = createEffect(async () => {\n  const result = await api.get<sampleModel>(\"/api/sample\");\n\n  return result.count;\n});\n\nexport const postSample = createEffect(async ({ sample }: { sample: string }) => {\n  await api.postSample(sample);\n});\n\nexport const { handleChangeSample } = createApi($sample, {\n  handleChangeSample: (_, sample: string) => sample,\n});\n\n$sample.on(getSample.doneData, (_, sample) => sample);\n","import { FC } from \"react\";\nimport classes from \"./BaseInputNumber.module.scss\";\nimport { BaseInputNumberModel } from \"./types\";\n\nimport classnames from \"classnames\";\n\nexport const BaseInputNumber: FC<BaseInputNumberModel> = ({\n  handleChange,\n  value,\n  placeholder,\n  className,\n  disabled,\n  max = 9999,\n}) => {\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const value = e.currentTarget.value;\n    if (\n      value &&\n      value !== \"-\" &&\n      !/^(0$|-?[1-9]\\d*(\\.\\d*[1-9]$)?|-?0\\.\\d*[1-9])$/.test(e.currentTarget.value)\n    )\n      return value;\n\n    handleChange(Number(value) > max ? String(max) : Number(value) < -max ? `-${max}` : value);\n  }\n\n  return (\n    <div className={classes.BaseInput}>\n      <input\n        id={placeholder}\n        {...{ value, onChange }}\n        placeholder={placeholder}\n        className={classnames(className, classes.input)}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n","import b_ from \"b_\";\nimport { useStore } from \"effector-react\";\nimport { $sample, handleChangeSample, postSample } from \"../../store/Sample\";\nimport { BaseButton } from \"../BaseButton\";\nimport { BaseInputNumber } from \"../BaseInputNumber\";\n\nexport const b = b_.with(\"sample-section\");\n\nimport \"./index.scss\";\n\nexport const SampleSection = () => {\n  const sample = useStore($sample);\n\n  return (\n    <section className={b()}>\n      <h2 className={b(\"title\")}>Sample:</h2>\n      <div className={b(\"wrapper\")}>\n        <BaseInputNumber\n          value={sample}\n          handleChange={handleChangeSample}\n          placeholder=\"Sample\"\n          className={b(\"input\")}\n        />\n        <BaseButton onClick={() => postSample({ sample })} className={b(\"button\")}>\n          SAVE\n        </BaseButton>\n      </div>\n    </section>\n  );\n};\n","import { offpeakModel } from \"../../@types/offpeakModel\";\nimport { createStore } from \"effector\";\n\nexport const $offpeak = createStore<offpeakModel>({\n  fromHour: \"00\",\n  fromMinutes: \"00\",\n  toHour: \"24\",\n  toMinutes: \"00\",\n});\n","import { offpeakModel } from \"../../@types/offpeakModel\";\nimport { createEffect, createApi, sample } from \"effector\";\nimport api from \"../../api\";\nimport { $offpeak } from \"./state\";\n\nexport const getOffpeak = createEffect(async () => {\n  const result = await api.get<offpeakModel>(\"/api/offpeak\");\n\n  return result;\n});\n\nexport const postOffpeak = createEffect(\n  async (offpeak: offpeakModel) => await api.postOffpeak(offpeak),\n);\n\nexport const {\n  handleChangeOffpeakFromHour,\n  handleChangeOffpeakToHour,\n  handleChangeOffpeakToMinutes,\n  handleChangeOffpeakFromMinutes,\n} = createApi($offpeak, {\n  handleChangeOffpeakFromHour: (offpeak, from: string) => ({\n    ...offpeak,\n    fromHour: String(Number(from) >= 24 ? 23 : from),\n  }),\n  handleChangeOffpeakToHour: (offpeak, to: string) => ({\n    ...offpeak,\n    toHour: String(Number(to) >= 24 ? 23 : to),\n  }),\n  handleChangeOffpeakFromMinutes: (offpeak, from: string) => ({\n    ...offpeak,\n    fromMinutes: String(Number(from) >= 60 ? 59 : from),\n  }),\n  handleChangeOffpeakToMinutes: (offpeak, to: string) => ({\n    ...offpeak,\n    toMinutes: String(Number(to) >= 60 ? 59 : to),\n  }),\n});\n\n$offpeak.on(getOffpeak.doneData, (_, offpeak) => offpeak);\n","import { FC } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport classes from \"./BaseInputMask.module.scss\";\nimport { BaseInputMaskModel } from \"./types\";\nimport cx from \"classnames\";\n\nexport const BaseInputMask: FC<BaseInputMaskModel> = ({\n  placeholder,\n  handleChange,\n  value,\n  className,\n}) => {\n  return (\n    <div className={classes.BaseInputMask}>\n      <label htmlFor={placeholder} className={classes.label}>\n        {placeholder}:\n      </label>\n      <InputMask\n        id={placeholder}\n        mask=\"99\"\n        onChange={(e) => {\n          return handleChange(e.currentTarget.value);\n        }}\n        className={cx(classes.input, className)}\n        value={value ?? 0}\n        maskPlaceholder={\"00\"}\n      />\n    </div>\n  );\n};\n","import b_ from \"b_\";\nimport { useStore } from \"effector-react\";\nimport {\n  $offpeak,\n  handleChangeOffpeakFromHour,\n  handleChangeOffpeakFromMinutes,\n  handleChangeOffpeakToHour,\n  handleChangeOffpeakToMinutes,\n  postOffpeak,\n} from \"../../store/Offpeak\";\nimport { BaseButton } from \"../BaseButton\";\nimport { BaseInputMask } from \"../BaseInputMask\";\n\nexport const b = b_.with(\"offpeak-section\");\n\nimport \"./index.scss\";\n\nexport const OffpeakSection = () => {\n  const offpeak = useStore($offpeak);\n\n  return (\n    <section className={b()}>\n      <h2 className={b(\"title\")}>Offpeak:</h2>\n      <div className={b(\"wrapper\")}>\n        <div className={b(\"line\")}>\n          <BaseInputMask\n            value={offpeak.fromHour}\n            handleChange={handleChangeOffpeakFromHour}\n            placeholder=\"Hour (from)\"\n            className={b(\"input\")}\n          />\n          <BaseInputMask\n            value={offpeak.fromMinutes}\n            handleChange={handleChangeOffpeakFromMinutes}\n            placeholder=\"Minutes (from)\"\n            className={b(\"input\")}\n          />\n        </div>\n        <div className={b(\"line\")}>\n          <BaseInputMask\n            value={offpeak.toHour}\n            handleChange={handleChangeOffpeakToHour}\n            placeholder=\"Hour (to)\"\n            className={b(\"input\")}\n          />\n          <BaseInputMask\n            value={offpeak.toMinutes}\n            handleChange={handleChangeOffpeakToMinutes}\n            placeholder=\"Minutes (to)\"\n            className={b(\"input\")}\n          />\n        </div>\n        <div className={b(\"line\")}>\n          <BaseButton onClick={() => postOffpeak(offpeak)} className={b(\"button\")}>\n            SAVE\n          </BaseButton>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import { rulesModel } from \"./../../@types/rulesModel\";\nimport { createStore } from \"effector\";\n\nexport const $rules = createStore<Array<rulesModel[]> | null>(null);\n","import { rulesModel } from \"../../@types/rulesModel\";\nimport { createDomain } from \"effector\";\n\nimport api from \"../../api\";\nimport { ErrNot } from \"../../components/NotificationService\";\n\nimport { $rules } from \"./state\";\n\nconst DEFAULT_ERROR_MESSAGE = \"An error has occurred. You are denied access to the service.\";\n\nconst configDomain = createDomain();\n\nexport const getRulesRequest = configDomain.createEffect(\n  async (params: { color: string; level: string; network: string; status: string; KO: string }) => {\n    return await api.get<Array<rulesModel[]>>(\"/api/rules\", params);\n  },\n);\n\nexport const postRulesRequest = configDomain.createEffect(async (rules: rulesModel[]) => {\n  await api.postRules(rules);\n  await getRulesRequest(rules[0]);\n});\n\nexport const deleteRulesRequest = configDomain.createEffect(async (rule: rulesModel[]) => {\n  await api.deleteRules(rule);\n  await getRulesRequest(rule[0]);\n});\n\nexport const patchRulesRequest = configDomain.createEffect(\n  async ({ rule, offpeak }: { rule: rulesModel[]; offpeak: boolean }) => {\n    await api.patchRules(rule, offpeak);\n    await getRulesRequest(rule[0]);\n  },\n);\n\nconfigDomain.onCreateEffect((effect) => {\n  effect.fail.watch(({ error }: { error: any }) =>\n    ErrNot(error?.response?.data?.message || DEFAULT_ERROR_MESSAGE),\n  );\n});\n\n$rules.on(getRulesRequest.doneData, (_, rules) => rules);\n","import b_ from \"b_\";\nimport cx from \"classnames\";\nimport { useState } from \"react\";\n\nimport { BaseButton } from \"../BaseButton\";\n\nimport \"./index.scss\";\n\ninterface ColorPaletteProps {\n  selectedElement: string;\n  onElementChange: (element: any) => () => void;\n  elements: string[];\n  mix?: string;\n}\n\nconst b = b_.with(\"color-palette\");\n\nexport const ColorPalette = ({\n  selectedElement,\n  onElementChange,\n  elements,\n  mix,\n}: ColorPaletteProps) => (\n  <div className={cx(b(), mix)}>\n    {elements.map((elem) => (\n      <BaseButton\n        className={b(\"button\", { selected: elem === selectedElement })}\n        onClick={onElementChange(elem)}\n        key={elem}\n        style={{ color: elem }}\n      />\n    ))}\n  </div>\n);\n","export const getUniqueElemKeyGetter = (elem: string) => {\n  const getter = (prefix?: string) => getUniqueElemKeyGetter(elem + prefix);\n  getter.key = elem;\n  return getter;\n};\n","import { rulesType } from \"../../@types/rulesModel\";\n\n// если здесь чет меняем то меняем и на сервере\nexport const RULES_TYPES_TO_FIELDS = {\n  FromTo: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n  ],\n  FromToName: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  BidGt: [\n    {\n      type: \"number\",\n      placeholder: \"Bid\",\n      options: null,\n    },\n    {\n      type: \"number\",\n      placeholder: \"Guarantee\",\n      options: null,\n    },\n  ],\n  Ticket: [\n    {\n      type: \"number\",\n      placeholder: \"Bid\",\n      options: null,\n    },\n    {\n      type: \"number\",\n      placeholder: \"Tickets\",\n      options: null,\n    },\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  BidGtName: [\n    {\n      type: \"number\",\n      placeholder: \"Bid\",\n      options: null,\n    },\n    {\n      type: \"number\",\n      placeholder: \"Guarantee\",\n      options: null,\n    },\n    {\n      type: \"string\",\n      placeholder: \"includes\",\n      options: null,\n    },\n  ],\n  FromToGt: [\n    {\n      type: \"number\",\n      placeholder: \"From\",\n      options: null,\n    },\n    {\n      type: \"number\",\n      placeholder: \"To\",\n      options: null,\n    },\n    {\n      type: \"number\",\n      placeholder: \"Guarantee\",\n      options: null,\n    },\n  ],\n  BidName: [\n    {\n      type: \"number\",\n      placeholder: \"Bid\",\n      options: null,\n    },\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  Name: [\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  NotName: [\n    {\n      type: \"string\",\n      placeholder: \"Includes\",\n      options: null,\n    },\n  ],\n  FLAGS: [\n    {\n      type: \"string\",\n      options: [\n        \"rebuy\",\n        \"!rebuy\",\n        \"od\",\n        \"!od\",\n        \"sng\",\n        \"!sng\",\n        \"deepstack\",\n        \"!deepstack\",\n        \"sat\",\n        \"!sat\",\n      ],\n      placeholder: \"Flags\",\n    },\n  ],\n  Entrants: [\n    {\n      type: \"number\",\n      placeholder: \"Count\",\n      options: null,\n    },\n  ],\n  StartDay: [\n    {\n      type: \"string\",\n      placeholder: \"Weekday\",\n      options: [\"Sunday\", \"Monday\", \"Thusday\", \"Webnesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    },\n  ],\n};\n\nexport const RULES_TYPES = Object.keys(RULES_TYPES_TO_FIELDS) as rulesType[];\n","import { useState } from \"react\";\nimport Select from \"react-select\";\n\nimport { useStore } from \"effector-react\";\nimport { rulesModel, rulesType } from \"../../../@types/rulesModel\";\nimport { getUniqueElemKeyGetter } from \"../../../helpers/getUniqueElemKeyGetter\";\nimport {\n  $rules,\n  deleteRulesRequest,\n  patchRulesRequest,\n  postRulesRequest,\n} from \"../../../store/Rules\";\nimport { validateNumber } from \"../../../helpers/validateNumber\";\n\nimport { specialSelectStyles } from \"../../BaseSelect\";\nimport { BaseInputString } from \"../../BaseInputString\";\nimport { BaseButton } from \"../../BaseButton\";\n\nimport { RULES_TYPES_TO_FIELDS, RULES_TYPES } from \"../constants\";\nimport { b } from \"../index\";\n\ntype RulesSectionRulesProps = {\n  color: string;\n  level: string;\n  network: string;\n  status: string;\n  KO: string;\n  offpeak: boolean;\n};\ntype valuesType = Array<Record<string, number | string>>;\n\ntype Field = {\n  type: string;\n  placeholder: string;\n  options: string[];\n};\n\nexport const RulesSectionRules = (props: RulesSectionRulesProps) => {\n  const savedRules = useStore($rules) as Array<rulesModel[]>;\n\n  const [types, setTypes] = useState<rulesType[]>([RULES_TYPES[0]]);\n  const [values, setValues] = useState<valuesType>([{}]);\n\n  const handleAddRuleRow = () => {\n    setTypes((types) => [...types, RULES_TYPES[0]]);\n    setValues((values) => [...values, {}]);\n  };\n\n  const handleRemoveRuleRow = (ruleIndex: number) => {\n    setTypes((types) => {\n      const newTypes = [...types];\n      newTypes.splice(ruleIndex, 1);\n      return newTypes;\n    });\n    setValues((values) => {\n      const newValues = [...values];\n      newValues.splice(ruleIndex, 1);\n      return newValues;\n    });\n  };\n\n  const editableRule = types.map((type, ruleIndex) => ({\n    type,\n    values: new Array(RULES_TYPES_TO_FIELDS[type].length)\n      .fill(null)\n      .map((_, i) => values?.[ruleIndex]?.[i] ?? \"\"),\n    ...props,\n  }));\n  const rules: rulesModel[][] = [editableRule, ...savedRules];\n\n  const handleSaveRule = () => {\n    postRulesRequest(editableRule);\n    setValues([{}]);\n  };\n\n  const handleTypeChange = (rowIndex: number) => (e: any) => {\n    setTypes((types) => {\n      const newTypes = [...types];\n      newTypes[rowIndex] = e?.value ?? RULES_TYPES[0];\n      return newTypes;\n    });\n    setValues((values) => {\n      const newValues = [...values];\n      newValues[rowIndex] = {};\n      return newValues;\n    });\n  };\n\n  const handleValues = (value: string | number, rowIndex: number, fieldIndex: number) => {\n    setValues((values) => {\n      const newValues = [...values];\n\n      if (!newValues[rowIndex]) {\n        newValues[rowIndex] = {};\n      }\n      newValues[rowIndex][fieldIndex] = value;\n\n      return newValues;\n    });\n  };\n\n  const { color, level, network, status, KO } = props;\n  const uniqueElemKeyGetter = getUniqueElemKeyGetter(color + level + network + status + KO);\n\n  return (\n    <div className={b(\"rules\")}>\n      {rules.map((ruleRows, ruleIndex) => {\n        const isComposite = ruleRows.length > 1;\n        const isEditable = ruleIndex === 0;\n        const offpeak = ruleRows?.[0]?.offpeak ?? false;\n\n        const isSaveBtnDisabled = getIsSaveBtnDisabled(ruleRows, values);\n\n        const uniqueRuleKeyGetter = uniqueElemKeyGetter(\"rule\" + ruleIndex);\n\n        return (\n          <div className={b(\"rule\", { composite: isComposite })} key={uniqueRuleKeyGetter.key}>\n            <div className={b(\"rule-stripe\")} />\n            {ruleRows.map((ruleRow, rowIndex) => {\n              const { type: ruleType, values: ruleValues } = ruleRow;\n              const fields = RULES_TYPES_TO_FIELDS[ruleType] as Field[];\n              const isOffpeak = fields.findIndex((rule) => rule.placeholder === \"Guarantee\") !== -1;\n              const isLastRow = rowIndex === ruleRows.length - 1;\n\n              const uniqueRowKeyGetter = uniqueRuleKeyGetter(\"row\" + ruleType + rowIndex);\n\n              return (\n                <div className={b(\"rule-row\")} key={uniqueRowKeyGetter.key}>\n                  <Select\n                    styles={specialSelectStyles}\n                    options={RULES_TYPES?.map((type) => ({\n                      value: type,\n                      label: type,\n                    }))}\n                    onChange={handleTypeChange(rowIndex)}\n                    className={b(\"rule-row-select\")}\n                    isDisabled={!isEditable}\n                    defaultValue={{ value: ruleType, label: ruleType }}\n                    key={String(Math.random()).substr(2, 12)}\n                  />\n                  {fields.map((field, fieldIndex) => {\n                    const { type: elementType, placeholder, options } = field;\n\n                    const isNum = elementType === \"number\";\n                    const value = String(ruleValues?.[fieldIndex] || \"\");\n\n                    const uniqueFieldKeyGetter = uniqueRowKeyGetter(\"field\" + fieldIndex);\n\n                    if (field.options?.length) {\n                      return (\n                        <Select\n                          className={b(\"rule-row-field\", { select: true })}\n                          styles={specialSelectStyles}\n                          placeholder={placeholder}\n                          defaultValue={value ? { value, label: value } : null}\n                          options={options?.map((option) => ({\n                            value: option,\n                            label: option,\n                          }))}\n                          onChange={(e) => {\n                            const value = e?.value || \"\";\n\n                            handleValues(value, rowIndex, fieldIndex);\n                          }}\n                          isDisabled={!isEditable}\n                          key={String(Math.random()).substr(2, 12)}\n                        />\n                      );\n                    }\n\n                    return (\n                      <BaseInputString\n                        className={b(\"rule-row-field\", { input: true })}\n                        value={value}\n                        onChange={(value) => {\n                          handleValues(isNum ? validateNumber(value) : value, rowIndex, fieldIndex);\n                        }}\n                        placeholder={placeholder}\n                        disabled={!isEditable}\n                        key={uniqueFieldKeyGetter(\"input\").key}\n                      />\n                    );\n                  })}\n                  {isEditable && (\n                    <BaseButton\n                      className={b(\"rule-row-control-btn\")}\n                      onClick={() => handleRemoveRuleRow(rowIndex)}\n                    >\n                      Х\n                    </BaseButton>\n                  )}\n                  {!isEditable && isLastRow && isOffpeak && (\n                    <BaseButton\n                      onClick={() => {\n                        patchRulesRequest({\n                          rule: ruleRows,\n                          offpeak: !offpeak,\n                        });\n                      }}\n                      green={offpeak}\n                      className={b(\"offpeak\")}\n                    >\n                      Offpeak\n                    </BaseButton>\n                  )}\n                  {!isEditable && isLastRow && (\n                    <BaseButton\n                      className={b(\"rule-row-control-btn\")}\n                      onClick={() => deleteRulesRequest(rules[ruleIndex])}\n                      red\n                    >\n                      Delete rule\n                    </BaseButton>\n                  )}\n                </div>\n              );\n            })}\n\n            {isEditable && (\n              <div className={b(\"rule-row\")}>\n                <BaseButton onClick={handleAddRuleRow} className={b(\"rule-row-control-btn\")}>\n                  Add rule row\n                </BaseButton>\n                <BaseButton\n                  onClick={handleSaveRule}\n                  className={b(\"rule-row-control-btn\")}\n                  green\n                  disabled={isSaveBtnDisabled}\n                >\n                  Save rule\n                </BaseButton>\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst getIsSaveBtnDisabled = (ruleRows: rulesModel[], values: valuesType) => {\n  for (let rowKey = 0; rowKey < ruleRows.length; rowKey += 1) {\n    if (!values[rowKey]) {\n      return true;\n    }\n    const fieldKeysCount = RULES_TYPES_TO_FIELDS[ruleRows[rowKey].type].length;\n    for (let fieldKey = 0; fieldKey < fieldKeysCount; fieldKey += 1) {\n      if (!values[rowKey][fieldKey]) {\n        return true;\n      }\n    }\n  }\n\n  return ruleRows.length === 0;\n};\n","export const validateNumber = (value: string) => {\n  return value\n    .replace(/[^\\d.]*/g, \"\")\n    .replace(/([.])[.]+/g, \"$1\")\n    .replace(/^[^\\d]*(\\d+([.]\\d{0,5})?).*$/g, \"$1\");\n};\n","import b_ from \"b_\";\nimport React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\n\nimport { Effmu } from \"../../@types/common\";\nimport { SelectOption } from \"../../@types/selectsModel\";\nimport { EFFMU } from \"../../constants\";\nimport { getRulesRequest } from \"../../store/Rules\";\nimport { SHORT_NETWORKS } from \"../../store/Select\";\n\nimport { specialSelectStyles } from \"../BaseSelect\";\nimport { ColorPalette } from \"../ColorPalette\";\nimport { ElementsToggle, useElementsToggle } from \"../ElementsToggle\";\nimport { ALL_LEVELS, LevelBlocks, useLevelBlocks } from \"../LevelBlocks\";\nimport { RulesSectionRules } from \"./__Rules\";\n\nimport \"./index.scss\";\n\ntype KOType = \"KO\" | \"Freezout\" | \"all\";\ntype StatusType = \"Normal\" | \"Turbo\" | \"SuperTurbo\" | \"all\";\ntype ColorsType = \"blue\" | \"red\" | \"brown\" | \"black\" | \"green\" | \"orange\";\nconst KO: KOType[] = [\"KO\", \"Freezout\", \"all\"];\nconst Status: StatusType[] = [\"Normal\", \"Turbo\", \"SuperTurbo\", \"all\"];\nconst Colors: ColorsType[] = [\"blue\", \"red\", \"brown\", \"black\", \"green\", \"orange\"];\n\nexport const b = b_.with(\"rules-section\");\n\nexport const RulesSection = () => {\n  const { selectedLevel, handleLevelChange } = useLevelBlocks();\n  const { selectedElement: selectedEffmu, handleElementChange: handleEffmuChange } =\n    useElementsToggle<Effmu | \"all\">(EFFMU[0]);\n  const { selectedElement: selectedKO, handleElementChange: handleKOChange } =\n    useElementsToggle<KOType>(KO[0]);\n  const { selectedElement: selectedStatus, handleElementChange: handleStatusChange } =\n    useElementsToggle<StatusType>(Status[0]);\n  const { selectedElement: selectedColor, handleElementChange: handleColorChange } =\n    useElementsToggle<ColorsType>(Colors[0]);\n  const [selectedNetwork, setSelectedNetwork] = useState(SHORT_NETWORKS[0].value);\n  const handleNetworkChange = (option: SelectOption<string>) =>\n    setSelectedNetwork(option.value ?? SHORT_NETWORKS[0].value);\n  const level = selectedLevel + selectedEffmu;\n  const isAllLevels = selectedLevel === ALL_LEVELS;\n\n  useEffect(() => {\n    getRulesRequest({\n      color: selectedColor,\n      level,\n      network: selectedNetwork,\n      status: selectedStatus,\n      KO: selectedKO,\n    });\n  }, [selectedLevel, selectedColor, selectedEffmu, selectedNetwork, selectedStatus, selectedKO]);\n\n  return (\n    <section className={b()}>\n      <span className={b(\"title\")}>Rules for levels:</span>\n      <LevelBlocks selectedLevel={selectedLevel} onLevelChange={handleLevelChange} withAllLevels />\n      {selectedLevel !== null && (\n        <>\n          {!isAllLevels ? (\n            <h2 className={b(\"subtitle\")}>\n              Rules for <strong>{selectedLevel} level</strong>\n            </h2>\n          ) : (\n            <h2 className={b(\"subtitle\")}>\n              Rules for <strong>all level</strong>\n            </h2>\n          )}\n          <div className={b(\"filter\")}>\n            <ElementsToggle\n              mix={b(\"elems-toggle\", { effmu: true })}\n              selectedElement={selectedEffmu}\n              onElementChange={handleEffmuChange}\n              elements={EFFMU.concat([\"all\"])}\n            />\n            <Select\n              styles={specialSelectStyles}\n              placeholder=\"Network\"\n              options={SHORT_NETWORKS}\n              // @ts-ignore\n              onChange={handleNetworkChange}\n              className={b(\"filter-network\")}\n              defaultValue={SHORT_NETWORKS[0]}\n            />\n            <ColorPalette\n              selectedElement={selectedColor}\n              onElementChange={handleColorChange}\n              elements={Colors}\n            />\n          </div>\n          <div className={b(\"filter\")}>\n            <ElementsToggle\n              mix={b(\"elems-toggle\", { KO: true })}\n              selectedElement={selectedKO}\n              onElementChange={handleKOChange}\n              elements={KO}\n            />\n            <div className={b(\"elems-toggle-divider\")} />\n            <ElementsToggle\n              mix={b(\"elems-toggle\", { status: true })}\n              selectedElement={selectedStatus}\n              onElementChange={handleStatusChange}\n              elements={Status}\n            />\n          </div>\n          <RulesSectionRules\n            color={selectedColor}\n            level={level}\n            network={selectedNetwork}\n            status={selectedStatus}\n            KO={selectedKO}\n            offpeak={false}\n          />\n        </>\n      )}\n    </section>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { FC, useEffect } from \"react\";\n\nimport { Ability2Section } from \"../../components/Admin.Ability2Section\";\nimport { AliasesSection } from \"../../components/Admin.AliasesSection\";\nimport {\n  OnPasswordSubmit,\n  PasswordSection,\n  PasswordSectionType,\n} from \"../../components/PasswordSection\";\nimport { getSample } from \"../../store/Sample\";\nimport { SampleSection } from \"../../components/SampleSection\";\nimport { $isValidAdminPassword, validateAdminPasswordRequest } from \"../../store/Password\";\nimport { OffpeakSection } from \"../../components/OffpeakSection\";\nimport { getOffpeak } from \"../../store/Offpeak\";\nimport { RulesSection } from \"../../components/Admin.RulesSection\";\n\nexport const AdminPage: FC = () => {\n  const isAdmin = useStore($isValidAdminPassword);\n\n  useEffect(() => {\n    getSample();\n    getOffpeak();\n  }, []);\n\n  const handlePasswordSubmit: OnPasswordSubmit = ({ password }) =>\n    validateAdminPasswordRequest(password);\n\n  if (!isAdmin) {\n    return <PasswordSection onSubmit={handlePasswordSubmit} type={PasswordSectionType.ADMIN} />;\n  }\n\n  return (\n    <>\n      <section style={{ marginTop: \"20px\", color: \"#FF4242\", fontSize: \"18px\" }}>\n        Welcome to <strong>Admin Panel</strong>\n      </section>\n      <SampleSection />\n      <OffpeakSection />\n      <RulesSection />\n      <Ability2Section />\n      <AliasesSection />\n    </>\n  );\n};\n","import { useStore } from \"effector-react\";\nimport { FC } from \"react\";\nimport { $tournamentsSettings } from \"../../../store/Select\";\nimport classes from \"../BaseTable.module.scss\";\n\nexport const Thead: FC = () => {\n  const tournamentsSettings = useStore($tournamentsSettings);\n\n  return (\n    <thead className={classes.thead}>\n      <tr className={classes.tr}>\n        <th className={classes.th}>\n          Start {tournamentsSettings.timezoneTable ? `(${tournamentsSettings.timezoneTable})` : \"\"}\n        </th>\n        <th className={classes.th}>Late Reg</th>\n        <th className={classes.th}>Network</th>\n        <th className={classes.th}>Name</th>\n        <th className={classes.th}>Buy-in</th>\n        <th className={classes.th}>Guarantee</th>\n        <th className={classes.th}>Ability</th>\n        <th className={classes.th}>Ability2</th>\n        <th className={classes.th}>Duration</th>\n      </tr>\n    </thead>\n  );\n};\n","import { FC } from \"react\";\nimport { tableCellModel } from \"../../../@types/tableCellModel\";\nimport classes from \"../BaseTable.module.scss\";\n\ntype TbodyProps = {\n  data: tableCellModel[] | undefined;\n};\n\nexport const Tbody: FC<TbodyProps> = ({ data }) => {\n  return (\n    <tbody className={classes.tbody}>\n      {data?.map((item: tableCellModel, index: number) => {\n        const param = {\n          timezone: item[\"@timezone\"],\n          network: item[\"@network\"],\n          level: item[\"@level\"],\n          currency: item[\"@currency\"],\n          bid: String(item[\"@realBid\"]),\n          status: item[\"@status\"],\n        };\n\n        return (\n          <tr className={classes.tr} key={index}>\n            <td className={classes.td}>{item[\"@scheduledStartDate\"]}</td>\n            <td className={classes.td}>{item[\"@lateRegEndDate\"] ?? \"-\"}</td>\n            <td className={classes.td}>{item[\"@network\"]}</td>\n            <td className={classes.td}>{item[\"@name\"]}</td>\n            <td className={classes.td}>{item[\"@bid\"]}</td>\n            <td className={classes.td}>{item[\"@prizepool\"]}</td>\n            <td className={classes.td}>{item[\"@ability\"]}</td>\n            <td\n              className={classes.td}\n              onClick={() => {\n                if (window.location.pathname !== \"/info\" && item[\"@abilityBid\"] !== \"-\") {\n                  window.open(`/info?${new URLSearchParams(param).toString()}`);\n                }\n              }}\n            >\n              {item[\"@abilityBid\"]}\n            </td>\n            <td className={classes.td}>{item[\"@duration\"]}</td>\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n};\n","import { FC } from \"react\";\nimport { Thead } from \"./Thead\";\nimport { Tbody } from \"./Tbody/Tbody\";\nimport { Loader } from \"../Loader/Loader\";\nimport classes from \"./BaseTable.module.scss\";\nimport { tableCellModel } from \"../../@types/tableCellModel\";\n\ntype BaseTableProps = {\n  data: tableCellModel[] | undefined;\n  loading: boolean;\n};\n\nexport const BaseTable: FC<BaseTableProps> = ({ data, loading }) => {\n  if (loading)\n    return (\n      <section className={classes.section}>\n        <Loader />\n      </section>\n    );\n\n  if (!data?.length) return <section className={classes.nodata}>Nothing found</section>;\n\n  if (!data)\n    return (\n      <section className={classes.nodata}>\n        Select the options you are interested in and click the \"Update\" button\n      </section>\n    );\n\n  return (\n    <section className={classes.section}>\n      <table className={classes.table}>\n        <Thead />\n        <Tbody data={data} />\n      </table>\n    </section>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport api from \"../../api\";\nimport { BaseTable } from \"../../components/BaseTable\";\n\nimport { tableCellModel } from \"../../@types/tableCellModel\";\n\nexport const InfoPage: FC = () => {\n  // TO-DO должен быть createEffect так-то хули тут useEffect\n  const [result, setResult] = useState<tableCellModel[] | undefined>(undefined);\n\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const params = Object.fromEntries(urlSearchParams.entries());\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await api.get<tableCellModel[]>(\"/api/info\", params);\n\n      setResult(data);\n    };\n\n    fetchData();\n  }, []);\n\n  return <BaseTable data={result as any} loading={!result} />;\n};\n","import Select from \"react-select\";\nimport { BaseSelectModel } from \"./types\";\nimport classes from \"./BaseSelectMulti.module.scss\";\n\nexport const BaseSelectMulti = (props: BaseSelectModel) => {\n  const { options, onChange, className, placeholder, children } = props;\n\n  return (\n    <div className={classes.wrapper}>\n      <label htmlFor={placeholder} className={classes.label}>\n        {children}\n      </label>\n      <Select\n        id={placeholder}\n        className={className}\n        isMulti\n        isClearable={true}\n        options={options}\n        onChange={onChange}\n        hideSelectedOptions={false}\n        closeMenuOnSelect={false}\n        controlShouldRenderValue={false}\n        placeholder={placeholder}\n      />\n    </div>\n  );\n};\n","import { FC } from \"react\";\nimport { BaseInputModel } from \"./types\";\nimport classes from \"./BaseInput.module.scss\";\nimport cx from \"classnames\";\n\nexport const BaseInput: FC<BaseInputModel> = ({\n  handleChange,\n  value,\n  max,\n  placeholder,\n  className,\n}) => {\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    handleChange(\n      Math.max(\n        Math.min(\n          Number(/\\d+/.test(String(Number(e.currentTarget.value))) ? e.target.value : value ?? 0),\n          max,\n        ),\n        0,\n      ),\n    );\n  };\n\n  return (\n    <div className={classes.BaseInput}>\n      <label htmlFor={placeholder} className={classes.label}>\n        {placeholder}:\n      </label>\n      <input\n        id={placeholder}\n        value={value ?? 0}\n        onChange={onChange}\n        placeholder={placeholder}\n        className={cx(classes.input, className)}\n      />\n    </div>\n  );\n};\n","import b from \"b_\";\nimport { FC } from \"react\";\nimport { BaseCheckboxModel } from \"./types\";\nimport cx from \"classnames\";\nimport classes from \"./BaseCheckbox.module.scss\";\n\nexport const BaseCheckbox: FC<BaseCheckboxModel> = (props) => {\n  const { className, selected, onClick, children } = props;\n\n  return (\n    <div\n      className={cx(classes.checkbox, classes[b(\"selected\", { selected })], className)}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport classes from \"./ComponentCategory.module.scss\";\n\nexport const ComponentCategory: FC<{\n  category?: string;\n  className?: string;\n}> = (props) => {\n  const { category, children, className } = props;\n\n  return (\n    <div className={classNames(classes.wrapper, className)}>\n      {category && <div className={classes.category}>{category}</div>}\n      <div className={classes.children}>{children}</div>\n    </div>\n  );\n};\n","import { createStore } from \"effector\";\nimport { tableCellModel } from \"../../@types/tableCellModel\";\nimport { $editableConfig } from \"../Config\";\nimport { $tournamentsSettings } from \"../Select\";\n\nexport const $tableState = createStore<tableCellModel[] | null>(null);\n\n// Отфильтрованный стейт в зависимости от dateStart и dateEnd\nexport const $filtredTableState = $tableState.map((el) =>\n  el?.filter((item) => {\n    const startDate = item?.[\"@scheduledStartDate\"] ?? \"-\";\n    const { dateStart, dateEnd } = $tournamentsSettings.getState();\n\n    if (startDate === \"-\") return true;\n\n    const res = startDate?.split(\", \")?.[1]?.split(\":\")?.[0];\n    const r = dateEnd === \"00\" && dateStart <= dateEnd ? \"24\" : dateEnd;\n\n    return dateStart <= dateEnd\n      ? dateStart <= res && res <= r\n      : !(dateStart > res && res > dateEnd);\n  }),\n);\n","import { editableTournamentsSettings } from \"./../Select/init\";\nimport { createEffect } from \"effector\";\nimport { tableCellModel } from \"../../@types/tableCellModel\";\nimport api from \"../../api\";\nimport { $tournamentsSettings } from \"../Select\";\nimport { $tableState } from \"./state\";\nimport { ErrNot } from \"../../components/NotificationService\";\nimport { $config } from \"../Config\";\n\nexport const fetchUserReposFx = createEffect(async () => {\n  const tournamentsSettings = $tournamentsSettings.getState();\n  const config = $config.getState();\n\n  try {\n    const result = await api.get<tableCellModel[]>(\"/api/tour\", {\n      ...tournamentsSettings,\n      network: tournamentsSettings.network?.map((elem) => elem.value).join(\",\"),\n      timezone: 28800000,\n      time: tournamentsSettings.time?.value ?? 0,\n      alias: config?.alias,\n    });\n\n    editableTournamentsSettings.handleChangeTimezonetable(\n      tournamentsSettings?.timezone?.label ?? \"\",\n    );\n\n    return result;\n  } catch (error: any) {\n    ErrNot(error?.response?.data?.message || \"The request failed. Try again.\");\n  }\n});\n\n$tableState.on(fetchUserReposFx.doneData, (_, data) => data);\n","import React, { FC, useEffect } from \"react\";\nimport cx from \"classnames\";\nimport {\n  $tournamentsSettings,\n  editableTournamentsSettings,\n  NETWORKS,\n  TIMERANGE,\n  TIMEZONES,\n} from \"../../store/Select\";\nimport { useStore } from \"effector-react\";\nimport { BaseSelect } from \"../BaseSelect/BaseSelect\";\nimport { BaseSelectMulti } from \"../BaseSelectMulti/BaseSelectMulti\";\nimport { BaseInput } from \"../BaseInput/BaseInput\";\nimport { BaseCheckbox } from \"../BaseCheckbox\";\nimport { BaseInputMask } from \"../BaseInputMask\";\nimport { ComponentCategory } from \"../ComponentCategory\";\nimport { BaseButton } from \"../BaseButton\";\nimport { fetchUserReposFx } from \"../../store/Table\";\nimport { $config } from \"../../store/Config\";\n\nimport { ModalRef } from \"../Modal\";\n\nimport classes from \"./BaseHeader.module.scss\";\n\nexport const BaseHeader: FC = () => {\n  const tournamentsSettings = useStore($tournamentsSettings);\n\n  const config = useStore($config);\n\n  return (\n    <header className={classes.header}>\n      <div className={classes.info}>\n        <div className={classes.userInfo}>\n          <div className={classes.alias}>\n            <p>\n              Your alias: <strong>{config?.alias}</strong>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className={classes.menu}>\n        <div className={classes.content}>\n          <ComponentCategory category=\"Network\">\n            <BaseSelectMulti\n              className={classes.network}\n              children={\n                (tournamentsSettings.network?.length ?? 0) + \" networks\"\n              }\n              options={NETWORKS}\n              onChange={editableTournamentsSettings.handleChangeNetwork}\n              placeholder=\"Network\"\n            />\n          </ComponentCategory>\n          <ComponentCategory category=\"Buy-in\">\n            <div className={classes.inputWrapper}>\n              <BaseInput\n                value={tournamentsSettings.moneyStart}\n                handleChange={\n                  editableTournamentsSettings.handleChangeMoneyStart\n                }\n                max={tournamentsSettings.moneyEnd ?? 0}\n                placeholder=\"From\"\n                className={classes.input}\n              />\n              <BaseInput\n                value={tournamentsSettings.moneyEnd}\n                handleChange={editableTournamentsSettings.handleChangeMoneyEnd}\n                max={100000}\n                placeholder=\"To\"\n                className={classes.input}\n              />\n            </div>\n          </ComponentCategory>\n          <ComponentCategory category=\"Prizepool\" className={classes.prizepool}>\n            <div className={classes.inputWrapper}>\n              <BaseInput\n                value={tournamentsSettings.prizepoolStart}\n                handleChange={\n                  editableTournamentsSettings.handleChangePrizepoolStart\n                }\n                max={tournamentsSettings.prizepoolEnd}\n                placeholder=\"From\"\n                className={classes.input}\n              />\n              <BaseInput\n                value={tournamentsSettings.prizepoolEnd}\n                handleChange={\n                  editableTournamentsSettings.handleChangePrizepoolEnd\n                }\n                max={10000000}\n                placeholder=\"To\"\n                className={classes.input}\n              />\n            </div>\n          </ComponentCategory>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.starts}>\n            <ComponentCategory category=\"Starts\">\n              <BaseSelect\n                className={classes.time}\n                options={TIMERANGE}\n                defaultValue={TIMERANGE[1]}\n                onChange={editableTournamentsSettings.handleChangeTime}\n                placeholder=\"Time\"\n              />\n            </ComponentCategory>\n            <ComponentCategory>\n              <div className={classes.inputWrapper}>\n                <BaseInputMask\n                  placeholder=\"From(h)\"\n                  value={tournamentsSettings.dateStart}\n                  handleChange={\n                    editableTournamentsSettings.handleChangeDateStart\n                  }\n                  className={cx(classes.input, classes.inputTime)}\n                />\n                <BaseInputMask\n                  placeholder=\"To(h)\"\n                  value={tournamentsSettings.dateEnd}\n                  handleChange={editableTournamentsSettings.handleChangeDateEnd}\n                  className={cx(classes.input, classes.inputTime)}\n                />\n              </div>\n            </ComponentCategory>\n            <ComponentCategory></ComponentCategory>\n          </div>\n          <ComponentCategory category=\"Format\">\n            <div className={classes.checkboxWrapper}>\n              <BaseCheckbox\n                selected={!tournamentsSettings.KO}\n                onClick={() =>\n                  editableTournamentsSettings.handleChangeKo(\n                    !tournamentsSettings.KO\n                  )\n                }\n                className={classes.checkbox}\n              >\n                KO\n              </BaseCheckbox>\n              <BaseCheckbox\n                selected={!tournamentsSettings.freezout}\n                onClick={() =>\n                  editableTournamentsSettings.handleChangeFreezout(\n                    !tournamentsSettings.freezout\n                  )\n                }\n                className={classes.checkbox}\n              >\n                Freezout\n              </BaseCheckbox>\n              <div className={classes.line} />\n              <BaseCheckbox\n                selected={!tournamentsSettings.normal}\n                onClick={() =>\n                  editableTournamentsSettings.handleChangeNormal(\n                    !tournamentsSettings.normal\n                  )\n                }\n                className={classes.checkbox}\n              >\n                Normal\n              </BaseCheckbox>\n              <BaseCheckbox\n                selected={!tournamentsSettings.turbo}\n                onClick={() =>\n                  editableTournamentsSettings.handleChangeTurbo(\n                    !tournamentsSettings.turbo\n                  )\n                }\n                className={classes.checkbox}\n              >\n                Turbo\n              </BaseCheckbox>\n              <BaseCheckbox\n                selected={!tournamentsSettings.superTurbo}\n                onClick={() =>\n                  editableTournamentsSettings.handleChangeSuperTurbo(\n                    !tournamentsSettings.superTurbo\n                  )\n                }\n                className={classes.checkbox}\n              >\n                Super Turbo\n              </BaseCheckbox>\n            </div>\n          </ComponentCategory>\n        </div>\n        <div className={classes.content}>\n          <BaseButton onClick={fetchUserReposFx} className={classes.button}>\n            Games search\n          </BaseButton>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import { FC } from \"react\";\nimport { useStore } from \"effector-react\";\n\nimport { BaseTable } from \"../../components/BaseTable\";\nimport { BaseHeader } from \"../../components/BaseHeader\";\nimport { $filtredTableState, fetchUserReposFx } from \"../../store/Table\";\nimport { $config, getConfigRequest } from \"../../store/Config\";\nimport { OnPasswordSubmit, PasswordSection } from \"../../components/PasswordSection\";\n\nexport const MainPage: FC = () => {\n  const loading = useStore(fetchUserReposFx.pending);\n  const tournaments = useStore($filtredTableState);\n  const config = useStore($config);\n\n  const handlePasswordSubmit: OnPasswordSubmit = ({ password, login }) =>\n    getConfigRequest({ alias: login, password });\n\n  if (!config) {\n    return <PasswordSection onSubmit={handlePasswordSubmit} />;\n  }\n\n  return (\n    <>\n      <BaseHeader />\n      <BaseTable data={tournaments} loading={loading} />\n    </>\n  );\n};\n","import { FC } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { AdminPage } from \"./AdminPage\";\nimport { InfoPage } from \"./InfoPage\";\nimport { MainPage } from \"./MainPage\";\n\nexport const Pages: FC = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/admin\" component={() => <AdminPage />} />\n          <Route path=\"/info\" component={() => <InfoPage />} />\n          <Route path=\"/*\" component={() => <MainPage />} />\n        </Switch>\n        <ToastContainer hideProgressBar={true} />\n      </BrowserRouter>\n      <div id=\"modal-root\" />\n    </>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport { Pages } from \"./pages/index\";\nimport \"./assets/style/index.scss\";\nimport \"./store/init\";\n\nReactDOM.render(<Pages />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationSuccess\":\"NotificationService_NotificationSuccess__kWrEi\",\"icon\":\"NotificationService_icon__3lsCE\",\"NotificationError\":\"NotificationService_NotificationError__VPWSw\",\"NotificationContent\":\"NotificationService_NotificationContent__f35iv\",\"NotificationIcon\":\"NotificationService_NotificationIcon__gYYu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BaseInputMask\":\"BaseInputMask_BaseInputMask__1-Bm6\",\"input\":\"BaseInputMask_input__l_xM5\",\"label\":\"BaseInputMask_label__1Rp37\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BaseInput\":\"BaseInput_BaseInput__yuXRP\",\"label\":\"BaseInput_label__2wzvL\",\"input\":\"BaseInput_input__27Ycb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ComponentCategory_wrapper__1dhdS\",\"category\":\"ComponentCategory_category__3ErDF\",\"children\":\"ComponentCategory_children__1kvgj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"BaseInputNumber_input__F9b23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"BaseSelectMulti_label__E9BBH\",\"wrapper\":\"BaseSelectMulti_wrapper__33zUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"BaseCheckbox_checkbox__sbX-p\",\"selected\":\"BaseCheckbox_selected__3sZ8q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3hasz\"};"],"sourceRoot":""}