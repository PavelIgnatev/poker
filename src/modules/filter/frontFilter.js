'use strict';

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

/**
 * Возвращает сокращенное название network из полного
 * @param {string} network network
 * @return {string} Сокращенное название network
 */

const getNetwork$3 = (network) => {
  switch (network) {
    case "PokerStars(FR-ES-PT)": {
      network = "PS.es";
      break;
    }
    case "PokerStars": {
      network = "PS.eu";
      break;
    }
    case "PartyPoker": {
      network = "Party";
      break;
    }
    case "GGNetwork": {
      network = "GG";
      break;
    }
    case "888Poker": {
      network = "888";
      break;
    }
    case "Winamax.fr": {
      network = "WNMX";
      break;
    }
    case "iPoker": {
      network = "IP";
      break;
    }
    case "Chico": {
      network = "Chico";
      break;
    }
  }
  return network;
};

var getNetwork_1 = { getNetwork: getNetwork$3 };

function curry(func) {
  return function curried(...args) {
    if (args.length >= func.length) {
      return func.apply(this, args);
    } else {
      return function (...args2) {
        return curried.apply(this, args.concat(args2));
      };
    }
  };
}

// FromTo = FromToQ(bid);
// FromToName = FromToNameQ(name)(bid);
// BidGt = BidGtQ(bid)(prizepool);
// BidGtName = BidGtNameQ(name)(bid)(prizepool);
// FromToGt = FromToGtQ(bid)(prizepool);
// Ticket = TicketQ(name)(bid)(tournament["@tickets"] ?? 0);
// Entrants = EntrantsQ(tournament?.["@totalEntrants"] ?? 0);
// BidName = BidNameQ(name)(bid);
// StartDay = StartDayQ(weekDay);
// Name = NameQ(name);
// NotName = NotNameQ(name);
// FLAGS = FLAGSQ(tournament);

//Ставка больше либо равно и ставка меньше либо равно
const FromTo = curry(
  (realBid, from, to) => Number(realBid) >= Number(from) && Number(realBid) <= Number(to),
);

//name.includes
const Name = curry((name, str) => name.toLowerCase().includes(str.toLowerCase()));

//Ставка больше либо равно и ставка меньше либо равно + name.includes
const FromToName = curry(
  (name, realBid, from, to, str) => FromTo(realBid, from, to) && Name(name, str),
);

//Ставка равно, гарантия больше либо равно
const BidGt = curry(
  (realBid, realPrizepool, bid, prizepool) =>
    Number(bid) === Number(realBid) && Number(realPrizepool) >= Number(prizepool),
);

//Ставка равно, гарантия больше либо равно + name.includes
const BidGtName = curry(
  (name, realBid, realPrizepool, bid, prizepool, str) =>
    BidGt(realBid, realPrizepool, bid, prizepool) && Name(name, str),
);

//тик равно, тикеты больше либо равно + name.includes
const Ticket = curry(
  (name, realBid, realTickets, bid, tickets, str) =>
    BidGt(realBid, realTickets, bid, tickets) && Name(name, str),
);

//Ставка равно + name.includes
const BidName = curry(
  (name, realBid, bid, str) => Number(realBid) === Number(bid) && Name(name, str),
);

//!name.includes
const NotName = curry((name, str) => !Name(name, str));

//Ставка больше либо равно и ставка меньше либо равно, гарантия больше либо равно
const FromToGt = curry(
  (realBid, realPrizepool, from, to, prizepool) =>
    FromTo(realBid, from, to) && Number(realPrizepool) >= Number(prizepool),
);

//Ставка больше либо равно и ставка меньше либо равно, гарантия больше либо равно
const StartDay = curry((realDay, day) => String(realDay) === String(day));

// Фильтр по флагу
const FLAGS = curry((tournament, flags) => {
  const isNotRule = flags?.includes("!");
  const rule = tournament?.[`@${flags.replace("!", "")}`] ?? false;

  return isNotRule ? !rule : rule;
});

// Фильтр по Entrants
const Entrants = curry((totalEntrants, entrants) => Number(totalEntrants) >= Number(entrants));

var curry_1 = {
  curry,
  FromTo,
  FromToName,
  BidGt,
  BidGtName,
  Ticket,
  BidName,
  Name,
  FromToGt,
  StartDay,
  Entrants,
  FLAGS,
  NotName,
};

/**
 * Возвращае true, если турнир является super turbo
 * @param {Object} tournament Экземпляр объекта tournament
 * @return {boolean} True, если турнир является super turbo
 */

const isSuperTurbo$1 = (tournament) => {
  const name = (tournament["@name"] ?? "").toLowerCase();
  const superturbo = tournament["@flags"]?.includes("ST") || name?.includes("hyper");

  return superturbo;
};

var isSuperTurbo_1 = { isSuperTurbo: isSuperTurbo$1 };

/**
 * Возвращае true, если турнир является satellite
 * @param {Object} tournament Экземпляр объекта tournament
 * @return {boolean} True, если турнир является super turbo
 */

const { getNetwork: getNetwork$2 } = getNetwork_1;

const isSat$1 = (tournament) => {
  const name = tournament["@name"]?.toLowerCase();
  const network = getNetwork$2(tournament["@network"]);
  let sat = network !== "WNMX" ? !!tournament["@flags"]?.includes("SAT") : false;

  if (!sat && name) {
    if (network === "GG") {
      sat =
        name.includes(" seats") ||
        name.includes("seats ") ||
        name.includes(" seat") ||
        name.includes("seat ") ||
        name.includes(" qualifier") ||
        name.includes("qualifier ") ||
        name.includes(" step") ||
        name.includes("step ") ||
        (name.includes(" sat") && !name.includes(" satu")) ||
        name.includes("sat  ");
    } else if (network === "WNMX") {
      sat =
        (name.includes(" sat") && !name.includes(" satu")) ||
        name.includes("sat  ") ||
        name.includes("satellite") ||
        name.includes("qualif") ||
        name.includes("last chance") ||
        name.includes("hit&run");
    } else if (network === "WPN") {
      sat =
        (name.includes(" sat") && !name.includes(" satu")) ||
        name.includes("sat  ") ||
        name.includes("satellite") ||
        name.includes("ticket") ||
        name.includes("seat") ||
        name.includes(" qualifier") ||
        name.includes("qualifier ");
    } else if (network === "IP") {
      sat =
        name.includes("ticket") ||
        name.includes("ticket") ||
        name.includes(" seats") ||
        name.includes("seats ") ||
        (name.includes(" sat") && !name.includes(" satu")) ||
        name.includes("sat  ");
    }
  }

  return !!sat;
};

var IsSat = { isSat: isSat$1 };

const { getNetwork: getNetwork$1 } = getNetwork_1;
const { isSat } = IsSat;
const { isSuperTurbo } = isSuperTurbo_1;

/**
 * Возвращае true, если турнир является turbo
 * @param {Object} tournament Экземпляр объекта tournament
 * @return {boolean} True, если турнир является turbo
 */

// пока корректно, ждем ответ
const isTurbo = (tournament) => {
  let flags = tournament["@flags"];
  const name = (tournament["@name"] ?? "").toLowerCase();
  const network = getNetwork$1(tournament["@network"]);
  const superturbo = isSuperTurbo(tournament);
  const sat = isSat(tournament);
  if ((sat && flags) || flags?.includes("SAT")) flags = flags.replace("SAT", "");

  const turbo =
    (flags?.includes("T") ||
      name?.includes("turbo") ||
      (network === "PS.eu" && name?.includes("hot"))) &&
    !superturbo;

  return turbo;
};

var isTurbo_1 = { isTurbo };

/**
 * Возвращае true, если турнир является normal
 * @param {Object} tournament Экземпляр объекта tournament
 * @return {boolean} True, если турнир является normal
 */

const isNormal = (tournament) => {
  const name = (tournament["@name"] ?? "").toLowerCase();

  return !!(tournament["@flags"]?.includes("B") || name?.includes("bounty"));
};

var isNormal_1 = { isNormal };

function commonjsRequire(path) {
	throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}

var momentExports = {};
var moment$1 = {
  get exports(){ return momentExports; },
  set exports(v){ momentExports = v; },
};

(function (module, exports) {
(function (global, factory) {
	    module.exports = factory() ;
	}(commonjsGlobal, (function () {
	    var hookCallback;

	    function hooks() {
	        return hookCallback.apply(null, arguments);
	    }

	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback(callback) {
	        hookCallback = callback;
	    }

	    function isArray(input) {
	        return (
	            input instanceof Array ||
	            Object.prototype.toString.call(input) === '[object Array]'
	        );
	    }

	    function isObject(input) {
	        // IE8 will treat undefined and null as object if it wasn't for
	        // input != null
	        return (
	            input != null &&
	            Object.prototype.toString.call(input) === '[object Object]'
	        );
	    }

	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }

	    function isObjectEmpty(obj) {
	        if (Object.getOwnPropertyNames) {
	            return Object.getOwnPropertyNames(obj).length === 0;
	        } else {
	            var k;
	            for (k in obj) {
	                if (hasOwnProp(obj, k)) {
	                    return false;
	                }
	            }
	            return true;
	        }
	    }

	    function isUndefined(input) {
	        return input === void 0;
	    }

	    function isNumber(input) {
	        return (
	            typeof input === 'number' ||
	            Object.prototype.toString.call(input) === '[object Number]'
	        );
	    }

	    function isDate(input) {
	        return (
	            input instanceof Date ||
	            Object.prototype.toString.call(input) === '[object Date]'
	        );
	    }

	    function map(arr, fn) {
	        var res = [],
	            i,
	            arrLen = arr.length;
	        for (i = 0; i < arrLen; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function createUTC(input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty: false,
	            unusedTokens: [],
	            unusedInput: [],
	            overflow: -2,
	            charsLeftOver: 0,
	            nullInput: false,
	            invalidEra: null,
	            invalidMonth: null,
	            invalidFormat: false,
	            userInvalidated: false,
	            iso: false,
	            parsedDateParts: [],
	            era: null,
	            meridiem: null,
	            rfc2822: false,
	            weekdayMismatch: false,
	        };
	    }

	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }

	    var some;
	    if (Array.prototype.some) {
	        some = Array.prototype.some;
	    } else {
	        some = function (fun) {
	            var t = Object(this),
	                len = t.length >>> 0,
	                i;

	            for (i = 0; i < len; i++) {
	                if (i in t && fun.call(this, t[i], i, t)) {
	                    return true;
	                }
	            }

	            return false;
	        };
	    }

	    function isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m),
	                parsedParts = some.call(flags.parsedDateParts, function (i) {
	                    return i != null;
	                }),
	                isNowValid =
	                    !isNaN(m._d.getTime()) &&
	                    flags.overflow < 0 &&
	                    !flags.empty &&
	                    !flags.invalidEra &&
	                    !flags.invalidMonth &&
	                    !flags.invalidWeekday &&
	                    !flags.weekdayMismatch &&
	                    !flags.nullInput &&
	                    !flags.invalidFormat &&
	                    !flags.userInvalidated &&
	                    (!flags.meridiem || (flags.meridiem && parsedParts));

	            if (m._strict) {
	                isNowValid =
	                    isNowValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }

	            if (Object.isFrozen == null || !Object.isFrozen(m)) {
	                m._isValid = isNowValid;
	            } else {
	                return isNowValid;
	            }
	        }
	        return m._isValid;
	    }

	    function createInvalid(flags) {
	        var m = createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        } else {
	            getParsingFlags(m).userInvalidated = true;
	        }

	        return m;
	    }

	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    var momentProperties = (hooks.momentProperties = []),
	        updateInProgress = false;

	    function copyConfig(to, from) {
	        var i,
	            prop,
	            val,
	            momentPropertiesLen = momentProperties.length;

	        if (!isUndefined(from._isAMomentObject)) {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (!isUndefined(from._i)) {
	            to._i = from._i;
	        }
	        if (!isUndefined(from._f)) {
	            to._f = from._f;
	        }
	        if (!isUndefined(from._l)) {
	            to._l = from._l;
	        }
	        if (!isUndefined(from._strict)) {
	            to._strict = from._strict;
	        }
	        if (!isUndefined(from._tzm)) {
	            to._tzm = from._tzm;
	        }
	        if (!isUndefined(from._isUTC)) {
	            to._isUTC = from._isUTC;
	        }
	        if (!isUndefined(from._offset)) {
	            to._offset = from._offset;
	        }
	        if (!isUndefined(from._pf)) {
	            to._pf = getParsingFlags(from);
	        }
	        if (!isUndefined(from._locale)) {
	            to._locale = from._locale;
	        }

	        if (momentPropertiesLen > 0) {
	            for (i = 0; i < momentPropertiesLen; i++) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (!isUndefined(val)) {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        if (!this.isValid()) {
	            this._d = new Date(NaN);
	        }
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    function isMoment(obj) {
	        return (
	            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
	        );
	    }

	    function warn(msg) {
	        if (
	            hooks.suppressDeprecationWarnings === false &&
	            typeof console !== 'undefined' &&
	            console.warn
	        ) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;

	        return extend(function () {
	            if (hooks.deprecationHandler != null) {
	                hooks.deprecationHandler(null, msg);
	            }
	            if (firstTime) {
	                var args = [],
	                    arg,
	                    i,
	                    key,
	                    argLen = arguments.length;
	                for (i = 0; i < argLen; i++) {
	                    arg = '';
	                    if (typeof arguments[i] === 'object') {
	                        arg += '\n[' + i + '] ';
	                        for (key in arguments[0]) {
	                            if (hasOwnProp(arguments[0], key)) {
	                                arg += key + ': ' + arguments[0][key] + ', ';
	                            }
	                        }
	                        arg = arg.slice(0, -2); // Remove trailing comma and space
	                    } else {
	                        arg = arguments[i];
	                    }
	                    args.push(arg);
	                }
	                warn(
	                    msg +
	                        '\nArguments: ' +
	                        Array.prototype.slice.call(args).join('') +
	                        '\n' +
	                        new Error().stack
	                );
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    var deprecations = {};

	    function deprecateSimple(name, msg) {
	        if (hooks.deprecationHandler != null) {
	            hooks.deprecationHandler(name, msg);
	        }
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }

	    hooks.suppressDeprecationWarnings = false;
	    hooks.deprecationHandler = null;

	    function isFunction(input) {
	        return (
	            (typeof Function !== 'undefined' && input instanceof Function) ||
	            Object.prototype.toString.call(input) === '[object Function]'
	        );
	    }

	    function set(config) {
	        var prop, i;
	        for (i in config) {
	            if (hasOwnProp(config, i)) {
	                prop = config[i];
	                if (isFunction(prop)) {
	                    this[i] = prop;
	                } else {
	                    this['_' + i] = prop;
	                }
	            }
	        }
	        this._config = config;
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        this._dayOfMonthOrdinalParseLenient = new RegExp(
	            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
	                '|' +
	                /\d{1,2}/.source
	        );
	    }

	    function mergeConfigs(parentConfig, childConfig) {
	        var res = extend({}, parentConfig),
	            prop;
	        for (prop in childConfig) {
	            if (hasOwnProp(childConfig, prop)) {
	                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                    res[prop] = {};
	                    extend(res[prop], parentConfig[prop]);
	                    extend(res[prop], childConfig[prop]);
	                } else if (childConfig[prop] != null) {
	                    res[prop] = childConfig[prop];
	                } else {
	                    delete res[prop];
	                }
	            }
	        }
	        for (prop in parentConfig) {
	            if (
	                hasOwnProp(parentConfig, prop) &&
	                !hasOwnProp(childConfig, prop) &&
	                isObject(parentConfig[prop])
	            ) {
	                // make sure changes to properties don't modify parent config
	                res[prop] = extend({}, res[prop]);
	            }
	        }
	        return res;
	    }

	    function Locale(config) {
	        if (config != null) {
	            this.set(config);
	        }
	    }

	    var keys;

	    if (Object.keys) {
	        keys = Object.keys;
	    } else {
	        keys = function (obj) {
	            var i,
	                res = [];
	            for (i in obj) {
	                if (hasOwnProp(obj, i)) {
	                    res.push(i);
	                }
	            }
	            return res;
	        };
	    }

	    var defaultCalendar = {
	        sameDay: '[Today at] LT',
	        nextDay: '[Tomorrow at] LT',
	        nextWeek: 'dddd [at] LT',
	        lastDay: '[Yesterday at] LT',
	        lastWeek: '[Last] dddd [at] LT',
	        sameElse: 'L',
	    };

	    function calendar(key, mom, now) {
	        var output = this._calendar[key] || this._calendar['sameElse'];
	        return isFunction(output) ? output.call(mom, now) : output;
	    }

	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (
	            (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
	            absNumber
	        );
	    }

	    var formattingTokens =
	            /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
	        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
	        formatFunctions = {},
	        formatTokenFunctions = {};

	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken(token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(
	                    func.apply(this, arguments),
	                    token
	                );
	            };
	        }
	    }

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens),
	            i,
	            length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '',
	                i;
	            for (i = 0; i < length; i++) {
	                output += isFunction(array[i])
	                    ? array[i].call(mom, format)
	                    : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] =
	            formatFunctions[format] || makeFormatFunction(format);

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(
	                localFormattingTokens,
	                replaceLongDateFormatTokens
	            );
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    var defaultLongDateFormat = {
	        LTS: 'h:mm:ss A',
	        LT: 'h:mm A',
	        L: 'MM/DD/YYYY',
	        LL: 'MMMM D, YYYY',
	        LLL: 'MMMM D, YYYY h:mm A',
	        LLLL: 'dddd, MMMM D, YYYY h:mm A',
	    };

	    function longDateFormat(key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];

	        if (format || !formatUpper) {
	            return format;
	        }

	        this._longDateFormat[key] = formatUpper
	            .match(formattingTokens)
	            .map(function (tok) {
	                if (
	                    tok === 'MMMM' ||
	                    tok === 'MM' ||
	                    tok === 'DD' ||
	                    tok === 'dddd'
	                ) {
	                    return tok.slice(1);
	                }
	                return tok;
	            })
	            .join('');

	        return this._longDateFormat[key];
	    }

	    var defaultInvalidDate = 'Invalid date';

	    function invalidDate() {
	        return this._invalidDate;
	    }

	    var defaultOrdinal = '%d',
	        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

	    function ordinal(number) {
	        return this._ordinal.replace('%d', number);
	    }

	    var defaultRelativeTime = {
	        future: 'in %s',
	        past: '%s ago',
	        s: 'a few seconds',
	        ss: '%d seconds',
	        m: 'a minute',
	        mm: '%d minutes',
	        h: 'an hour',
	        hh: '%d hours',
	        d: 'a day',
	        dd: '%d days',
	        w: 'a week',
	        ww: '%d weeks',
	        M: 'a month',
	        MM: '%d months',
	        y: 'a year',
	        yy: '%d years',
	    };

	    function relativeTime(number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return isFunction(output)
	            ? output(number, withoutSuffix, string, isFuture)
	            : output.replace(/%d/i, number);
	    }

	    function pastFuture(diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	    }

	    var aliases = {};

	    function addUnitAlias(unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }

	    function normalizeUnits(units) {
	        return typeof units === 'string'
	            ? aliases[units] || aliases[units.toLowerCase()]
	            : undefined;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    var priorities = {};

	    function addUnitPriority(unit, priority) {
	        priorities[unit] = priority;
	    }

	    function getPrioritizedUnits(unitsObj) {
	        var units = [],
	            u;
	        for (u in unitsObj) {
	            if (hasOwnProp(unitsObj, u)) {
	                units.push({ unit: u, priority: priorities[u] });
	            }
	        }
	        units.sort(function (a, b) {
	            return a.priority - b.priority;
	        });
	        return units;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    function absFloor(number) {
	        if (number < 0) {
	            // -0 -> 0
	            return Math.ceil(number) || 0;
	        } else {
	            return Math.floor(number);
	        }
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }

	        return value;
	    }

	    function makeGetSet(unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                set$1(this, unit, value);
	                hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get(this, unit);
	            }
	        };
	    }

	    function get(mom, unit) {
	        return mom.isValid()
	            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
	            : NaN;
	    }

	    function set$1(mom, unit, value) {
	        if (mom.isValid() && !isNaN(value)) {
	            if (
	                unit === 'FullYear' &&
	                isLeapYear(mom.year()) &&
	                mom.month() === 1 &&
	                mom.date() === 29
	            ) {
	                value = toInt(value);
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
	                    value,
	                    mom.month(),
	                    daysInMonth(value, mom.month())
	                );
	            } else {
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	            }
	        }
	    }

	    // MOMENTS

	    function stringGet(units) {
	        units = normalizeUnits(units);
	        if (isFunction(this[units])) {
	            return this[units]();
	        }
	        return this;
	    }

	    function stringSet(units, value) {
	        if (typeof units === 'object') {
	            units = normalizeObjectUnits(units);
	            var prioritized = getPrioritizedUnits(units),
	                i,
	                prioritizedLen = prioritized.length;
	            for (i = 0; i < prioritizedLen; i++) {
	                this[prioritized[i].unit](units[prioritized[i].unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (isFunction(this[units])) {
	                return this[units](value);
	            }
	        }
	        return this;
	    }

	    var match1 = /\d/, //       0 - 9
	        match2 = /\d\d/, //      00 - 99
	        match3 = /\d{3}/, //     000 - 999
	        match4 = /\d{4}/, //    0000 - 9999
	        match6 = /[+-]?\d{6}/, // -999999 - 999999
	        match1to2 = /\d\d?/, //       0 - 99
	        match3to4 = /\d\d\d\d?/, //     999 - 9999
	        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
	        match1to3 = /\d{1,3}/, //       0 - 999
	        match1to4 = /\d{1,4}/, //       0 - 9999
	        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
	        matchUnsigned = /\d+/, //       0 - inf
	        matchSigned = /[+-]?\d+/, //    -inf - inf
	        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
	        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
	        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
	        // any word (or two) characters or numbers including two/three word month in arabic.
	        // includes scottish gaelic two word and hyphenated months
	        matchWord =
	            /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
	        regexes;

	    regexes = {};

	    function addRegexToken(token, regex, strictRegex) {
	        regexes[token] = isFunction(regex)
	            ? regex
	            : function (isStrict, localeData) {
	                  return isStrict && strictRegex ? strictRegex : regex;
	              };
	    }

	    function getParseRegexForToken(token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }

	        return regexes[token](config._strict, config._locale);
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return regexEscape(
	            s
	                .replace('\\', '')
	                .replace(
	                    /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
	                    function (matched, p1, p2, p3, p4) {
	                        return p1 || p2 || p3 || p4;
	                    }
	                )
	        );
	    }

	    function regexEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    var tokens = {};

	    function addParseToken(token, callback) {
	        var i,
	            func = callback,
	            tokenLen;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (isNumber(callback)) {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        tokenLen = token.length;
	        for (i = 0; i < tokenLen; i++) {
	            tokens[token[i]] = func;
	        }
	    }

	    function addWeekParseToken(token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }

	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }

	    var YEAR = 0,
	        MONTH = 1,
	        DATE = 2,
	        HOUR = 3,
	        MINUTE = 4,
	        SECOND = 5,
	        MILLISECOND = 6,
	        WEEK = 7,
	        WEEKDAY = 8;

	    function mod(n, x) {
	        return ((n % x) + x) % x;
	    }

	    var indexOf;

	    if (Array.prototype.indexOf) {
	        indexOf = Array.prototype.indexOf;
	    } else {
	        indexOf = function (o) {
	            // I know
	            var i;
	            for (i = 0; i < this.length; ++i) {
	                if (this[i] === o) {
	                    return i;
	                }
	            }
	            return -1;
	        };
	    }

	    function daysInMonth(year, month) {
	        if (isNaN(year) || isNaN(month)) {
	            return NaN;
	        }
	        var modMonth = mod(month, 12);
	        year += (month - modMonth) / 12;
	        return modMonth === 1
	            ? isLeapYear(year)
	                ? 29
	                : 28
	            : 31 - ((modMonth % 7) % 2);
	    }

	    // FORMATTING

	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });

	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });

	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });

	    // ALIASES

	    addUnitAlias('month', 'M');

	    // PRIORITY

	    addUnitPriority('month', 8);

	    // PARSING

	    addRegexToken('M', match1to2);
	    addRegexToken('MM', match1to2, match2);
	    addRegexToken('MMM', function (isStrict, locale) {
	        return locale.monthsShortRegex(isStrict);
	    });
	    addRegexToken('MMMM', function (isStrict, locale) {
	        return locale.monthsRegex(isStrict);
	    });

	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });

	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });

	    // LOCALES

	    var defaultLocaleMonths =
	            'January_February_March_April_May_June_July_August_September_October_November_December'.split(
	                '_'
	            ),
	        defaultLocaleMonthsShort =
	            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
	        defaultMonthsShortRegex = matchWord,
	        defaultMonthsRegex = matchWord;

	    function localeMonths(m, format) {
	        if (!m) {
	            return isArray(this._months)
	                ? this._months
	                : this._months['standalone'];
	        }
	        return isArray(this._months)
	            ? this._months[m.month()]
	            : this._months[
	                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
	                      ? 'format'
	                      : 'standalone'
	              ][m.month()];
	    }

	    function localeMonthsShort(m, format) {
	        if (!m) {
	            return isArray(this._monthsShort)
	                ? this._monthsShort
	                : this._monthsShort['standalone'];
	        }
	        return isArray(this._monthsShort)
	            ? this._monthsShort[m.month()]
	            : this._monthsShort[
	                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
	              ][m.month()];
	    }

	    function handleStrictParse(monthName, format, strict) {
	        var i,
	            ii,
	            mom,
	            llc = monthName.toLocaleLowerCase();
	        if (!this._monthsParse) {
	            // this is not used
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	            for (i = 0; i < 12; ++i) {
	                mom = createUTC([2000, i]);
	                this._shortMonthsParse[i] = this.monthsShort(
	                    mom,
	                    ''
	                ).toLocaleLowerCase();
	                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeMonthsParse(monthName, format, strict) {
	        var i, mom, regex;

	        if (this._monthsParseExact) {
	            return handleStrictParse.call(this, monthName, format, strict);
	        }

	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }

	        // TODO: add sorting
	        // Sorting makes sure if one month (or abbr) is a prefix of another
	        // see sorting in computeMonthsParse
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp(
	                    '^' + this.months(mom, '').replace('.', '') + '$',
	                    'i'
	                );
	                this._shortMonthsParse[i] = new RegExp(
	                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
	                    'i'
	                );
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex =
	                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (
	                strict &&
	                format === 'MMMM' &&
	                this._longMonthsParse[i].test(monthName)
	            ) {
	                return i;
	            } else if (
	                strict &&
	                format === 'MMM' &&
	                this._shortMonthsParse[i].test(monthName)
	            ) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function setMonth(mom, value) {
	        var dayOfMonth;

	        if (!mom.isValid()) {
	            // No op
	            return mom;
	        }

	        if (typeof value === 'string') {
	            if (/^\d+$/.test(value)) {
	                value = toInt(value);
	            } else {
	                value = mom.localeData().monthsParse(value);
	                // TODO: Another silent failure?
	                if (!isNumber(value)) {
	                    return mom;
	                }
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function getSetMonth(value) {
	        if (value != null) {
	            setMonth(this, value);
	            hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get(this, 'Month');
	        }
	    }

	    function getDaysInMonth() {
	        return daysInMonth(this.year(), this.month());
	    }

	    function monthsShortRegex(isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsShortStrictRegex;
	            } else {
	                return this._monthsShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsShortRegex')) {
	                this._monthsShortRegex = defaultMonthsShortRegex;
	            }
	            return this._monthsShortStrictRegex && isStrict
	                ? this._monthsShortStrictRegex
	                : this._monthsShortRegex;
	        }
	    }

	    function monthsRegex(isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsStrictRegex;
	            } else {
	                return this._monthsRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                this._monthsRegex = defaultMonthsRegex;
	            }
	            return this._monthsStrictRegex && isStrict
	                ? this._monthsStrictRegex
	                : this._monthsRegex;
	        }
	    }

	    function computeMonthsParse() {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var shortPieces = [],
	            longPieces = [],
	            mixedPieces = [],
	            i,
	            mom;
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            shortPieces.push(this.monthsShort(mom, ''));
	            longPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.monthsShort(mom, ''));
	        }
	        // Sorting makes sure if one month (or abbr) is a prefix of another it
	        // will match the longer piece.
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 12; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	        }
	        for (i = 0; i < 24; i++) {
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }

	        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._monthsShortRegex = this._monthsRegex;
	        this._monthsStrictRegex = new RegExp(
	            '^(' + longPieces.join('|') + ')',
	            'i'
	        );
	        this._monthsShortStrictRegex = new RegExp(
	            '^(' + shortPieces.join('|') + ')',
	            'i'
	        );
	    }

	    // FORMATTING

	    addFormatToken('Y', 0, 0, function () {
	        var y = this.year();
	        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
	    });

	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });

	    addFormatToken(0, ['YYYY', 4], 0, 'year');
	    addFormatToken(0, ['YYYYY', 5], 0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	    // ALIASES

	    addUnitAlias('year', 'y');

	    // PRIORITIES

	    addUnitPriority('year', 1);

	    // PARSING

	    addRegexToken('Y', matchSigned);
	    addRegexToken('YY', match1to2, match2);
	    addRegexToken('YYYY', match1to4, match4);
	    addRegexToken('YYYYY', match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);

	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] =
	            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = hooks.parseTwoDigitYear(input);
	    });
	    addParseToken('Y', function (input, array) {
	        array[YEAR] = parseInt(input, 10);
	    });

	    // HELPERS

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    // HOOKS

	    hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    // MOMENTS

	    var getSetYear = makeGetSet('FullYear', true);

	    function getIsLeapYear() {
	        return isLeapYear(this.year());
	    }

	    function createDate(y, m, d, h, M, s, ms) {
	        // can't just apply() to create a date:
	        // https://stackoverflow.com/q/181348
	        var date;
	        // the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            date = new Date(y + 400, m, d, h, M, s, ms);
	            if (isFinite(date.getFullYear())) {
	                date.setFullYear(y);
	            }
	        } else {
	            date = new Date(y, m, d, h, M, s, ms);
	        }

	        return date;
	    }

	    function createUTCDate(y) {
	        var date, args;
	        // the Date.UTC function remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            args = Array.prototype.slice.call(arguments);
	            // preserve leap years using a full 400 year cycle, then reset
	            args[0] = y + 400;
	            date = new Date(Date.UTC.apply(null, args));
	            if (isFinite(date.getUTCFullYear())) {
	                date.setUTCFullYear(y);
	            }
	        } else {
	            date = new Date(Date.UTC.apply(null, arguments));
	        }

	        return date;
	    }

	    // start-of-first-week - start-of-year
	    function firstWeekOffset(year, dow, doy) {
	        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	            fwd = 7 + dow - doy,
	            // first-week day local weekday -- which local weekday is fwd
	            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

	        return -fwdlw + fwd - 1;
	    }

	    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	        var localWeekday = (7 + weekday - dow) % 7,
	            weekOffset = firstWeekOffset(year, dow, doy),
	            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	            resYear,
	            resDayOfYear;

	        if (dayOfYear <= 0) {
	            resYear = year - 1;
	            resDayOfYear = daysInYear(resYear) + dayOfYear;
	        } else if (dayOfYear > daysInYear(year)) {
	            resYear = year + 1;
	            resDayOfYear = dayOfYear - daysInYear(year);
	        } else {
	            resYear = year;
	            resDayOfYear = dayOfYear;
	        }

	        return {
	            year: resYear,
	            dayOfYear: resDayOfYear,
	        };
	    }

	    function weekOfYear(mom, dow, doy) {
	        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	            resWeek,
	            resYear;

	        if (week < 1) {
	            resYear = mom.year() - 1;
	            resWeek = week + weeksInYear(resYear, dow, doy);
	        } else if (week > weeksInYear(mom.year(), dow, doy)) {
	            resWeek = week - weeksInYear(mom.year(), dow, doy);
	            resYear = mom.year() + 1;
	        } else {
	            resYear = mom.year();
	            resWeek = week;
	        }

	        return {
	            week: resWeek,
	            year: resYear,
	        };
	    }

	    function weeksInYear(year, dow, doy) {
	        var weekOffset = firstWeekOffset(year, dow, doy),
	            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	    }

	    // FORMATTING

	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	    // ALIASES

	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');

	    // PRIORITIES

	    addUnitPriority('week', 5);
	    addUnitPriority('isoWeek', 5);

	    // PARSING

	    addRegexToken('w', match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W', match1to2);
	    addRegexToken('WW', match1to2, match2);

	    addWeekParseToken(
	        ['w', 'ww', 'W', 'WW'],
	        function (input, week, config, token) {
	            week[token.substr(0, 1)] = toInt(input);
	        }
	    );

	    // HELPERS

	    // LOCALES

	    function localeWeek(mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }

	    var defaultLocaleWeek = {
	        dow: 0, // Sunday is the first day of the week.
	        doy: 6, // The week that contains Jan 6th is the first week of the year.
	    };

	    function localeFirstDayOfWeek() {
	        return this._week.dow;
	    }

	    function localeFirstDayOfYear() {
	        return this._week.doy;
	    }

	    // MOMENTS

	    function getSetWeek(input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    function getSetISOWeek(input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    // FORMATTING

	    addFormatToken('d', 0, 'do', 'day');

	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });

	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });

	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });

	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');

	    // ALIASES

	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');

	    // PRIORITY
	    addUnitPriority('day', 11);
	    addUnitPriority('weekday', 11);
	    addUnitPriority('isoWeekday', 11);

	    // PARSING

	    addRegexToken('d', match1to2);
	    addRegexToken('e', match1to2);
	    addRegexToken('E', match1to2);
	    addRegexToken('dd', function (isStrict, locale) {
	        return locale.weekdaysMinRegex(isStrict);
	    });
	    addRegexToken('ddd', function (isStrict, locale) {
	        return locale.weekdaysShortRegex(isStrict);
	    });
	    addRegexToken('dddd', function (isStrict, locale) {
	        return locale.weekdaysRegex(isStrict);
	    });

	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	        var weekday = config._locale.weekdaysParse(input, token, config._strict);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });

	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });

	    // HELPERS

	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }

	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }

	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }

	        return null;
	    }

	    function parseIsoWeekday(input, locale) {
	        if (typeof input === 'string') {
	            return locale.weekdaysParse(input) % 7 || 7;
	        }
	        return isNaN(input) ? null : input;
	    }

	    // LOCALES
	    function shiftWeekdays(ws, n) {
	        return ws.slice(n, 7).concat(ws.slice(0, n));
	    }

	    var defaultLocaleWeekdays =
	            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        defaultWeekdaysRegex = matchWord,
	        defaultWeekdaysShortRegex = matchWord,
	        defaultWeekdaysMinRegex = matchWord;

	    function localeWeekdays(m, format) {
	        var weekdays = isArray(this._weekdays)
	            ? this._weekdays
	            : this._weekdays[
	                  m && m !== true && this._weekdays.isFormat.test(format)
	                      ? 'format'
	                      : 'standalone'
	              ];
	        return m === true
	            ? shiftWeekdays(weekdays, this._week.dow)
	            : m
	            ? weekdays[m.day()]
	            : weekdays;
	    }

	    function localeWeekdaysShort(m) {
	        return m === true
	            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
	            : m
	            ? this._weekdaysShort[m.day()]
	            : this._weekdaysShort;
	    }

	    function localeWeekdaysMin(m) {
	        return m === true
	            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
	            : m
	            ? this._weekdaysMin[m.day()]
	            : this._weekdaysMin;
	    }

	    function handleStrictParse$1(weekdayName, format, strict) {
	        var i,
	            ii,
	            mom,
	            llc = weekdayName.toLocaleLowerCase();
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._minWeekdaysParse = [];

	            for (i = 0; i < 7; ++i) {
	                mom = createUTC([2000, 1]).day(i);
	                this._minWeekdaysParse[i] = this.weekdaysMin(
	                    mom,
	                    ''
	                ).toLocaleLowerCase();
	                this._shortWeekdaysParse[i] = this.weekdaysShort(
	                    mom,
	                    ''
	                ).toLocaleLowerCase();
	                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	            }
	        }

	        if (strict) {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }

	    function localeWeekdaysParse(weekdayName, format, strict) {
	        var i, mom, regex;

	        if (this._weekdaysParseExact) {
	            return handleStrictParse$1.call(this, weekdayName, format, strict);
	        }

	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._minWeekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._fullWeekdaysParse = [];
	        }

	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already

	            mom = createUTC([2000, 1]).day(i);
	            if (strict && !this._fullWeekdaysParse[i]) {
	                this._fullWeekdaysParse[i] = new RegExp(
	                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
	                    'i'
	                );
	                this._shortWeekdaysParse[i] = new RegExp(
	                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
	                    'i'
	                );
	                this._minWeekdaysParse[i] = new RegExp(
	                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
	                    'i'
	                );
	            }
	            if (!this._weekdaysParse[i]) {
	                regex =
	                    '^' +
	                    this.weekdays(mom, '') +
	                    '|^' +
	                    this.weekdaysShort(mom, '') +
	                    '|^' +
	                    this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (
	                strict &&
	                format === 'dddd' &&
	                this._fullWeekdaysParse[i].test(weekdayName)
	            ) {
	                return i;
	            } else if (
	                strict &&
	                format === 'ddd' &&
	                this._shortWeekdaysParse[i].test(weekdayName)
	            ) {
	                return i;
	            } else if (
	                strict &&
	                format === 'dd' &&
	                this._minWeekdaysParse[i].test(weekdayName)
	            ) {
	                return i;
	            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function getSetDayOfWeek(input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }

	    function getSetLocaleDayOfWeek(input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }

	    function getSetISODayOfWeek(input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }

	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.

	        if (input != null) {
	            var weekday = parseIsoWeekday(input, this.localeData());
	            return this.day(this.day() % 7 ? weekday : weekday - 7);
	        } else {
	            return this.day() || 7;
	        }
	    }

	    function weekdaysRegex(isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysStrictRegex;
	            } else {
	                return this._weekdaysRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                this._weekdaysRegex = defaultWeekdaysRegex;
	            }
	            return this._weekdaysStrictRegex && isStrict
	                ? this._weekdaysStrictRegex
	                : this._weekdaysRegex;
	        }
	    }

	    function weekdaysShortRegex(isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysShortStrictRegex;
	            } else {
	                return this._weekdaysShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
	                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
	            }
	            return this._weekdaysShortStrictRegex && isStrict
	                ? this._weekdaysShortStrictRegex
	                : this._weekdaysShortRegex;
	        }
	    }

	    function weekdaysMinRegex(isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysMinStrictRegex;
	            } else {
	                return this._weekdaysMinRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
	                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
	            }
	            return this._weekdaysMinStrictRegex && isStrict
	                ? this._weekdaysMinStrictRegex
	                : this._weekdaysMinRegex;
	        }
	    }

	    function computeWeekdaysParse() {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }

	        var minPieces = [],
	            shortPieces = [],
	            longPieces = [],
	            mixedPieces = [],
	            i,
	            mom,
	            minp,
	            shortp,
	            longp;
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, 1]).day(i);
	            minp = regexEscape(this.weekdaysMin(mom, ''));
	            shortp = regexEscape(this.weekdaysShort(mom, ''));
	            longp = regexEscape(this.weekdays(mom, ''));
	            minPieces.push(minp);
	            shortPieces.push(shortp);
	            longPieces.push(longp);
	            mixedPieces.push(minp);
	            mixedPieces.push(shortp);
	            mixedPieces.push(longp);
	        }
	        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	        // will match the longer piece.
	        minPieces.sort(cmpLenRev);
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);

	        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._weekdaysShortRegex = this._weekdaysRegex;
	        this._weekdaysMinRegex = this._weekdaysRegex;

	        this._weekdaysStrictRegex = new RegExp(
	            '^(' + longPieces.join('|') + ')',
	            'i'
	        );
	        this._weekdaysShortStrictRegex = new RegExp(
	            '^(' + shortPieces.join('|') + ')',
	            'i'
	        );
	        this._weekdaysMinStrictRegex = new RegExp(
	            '^(' + minPieces.join('|') + ')',
	            'i'
	        );
	    }

	    // FORMATTING

	    function hFormat() {
	        return this.hours() % 12 || 12;
	    }

	    function kFormat() {
	        return this.hours() || 24;
	    }

	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, hFormat);
	    addFormatToken('k', ['kk', 2], 0, kFormat);

	    addFormatToken('hmm', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('hmmss', 0, 0, function () {
	        return (
	            '' +
	            hFormat.apply(this) +
	            zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2)
	        );
	    });

	    addFormatToken('Hmm', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2);
	    });

	    addFormatToken('Hmmss', 0, 0, function () {
	        return (
	            '' +
	            this.hours() +
	            zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2)
	        );
	    });

	    function meridiem(token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(
	                this.hours(),
	                this.minutes(),
	                lowercase
	            );
	        });
	    }

	    meridiem('a', true);
	    meridiem('A', false);

	    // ALIASES

	    addUnitAlias('hour', 'h');

	    // PRIORITY
	    addUnitPriority('hour', 13);

	    // PARSING

	    function matchMeridiem(isStrict, locale) {
	        return locale._meridiemParse;
	    }

	    addRegexToken('a', matchMeridiem);
	    addRegexToken('A', matchMeridiem);
	    addRegexToken('H', match1to2);
	    addRegexToken('h', match1to2);
	    addRegexToken('k', match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);
	    addRegexToken('kk', match1to2, match2);

	    addRegexToken('hmm', match3to4);
	    addRegexToken('hmmss', match5to6);
	    addRegexToken('Hmm', match3to4);
	    addRegexToken('Hmmss', match5to6);

	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['k', 'kk'], function (input, array, config) {
	        var kInput = toInt(input);
	        array[HOUR] = kInput === 24 ? 0 : kInput;
	    });
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmmss', function (input, array, config) {
	        var pos1 = input.length - 4,
	            pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('Hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	    });
	    addParseToken('Hmmss', function (input, array, config) {
	        var pos1 = input.length - 4,
	            pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	    });

	    // LOCALES

	    function localeIsPM(input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return (input + '').toLowerCase().charAt(0) === 'p';
	    }

	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
	        // Setting the hour should keep the time, because the user explicitly
	        // specified which hour they want. So trying to maintain the same hour (in
	        // a new timezone) makes sense. Adding/subtracting hours does not follow
	        // this rule.
	        getSetHour = makeGetSet('Hours', true);

	    function localeMeridiem(hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }

	    var baseConfig = {
	        calendar: defaultCalendar,
	        longDateFormat: defaultLongDateFormat,
	        invalidDate: defaultInvalidDate,
	        ordinal: defaultOrdinal,
	        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
	        relativeTime: defaultRelativeTime,

	        months: defaultLocaleMonths,
	        monthsShort: defaultLocaleMonthsShort,

	        week: defaultLocaleWeek,

	        weekdays: defaultLocaleWeekdays,
	        weekdaysMin: defaultLocaleWeekdaysMin,
	        weekdaysShort: defaultLocaleWeekdaysShort,

	        meridiemParse: defaultLocaleMeridiemParse,
	    };

	    // internal storage for locale config files
	    var locales = {},
	        localeFamilies = {},
	        globalLocale;

	    function commonPrefix(arr1, arr2) {
	        var i,
	            minl = Math.min(arr1.length, arr2.length);
	        for (i = 0; i < minl; i += 1) {
	            if (arr1[i] !== arr2[i]) {
	                return i;
	            }
	        }
	        return minl;
	    }

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0,
	            j,
	            next,
	            locale,
	            split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (
	                    next &&
	                    next.length >= j &&
	                    commonPrefix(split, next) >= j - 1
	                ) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return globalLocale;
	    }

	    function isLocaleNameSane(name) {
	        // Prevent names that look like filesystem paths, i.e contain '/' or '\'
	        return name.match('^[^/\\\\]*$') != null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null,
	            aliasedRequire;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (
	            locales[name] === undefined &&
	            'object' !== 'undefined' &&
	            module &&
	            module.exports &&
	            isLocaleNameSane(name)
	        ) {
	            try {
	                oldLocale = globalLocale._abbr;
	                aliasedRequire = commonjsRequire;
	                aliasedRequire('./locale/' + name);
	                getSetGlobalLocale(oldLocale);
	            } catch (e) {
	                // mark as not found to avoid repeating expensive file require call causing high CPU
	                // when trying to find en-US, en_US, en-us for every format call
	                locales[name] = null; // null means not found
	            }
	        }
	        return locales[name];
	    }

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function getSetGlobalLocale(key, values) {
	        var data;
	        if (key) {
	            if (isUndefined(values)) {
	                data = getLocale(key);
	            } else {
	                data = defineLocale(key, values);
	            }

	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            } else {
	                if (typeof console !== 'undefined' && console.warn) {
	                    //warn user if arguments are passed but the locale could not be set
	                    console.warn(
	                        'Locale ' + key + ' not found. Did you forget to load it?'
	                    );
	                }
	            }
	        }

	        return globalLocale._abbr;
	    }

	    function defineLocale(name, config) {
	        if (config !== null) {
	            var locale,
	                parentConfig = baseConfig;
	            config.abbr = name;
	            if (locales[name] != null) {
	                deprecateSimple(
	                    'defineLocaleOverride',
	                    'use moment.updateLocale(localeName, config) to change ' +
	                        'an existing locale. moment.defineLocale(localeName, ' +
	                        'config) should only be used for creating a new locale ' +
	                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
	                );
	                parentConfig = locales[name]._config;
	            } else if (config.parentLocale != null) {
	                if (locales[config.parentLocale] != null) {
	                    parentConfig = locales[config.parentLocale]._config;
	                } else {
	                    locale = loadLocale(config.parentLocale);
	                    if (locale != null) {
	                        parentConfig = locale._config;
	                    } else {
	                        if (!localeFamilies[config.parentLocale]) {
	                            localeFamilies[config.parentLocale] = [];
	                        }
	                        localeFamilies[config.parentLocale].push({
	                            name: name,
	                            config: config,
	                        });
	                        return null;
	                    }
	                }
	            }
	            locales[name] = new Locale(mergeConfigs(parentConfig, config));

	            if (localeFamilies[name]) {
	                localeFamilies[name].forEach(function (x) {
	                    defineLocale(x.name, x.config);
	                });
	            }

	            // backwards compat for now: also set the locale
	            // make sure we set the locale AFTER all child locales have been
	            // created, so we won't end up with the child locale set.
	            getSetGlobalLocale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }

	    function updateLocale(name, config) {
	        if (config != null) {
	            var locale,
	                tmpLocale,
	                parentConfig = baseConfig;

	            if (locales[name] != null && locales[name].parentLocale != null) {
	                // Update existing child locale in-place to avoid memory-leaks
	                locales[name].set(mergeConfigs(locales[name]._config, config));
	            } else {
	                // MERGE
	                tmpLocale = loadLocale(name);
	                if (tmpLocale != null) {
	                    parentConfig = tmpLocale._config;
	                }
	                config = mergeConfigs(parentConfig, config);
	                if (tmpLocale == null) {
	                    // updateLocale is called for creating a new locale
	                    // Set abbr so it will have a name (getters return
	                    // undefined otherwise).
	                    config.abbr = name;
	                }
	                locale = new Locale(config);
	                locale.parentLocale = locales[name];
	                locales[name] = locale;
	            }

	            // backwards compat for now: also set the locale
	            getSetGlobalLocale(name);
	        } else {
	            // pass null for config to unupdate, useful for tests
	            if (locales[name] != null) {
	                if (locales[name].parentLocale != null) {
	                    locales[name] = locales[name].parentLocale;
	                    if (name === getSetGlobalLocale()) {
	                        getSetGlobalLocale(name);
	                    }
	                } else if (locales[name] != null) {
	                    delete locales[name];
	                }
	            }
	        }
	        return locales[name];
	    }

	    // returns locale data
	    function getLocale(key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return globalLocale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    }

	    function listLocales() {
	        return keys(locales);
	    }

	    function checkOverflow(m) {
	        var overflow,
	            a = m._a;

	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH] < 0 || a[MONTH] > 11
	                    ? MONTH
	                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
	                    ? DATE
	                    : a[HOUR] < 0 ||
	                      a[HOUR] > 24 ||
	                      (a[HOUR] === 24 &&
	                          (a[MINUTE] !== 0 ||
	                              a[SECOND] !== 0 ||
	                              a[MILLISECOND] !== 0))
	                    ? HOUR
	                    : a[MINUTE] < 0 || a[MINUTE] > 59
	                    ? MINUTE
	                    : a[SECOND] < 0 || a[SECOND] > 59
	                    ? SECOND
	                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
	                    ? MILLISECOND
	                    : -1;

	            if (
	                getParsingFlags(m)._overflowDayOfYear &&
	                (overflow < YEAR || overflow > DATE)
	            ) {
	                overflow = DATE;
	            }
	            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	                overflow = WEEK;
	            }
	            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	                overflow = WEEKDAY;
	            }

	            getParsingFlags(m).overflow = overflow;
	        }

	        return m;
	    }

	    // iso 8601 regex
	    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	    var extendedIsoRegex =
	            /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
	        basicIsoRegex =
	            /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
	        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
	        isoDates = [
	            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	            ['YYYY-DDD', /\d{4}-\d{3}/],
	            ['YYYY-MM', /\d{4}-\d\d/, false],
	            ['YYYYYYMMDD', /[+-]\d{10}/],
	            ['YYYYMMDD', /\d{8}/],
	            ['GGGG[W]WWE', /\d{4}W\d{3}/],
	            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	            ['YYYYDDD', /\d{7}/],
	            ['YYYYMM', /\d{6}/, false],
	            ['YYYY', /\d{4}/, false],
	        ],
	        // iso time formats and regexes
	        isoTimes = [
	            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	            ['HH:mm', /\d\d:\d\d/],
	            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	            ['HHmmss', /\d\d\d\d\d\d/],
	            ['HHmm', /\d\d\d\d/],
	            ['HH', /\d\d/],
	        ],
	        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
	        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
	        rfc2822 =
	            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
	        obsOffsets = {
	            UT: 0,
	            GMT: 0,
	            EDT: -4 * 60,
	            EST: -5 * 60,
	            CDT: -5 * 60,
	            CST: -6 * 60,
	            MDT: -6 * 60,
	            MST: -7 * 60,
	            PDT: -7 * 60,
	            PST: -8 * 60,
	        };

	    // date from iso format
	    function configFromISO(config) {
	        var i,
	            l,
	            string = config._i,
	            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	            allowTime,
	            dateFormat,
	            timeFormat,
	            tzFormat,
	            isoDatesLen = isoDates.length,
	            isoTimesLen = isoTimes.length;

	        if (match) {
	            getParsingFlags(config).iso = true;
	            for (i = 0, l = isoDatesLen; i < l; i++) {
	                if (isoDates[i][1].exec(match[1])) {
	                    dateFormat = isoDates[i][0];
	                    allowTime = isoDates[i][2] !== false;
	                    break;
	                }
	            }
	            if (dateFormat == null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[3]) {
	                for (i = 0, l = isoTimesLen; i < l; i++) {
	                    if (isoTimes[i][1].exec(match[3])) {
	                        // match[2] should be 'T' or space
	                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                        break;
	                    }
	                }
	                if (timeFormat == null) {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            if (!allowTime && timeFormat != null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[4]) {
	                if (tzRegex.exec(match[4])) {
	                    tzFormat = 'Z';
	                } else {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    function extractFromRFC2822Strings(
	        yearStr,
	        monthStr,
	        dayStr,
	        hourStr,
	        minuteStr,
	        secondStr
	    ) {
	        var result = [
	            untruncateYear(yearStr),
	            defaultLocaleMonthsShort.indexOf(monthStr),
	            parseInt(dayStr, 10),
	            parseInt(hourStr, 10),
	            parseInt(minuteStr, 10),
	        ];

	        if (secondStr) {
	            result.push(parseInt(secondStr, 10));
	        }

	        return result;
	    }

	    function untruncateYear(yearStr) {
	        var year = parseInt(yearStr, 10);
	        if (year <= 49) {
	            return 2000 + year;
	        } else if (year <= 999) {
	            return 1900 + year;
	        }
	        return year;
	    }

	    function preprocessRFC2822(s) {
	        // Remove comments and folding whitespace and replace multiple-spaces with a single space
	        return s
	            .replace(/\([^()]*\)|[\n\t]/g, ' ')
	            .replace(/(\s\s+)/g, ' ')
	            .replace(/^\s\s*/, '')
	            .replace(/\s\s*$/, '');
	    }

	    function checkWeekday(weekdayStr, parsedInput, config) {
	        if (weekdayStr) {
	            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
	            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
	                weekdayActual = new Date(
	                    parsedInput[0],
	                    parsedInput[1],
	                    parsedInput[2]
	                ).getDay();
	            if (weekdayProvided !== weekdayActual) {
	                getParsingFlags(config).weekdayMismatch = true;
	                config._isValid = false;
	                return false;
	            }
	        }
	        return true;
	    }

	    function calculateOffset(obsOffset, militaryOffset, numOffset) {
	        if (obsOffset) {
	            return obsOffsets[obsOffset];
	        } else if (militaryOffset) {
	            // the only allowed military tz is Z
	            return 0;
	        } else {
	            var hm = parseInt(numOffset, 10),
	                m = hm % 100,
	                h = (hm - m) / 100;
	            return h * 60 + m;
	        }
	    }

	    // date and time from ref 2822 format
	    function configFromRFC2822(config) {
	        var match = rfc2822.exec(preprocessRFC2822(config._i)),
	            parsedArray;
	        if (match) {
	            parsedArray = extractFromRFC2822Strings(
	                match[4],
	                match[3],
	                match[2],
	                match[5],
	                match[6],
	                match[7]
	            );
	            if (!checkWeekday(match[1], parsedArray, config)) {
	                return;
	            }

	            config._a = parsedArray;
	            config._tzm = calculateOffset(match[8], match[9], match[10]);

	            config._d = createUTCDate.apply(null, config._a);
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

	            getParsingFlags(config).rfc2822 = true;
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);
	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }

	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }

	        configFromRFC2822(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }

	        if (config._strict) {
	            config._isValid = false;
	        } else {
	            // Final attempt, use Input Fallback
	            hooks.createFromInputFallback(config);
	        }
	    }

	    hooks.createFromInputFallback = deprecate(
	        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
	            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
	            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );

	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }

	    function currentDateArray(config) {
	        // hooks is actually the exported moment object
	        var nowValue = new Date(hooks.now());
	        if (config._useUTC) {
	            return [
	                nowValue.getUTCFullYear(),
	                nowValue.getUTCMonth(),
	                nowValue.getUTCDate(),
	            ];
	        }
	        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray(config) {
	        var i,
	            date,
	            input = [],
	            currentDate,
	            expectedWeekday,
	            yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear != null) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	            if (
	                config._dayOfYear > daysInYear(yearToUse) ||
	                config._dayOfYear === 0
	            ) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }

	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] =
	                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (
	            config._a[HOUR] === 24 &&
	            config._a[MINUTE] === 0 &&
	            config._a[SECOND] === 0 &&
	            config._a[MILLISECOND] === 0
	        ) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? createUTCDate : createDate).apply(
	            null,
	            input
	        );
	        expectedWeekday = config._useUTC
	            ? config._d.getUTCDay()
	            : config._d.getDay();

	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }

	        // check for mismatching day of week
	        if (
	            config._w &&
	            typeof config._w.d !== 'undefined' &&
	            config._w.d !== expectedWeekday
	        ) {
	            getParsingFlags(config).weekdayMismatch = true;
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(
	                w.GG,
	                config._a[YEAR],
	                weekOfYear(createLocal(), 1, 4).year
	            );
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	            if (weekday < 1 || weekday > 7) {
	                weekdayOverflow = true;
	            }
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            curWeek = weekOfYear(createLocal(), dow, doy);

	            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

	            // Default to current week.
	            week = defaults(w.w, curWeek.week);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < 0 || weekday > 6) {
	                    weekdayOverflow = true;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from beginning of week
	                weekday = w.e + dow;
	                if (w.e < 0 || w.e > 6) {
	                    weekdayOverflow = true;
	                }
	            } else {
	                // default to beginning of week
	                weekday = dow;
	            }
	        }
	        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	            getParsingFlags(config)._overflowWeeks = true;
	        } else if (weekdayOverflow != null) {
	            getParsingFlags(config)._overflowWeekday = true;
	        } else {
	            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	            config._a[YEAR] = temp.year;
	            config._dayOfYear = temp.dayOfYear;
	        }
	    }

	    // constant that refers to the ISO standard
	    hooks.ISO_8601 = function () {};

	    // constant that refers to the RFC 2822 form
	    hooks.RFC_2822 = function () {};

	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }
	        if (config._f === hooks.RFC_2822) {
	            configFromRFC2822(config);
	            return;
	        }
	        config._a = [];
	        getParsingFlags(config).empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i,
	            parsedInput,
	            tokens,
	            token,
	            skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0,
	            era,
	            tokenLen;

	        tokens =
	            expandFormat(config._f, config._locale).match(formattingTokens) || [];
	        tokenLen = tokens.length;
	        for (i = 0; i < tokenLen; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
	                [])[0];
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(
	                    string.indexOf(parsedInput) + parsedInput.length
	                );
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                } else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            } else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver =
	            stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (
	            config._a[HOUR] <= 12 &&
	            getParsingFlags(config).bigHour === true &&
	            config._a[HOUR] > 0
	        ) {
	            getParsingFlags(config).bigHour = undefined;
	        }

	        getParsingFlags(config).parsedDateParts = config._a.slice(0);
	        getParsingFlags(config).meridiem = config._meridiem;
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(
	            config._locale,
	            config._a[HOUR],
	            config._meridiem
	        );

	        // handle era
	        era = getParsingFlags(config).era;
	        if (era !== null) {
	            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
	        }

	        configFromArray(config);
	        checkOverflow(config);
	    }

	    function meridiemFixWrap(locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }

	    // date from string and array of format strings
	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,
	            scoreToBeat,
	            i,
	            currentScore,
	            validFormatFound,
	            bestFormatIsValid = false,
	            configfLen = config._f.length;

	        if (configfLen === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < configfLen; i++) {
	            currentScore = 0;
	            validFormatFound = false;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);

	            if (isValid(tempConfig)) {
	                validFormatFound = true;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;

	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	            getParsingFlags(tempConfig).score = currentScore;

	            if (!bestFormatIsValid) {
	                if (
	                    scoreToBeat == null ||
	                    currentScore < scoreToBeat ||
	                    validFormatFound
	                ) {
	                    scoreToBeat = currentScore;
	                    bestMoment = tempConfig;
	                    if (validFormatFound) {
	                        bestFormatIsValid = true;
	                    }
	                }
	            } else {
	                if (currentScore < scoreToBeat) {
	                    scoreToBeat = currentScore;
	                    bestMoment = tempConfig;
	                }
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }

	        var i = normalizeObjectUnits(config._i),
	            dayOrDate = i.day === undefined ? i.date : i.day;
	        config._a = map(
	            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
	            function (obj) {
	                return obj && parseInt(obj, 10);
	            }
	        );

	        configFromArray(config);
	    }

	    function createFromConfig(config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    function prepareConfig(config) {
	        var input = config._i,
	            format = config._f;

	        config._locale = config._locale || getLocale(config._l);

	        if (input === null || (format === undefined && input === '')) {
	            return createInvalid({ nullInput: true });
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isDate(input)) {
	            config._d = input;
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else {
	            configFromInput(config);
	        }

	        if (!isValid(config)) {
	            config._d = null;
	        }

	        return config;
	    }

	    function configFromInput(config) {
	        var input = config._i;
	        if (isUndefined(input)) {
	            config._d = new Date(hooks.now());
	        } else if (isDate(input)) {
	            config._d = new Date(input.valueOf());
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (isObject(input)) {
	            configFromObject(config);
	        } else if (isNumber(input)) {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            hooks.createFromInputFallback(config);
	        }
	    }

	    function createLocalOrUTC(input, format, locale, strict, isUTC) {
	        var c = {};

	        if (format === true || format === false) {
	            strict = format;
	            format = undefined;
	        }

	        if (locale === true || locale === false) {
	            strict = locale;
	            locale = undefined;
	        }

	        if (
	            (isObject(input) && isObjectEmpty(input)) ||
	            (isArray(input) && input.length === 0)
	        ) {
	            input = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;

	        return createFromConfig(c);
	    }

	    function createLocal(input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }

	    var prototypeMin = deprecate(
	            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
	            function () {
	                var other = createLocal.apply(null, arguments);
	                if (this.isValid() && other.isValid()) {
	                    return other < this ? this : other;
	                } else {
	                    return createInvalid();
	                }
	            }
	        ),
	        prototypeMax = deprecate(
	            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
	            function () {
	                var other = createLocal.apply(null, arguments);
	                if (this.isValid() && other.isValid()) {
	                    return other > this ? this : other;
	                } else {
	                    return createInvalid();
	                }
	            }
	        );

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    // TODO: Use [].sort instead?
	    function min() {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    }

	    function max() {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    }

	    var now = function () {
	        return Date.now ? Date.now() : +new Date();
	    };

	    var ordering = [
	        'year',
	        'quarter',
	        'month',
	        'week',
	        'day',
	        'hour',
	        'minute',
	        'second',
	        'millisecond',
	    ];

	    function isDurationValid(m) {
	        var key,
	            unitHasDecimal = false,
	            i,
	            orderLen = ordering.length;
	        for (key in m) {
	            if (
	                hasOwnProp(m, key) &&
	                !(
	                    indexOf.call(ordering, key) !== -1 &&
	                    (m[key] == null || !isNaN(m[key]))
	                )
	            ) {
	                return false;
	            }
	        }

	        for (i = 0; i < orderLen; ++i) {
	            if (m[ordering[i]]) {
	                if (unitHasDecimal) {
	                    return false; // only allow non-integers for smallest unit
	                }
	                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
	                    unitHasDecimal = true;
	                }
	            }
	        }

	        return true;
	    }

	    function isValid$1() {
	        return this._isValid;
	    }

	    function createInvalid$1() {
	        return createDuration(NaN);
	    }

	    function Duration(duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        this._isValid = isDurationValid(normalizedInput);

	        // representation for dateAddRemove
	        this._milliseconds =
	            +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days + weeks * 7;
	        // It is impossible to translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months + quarters * 3 + years * 12;

	        this._data = {};

	        this._locale = getLocale();

	        this._bubble();
	    }

	    function isDuration(obj) {
	        return obj instanceof Duration;
	    }

	    function absRound(number) {
	        if (number < 0) {
	            return Math.round(-1 * number) * -1;
	        } else {
	            return Math.round(number);
	        }
	    }

	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if (
	                (dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
	            ) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    // FORMATTING

	    function offset(token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset(),
	                sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return (
	                sign +
	                zeroFill(~~(offset / 60), 2) +
	                separator +
	                zeroFill(~~offset % 60, 2)
	            );
	        });
	    }

	    offset('Z', ':');
	    offset('ZZ', '');

	    // PARSING

	    addRegexToken('Z', matchShortOffset);
	    addRegexToken('ZZ', matchShortOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(matchShortOffset, input);
	    });

	    // HELPERS

	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;

	    function offsetFromString(matcher, string) {
	        var matches = (string || '').match(matcher),
	            chunk,
	            parts,
	            minutes;

	        if (matches === null) {
	            return null;
	        }

	        chunk = matches[matches.length - 1] || [];
	        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff =
	                (isMoment(input) || isDate(input)
	                    ? input.valueOf()
	                    : createLocal(input).valueOf()) - res.valueOf();
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(res._d.valueOf() + diff);
	            hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return createLocal(input).local();
	        }
	    }

	    function getDateOffset(m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset());
	    }

	    // HOOKS

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    hooks.updateOffset = function () {};

	    // MOMENTS

	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset(input, keepLocalTime, keepMinutes) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(matchShortOffset, input);
	                if (input === null) {
	                    return this;
	                }
	            } else if (Math.abs(input) < 16 && !keepMinutes) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    addSubtract(
	                        this,
	                        createDuration(input - offset, 'm'),
	                        1,
	                        false
	                    );
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }

	    function getSetZone(input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }

	            this.utcOffset(input, keepLocalTime);

	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }

	    function setOffsetToUTC(keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }

	    function setOffsetToLocal(keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;

	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }

	    function setOffsetToParsedOffset() {
	        if (this._tzm != null) {
	            this.utcOffset(this._tzm, false, true);
	        } else if (typeof this._i === 'string') {
	            var tZone = offsetFromString(matchOffset, this._i);
	            if (tZone != null) {
	                this.utcOffset(tZone);
	            } else {
	                this.utcOffset(0, true);
	            }
	        }
	        return this;
	    }

	    function hasAlignedHourOffset(input) {
	        if (!this.isValid()) {
	            return false;
	        }
	        input = input ? createLocal(input).utcOffset() : 0;

	        return (this.utcOffset() - input) % 60 === 0;
	    }

	    function isDaylightSavingTime() {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }

	    function isDaylightSavingTimeShifted() {
	        if (!isUndefined(this._isDSTShifted)) {
	            return this._isDSTShifted;
	        }

	        var c = {},
	            other;

	        copyConfig(c, this);
	        c = prepareConfig(c);

	        if (c._a) {
	            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
	            this._isDSTShifted =
	                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }

	        return this._isDSTShifted;
	    }

	    function isLocal() {
	        return this.isValid() ? !this._isUTC : false;
	    }

	    function isUtcOffset() {
	        return this.isValid() ? this._isUTC : false;
	    }

	    function isUtc() {
	        return this.isValid() ? this._isUTC && this._offset === 0 : false;
	    }

	    // ASP.NET json date format regex
	    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
	        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	        // and further modified to allow for strings containing both week and day
	        isoRegex =
	            /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

	    function createDuration(input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;

	        if (isDuration(input)) {
	            duration = {
	                ms: input._milliseconds,
	                d: input._days,
	                M: input._months,
	            };
	        } else if (isNumber(input) || !isNaN(+input)) {
	            duration = {};
	            if (key) {
	                duration[key] = +input;
	            } else {
	                duration.milliseconds = +input;
	            }
	        } else if ((match = aspNetRegex.exec(input))) {
	            sign = match[1] === '-' ? -1 : 1;
	            duration = {
	                y: 0,
	                d: toInt(match[DATE]) * sign,
	                h: toInt(match[HOUR]) * sign,
	                m: toInt(match[MINUTE]) * sign,
	                s: toInt(match[SECOND]) * sign,
	                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
	            };
	        } else if ((match = isoRegex.exec(input))) {
	            sign = match[1] === '-' ? -1 : 1;
	            duration = {
	                y: parseIso(match[2], sign),
	                M: parseIso(match[3], sign),
	                w: parseIso(match[4], sign),
	                d: parseIso(match[5], sign),
	                h: parseIso(match[6], sign),
	                m: parseIso(match[7], sign),
	                s: parseIso(match[8], sign),
	            };
	        } else if (duration == null) {
	            // checks for null or undefined
	            duration = {};
	        } else if (
	            typeof duration === 'object' &&
	            ('from' in duration || 'to' in duration)
	        ) {
	            diffRes = momentsDifference(
	                createLocal(duration.from),
	                createLocal(duration.to)
	            );

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
	            ret._isValid = input._isValid;
	        }

	        return ret;
	    }

	    createDuration.fn = Duration.prototype;
	    createDuration.invalid = createInvalid$1;

	    function parseIso(inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = {};

	        res.months =
	            other.month() - base.month() + (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +base.clone().add(res.months, 'M');

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        if (!(base.isValid() && other.isValid())) {
	            return { milliseconds: 0, months: 0 };
	        }

	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    // TODO: remove 'name' arg after deprecation is removed
	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(
	                    name,
	                    'moment().' +
	                        name +
	                        '(period, number) is deprecated. Please use moment().' +
	                        name +
	                        '(number, period). ' +
	                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
	                );
	                tmp = val;
	                val = period;
	                period = tmp;
	            }

	            dur = createDuration(val, period);
	            addSubtract(this, dur, direction);
	            return this;
	        };
	    }

	    function addSubtract(mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = absRound(duration._days),
	            months = absRound(duration._months);

	        if (!mom.isValid()) {
	            // No op
	            return;
	        }

	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (months) {
	            setMonth(mom, get(mom, 'Month') + months * isAdding);
	        }
	        if (days) {
	            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
	        }
	        if (milliseconds) {
	            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	        }
	        if (updateOffset) {
	            hooks.updateOffset(mom, days || months);
	        }
	    }

	    var add = createAdder(1, 'add'),
	        subtract = createAdder(-1, 'subtract');

	    function isString(input) {
	        return typeof input === 'string' || input instanceof String;
	    }

	    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
	    function isMomentInput(input) {
	        return (
	            isMoment(input) ||
	            isDate(input) ||
	            isString(input) ||
	            isNumber(input) ||
	            isNumberOrStringArray(input) ||
	            isMomentInputObject(input) ||
	            input === null ||
	            input === undefined
	        );
	    }

	    function isMomentInputObject(input) {
	        var objectTest = isObject(input) && !isObjectEmpty(input),
	            propertyTest = false,
	            properties = [
	                'years',
	                'year',
	                'y',
	                'months',
	                'month',
	                'M',
	                'days',
	                'day',
	                'd',
	                'dates',
	                'date',
	                'D',
	                'hours',
	                'hour',
	                'h',
	                'minutes',
	                'minute',
	                'm',
	                'seconds',
	                'second',
	                's',
	                'milliseconds',
	                'millisecond',
	                'ms',
	            ],
	            i,
	            property,
	            propertyLen = properties.length;

	        for (i = 0; i < propertyLen; i += 1) {
	            property = properties[i];
	            propertyTest = propertyTest || hasOwnProp(input, property);
	        }

	        return objectTest && propertyTest;
	    }

	    function isNumberOrStringArray(input) {
	        var arrayTest = isArray(input),
	            dataTypeTest = false;
	        if (arrayTest) {
	            dataTypeTest =
	                input.filter(function (item) {
	                    return !isNumber(item) && isString(input);
	                }).length === 0;
	        }
	        return arrayTest && dataTypeTest;
	    }

	    function isCalendarSpec(input) {
	        var objectTest = isObject(input) && !isObjectEmpty(input),
	            propertyTest = false,
	            properties = [
	                'sameDay',
	                'nextDay',
	                'lastDay',
	                'nextWeek',
	                'lastWeek',
	                'sameElse',
	            ],
	            i,
	            property;

	        for (i = 0; i < properties.length; i += 1) {
	            property = properties[i];
	            propertyTest = propertyTest || hasOwnProp(input, property);
	        }

	        return objectTest && propertyTest;
	    }

	    function getCalendarFormat(myMoment, now) {
	        var diff = myMoment.diff(now, 'days', true);
	        return diff < -6
	            ? 'sameElse'
	            : diff < -1
	            ? 'lastWeek'
	            : diff < 0
	            ? 'lastDay'
	            : diff < 1
	            ? 'sameDay'
	            : diff < 2
	            ? 'nextDay'
	            : diff < 7
	            ? 'nextWeek'
	            : 'sameElse';
	    }

	    function calendar$1(time, formats) {
	        // Support for single parameter, formats only overload to the calendar function
	        if (arguments.length === 1) {
	            if (!arguments[0]) {
	                time = undefined;
	                formats = undefined;
	            } else if (isMomentInput(arguments[0])) {
	                time = arguments[0];
	                formats = undefined;
	            } else if (isCalendarSpec(arguments[0])) {
	                formats = arguments[0];
	                time = undefined;
	            }
	        }
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            format = hooks.calendarFormat(this, sod) || 'sameElse',
	            output =
	                formats &&
	                (isFunction(formats[format])
	                    ? formats[format].call(this, now)
	                    : formats[format]);

	        return this.format(
	            output || this.localeData().calendar(format, this, createLocal(now))
	        );
	    }

	    function clone() {
	        return new Moment(this);
	    }

	    function isAfter(input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() > localInput.valueOf();
	        } else {
	            return localInput.valueOf() < this.clone().startOf(units).valueOf();
	        }
	    }

	    function isBefore(input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() < localInput.valueOf();
	        } else {
	            return this.clone().endOf(units).valueOf() < localInput.valueOf();
	        }
	    }

	    function isBetween(from, to, units, inclusivity) {
	        var localFrom = isMoment(from) ? from : createLocal(from),
	            localTo = isMoment(to) ? to : createLocal(to);
	        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
	            return false;
	        }
	        inclusivity = inclusivity || '()';
	        return (
	            (inclusivity[0] === '('
	                ? this.isAfter(localFrom, units)
	                : !this.isBefore(localFrom, units)) &&
	            (inclusivity[1] === ')'
	                ? this.isBefore(localTo, units)
	                : !this.isAfter(localTo, units))
	        );
	    }

	    function isSame(input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input),
	            inputMs;
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units) || 'millisecond';
	        if (units === 'millisecond') {
	            return this.valueOf() === localInput.valueOf();
	        } else {
	            inputMs = localInput.valueOf();
	            return (
	                this.clone().startOf(units).valueOf() <= inputMs &&
	                inputMs <= this.clone().endOf(units).valueOf()
	            );
	        }
	    }

	    function isSameOrAfter(input, units) {
	        return this.isSame(input, units) || this.isAfter(input, units);
	    }

	    function isSameOrBefore(input, units) {
	        return this.isSame(input, units) || this.isBefore(input, units);
	    }

	    function diff(input, units, asFloat) {
	        var that, zoneDelta, output;

	        if (!this.isValid()) {
	            return NaN;
	        }

	        that = cloneWithOffset(input, this);

	        if (!that.isValid()) {
	            return NaN;
	        }

	        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

	        units = normalizeUnits(units);

	        switch (units) {
	            case 'year':
	                output = monthDiff(this, that) / 12;
	                break;
	            case 'month':
	                output = monthDiff(this, that);
	                break;
	            case 'quarter':
	                output = monthDiff(this, that) / 3;
	                break;
	            case 'second':
	                output = (this - that) / 1e3;
	                break; // 1000
	            case 'minute':
	                output = (this - that) / 6e4;
	                break; // 1000 * 60
	            case 'hour':
	                output = (this - that) / 36e5;
	                break; // 1000 * 60 * 60
	            case 'day':
	                output = (this - that - zoneDelta) / 864e5;
	                break; // 1000 * 60 * 60 * 24, negate dst
	            case 'week':
	                output = (this - that - zoneDelta) / 6048e5;
	                break; // 1000 * 60 * 60 * 24 * 7, negate dst
	            default:
	                output = this - that;
	        }

	        return asFloat ? output : absFloor(output);
	    }

	    function monthDiff(a, b) {
	        if (a.date() < b.date()) {
	            // end-of-month calculations work correct when the start month has more
	            // days than the end month.
	            return -monthDiff(b, a);
	        }
	        // difference in months
	        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2,
	            adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        //check for negative zero, return zero if negative zero
	        return -(wholeMonthDiff + adjust) || 0;
	    }

	    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

	    function toString() {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }

	    function toISOString(keepOffset) {
	        if (!this.isValid()) {
	            return null;
	        }
	        var utc = keepOffset !== true,
	            m = utc ? this.clone().utc() : this;
	        if (m.year() < 0 || m.year() > 9999) {
	            return formatMoment(
	                m,
	                utc
	                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
	                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
	            );
	        }
	        if (isFunction(Date.prototype.toISOString)) {
	            // native implementation is ~50x faster, use it when we can
	            if (utc) {
	                return this.toDate().toISOString();
	            } else {
	                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
	                    .toISOString()
	                    .replace('Z', formatMoment(m, 'Z'));
	            }
	        }
	        return formatMoment(
	            m,
	            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
	        );
	    }

	    /**
	     * Return a human readable representation of a moment that can
	     * also be evaluated to get a new moment which is the same
	     *
	     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
	     */
	    function inspect() {
	        if (!this.isValid()) {
	            return 'moment.invalid(/* ' + this._i + ' */)';
	        }
	        var func = 'moment',
	            zone = '',
	            prefix,
	            year,
	            datetime,
	            suffix;
	        if (!this.isLocal()) {
	            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
	            zone = 'Z';
	        }
	        prefix = '[' + func + '("]';
	        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
	        datetime = '-MM-DD[T]HH:mm:ss.SSS';
	        suffix = zone + '[")]';

	        return this.format(prefix + year + datetime + suffix);
	    }

	    function format(inputString) {
	        if (!inputString) {
	            inputString = this.isUtc()
	                ? hooks.defaultFormatUtc
	                : hooks.defaultFormat;
	        }
	        var output = formatMoment(this, inputString);
	        return this.localeData().postformat(output);
	    }

	    function from(time, withoutSuffix) {
	        if (
	            this.isValid() &&
	            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
	        ) {
	            return createDuration({ to: this, from: time })
	                .locale(this.locale())
	                .humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function fromNow(withoutSuffix) {
	        return this.from(createLocal(), withoutSuffix);
	    }

	    function to(time, withoutSuffix) {
	        if (
	            this.isValid() &&
	            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
	        ) {
	            return createDuration({ from: this, to: time })
	                .locale(this.locale())
	                .humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }

	    function toNow(withoutSuffix) {
	        return this.to(createLocal(), withoutSuffix);
	    }

	    // If passed a locale key, it will set the locale for this
	    // instance.  Otherwise, it will return the locale configuration
	    // variables for this instance.
	    function locale(key) {
	        var newLocaleData;

	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }

	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );

	    function localeData() {
	        return this._locale;
	    }

	    var MS_PER_SECOND = 1000,
	        MS_PER_MINUTE = 60 * MS_PER_SECOND,
	        MS_PER_HOUR = 60 * MS_PER_MINUTE,
	        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

	    // actual modulo - handles negative numbers (for dates before 1970):
	    function mod$1(dividend, divisor) {
	        return ((dividend % divisor) + divisor) % divisor;
	    }

	    function localStartOfDate(y, m, d) {
	        // the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
	        } else {
	            return new Date(y, m, d).valueOf();
	        }
	    }

	    function utcStartOfDate(y, m, d) {
	        // Date.UTC remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0) {
	            // preserve leap years using a full 400 year cycle, then reset
	            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
	        } else {
	            return Date.UTC(y, m, d);
	        }
	    }

	    function startOf(units) {
	        var time, startOfDate;
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond' || !this.isValid()) {
	            return this;
	        }

	        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

	        switch (units) {
	            case 'year':
	                time = startOfDate(this.year(), 0, 1);
	                break;
	            case 'quarter':
	                time = startOfDate(
	                    this.year(),
	                    this.month() - (this.month() % 3),
	                    1
	                );
	                break;
	            case 'month':
	                time = startOfDate(this.year(), this.month(), 1);
	                break;
	            case 'week':
	                time = startOfDate(
	                    this.year(),
	                    this.month(),
	                    this.date() - this.weekday()
	                );
	                break;
	            case 'isoWeek':
	                time = startOfDate(
	                    this.year(),
	                    this.month(),
	                    this.date() - (this.isoWeekday() - 1)
	                );
	                break;
	            case 'day':
	            case 'date':
	                time = startOfDate(this.year(), this.month(), this.date());
	                break;
	            case 'hour':
	                time = this._d.valueOf();
	                time -= mod$1(
	                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
	                    MS_PER_HOUR
	                );
	                break;
	            case 'minute':
	                time = this._d.valueOf();
	                time -= mod$1(time, MS_PER_MINUTE);
	                break;
	            case 'second':
	                time = this._d.valueOf();
	                time -= mod$1(time, MS_PER_SECOND);
	                break;
	        }

	        this._d.setTime(time);
	        hooks.updateOffset(this, true);
	        return this;
	    }

	    function endOf(units) {
	        var time, startOfDate;
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond' || !this.isValid()) {
	            return this;
	        }

	        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

	        switch (units) {
	            case 'year':
	                time = startOfDate(this.year() + 1, 0, 1) - 1;
	                break;
	            case 'quarter':
	                time =
	                    startOfDate(
	                        this.year(),
	                        this.month() - (this.month() % 3) + 3,
	                        1
	                    ) - 1;
	                break;
	            case 'month':
	                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
	                break;
	            case 'week':
	                time =
	                    startOfDate(
	                        this.year(),
	                        this.month(),
	                        this.date() - this.weekday() + 7
	                    ) - 1;
	                break;
	            case 'isoWeek':
	                time =
	                    startOfDate(
	                        this.year(),
	                        this.month(),
	                        this.date() - (this.isoWeekday() - 1) + 7
	                    ) - 1;
	                break;
	            case 'day':
	            case 'date':
	                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
	                break;
	            case 'hour':
	                time = this._d.valueOf();
	                time +=
	                    MS_PER_HOUR -
	                    mod$1(
	                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
	                        MS_PER_HOUR
	                    ) -
	                    1;
	                break;
	            case 'minute':
	                time = this._d.valueOf();
	                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
	                break;
	            case 'second':
	                time = this._d.valueOf();
	                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
	                break;
	        }

	        this._d.setTime(time);
	        hooks.updateOffset(this, true);
	        return this;
	    }

	    function valueOf() {
	        return this._d.valueOf() - (this._offset || 0) * 60000;
	    }

	    function unix() {
	        return Math.floor(this.valueOf() / 1000);
	    }

	    function toDate() {
	        return new Date(this.valueOf());
	    }

	    function toArray() {
	        var m = this;
	        return [
	            m.year(),
	            m.month(),
	            m.date(),
	            m.hour(),
	            m.minute(),
	            m.second(),
	            m.millisecond(),
	        ];
	    }

	    function toObject() {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds(),
	        };
	    }

	    function toJSON() {
	        // new Date(NaN).toJSON() === null
	        return this.isValid() ? this.toISOString() : null;
	    }

	    function isValid$2() {
	        return isValid(this);
	    }

	    function parsingFlags() {
	        return extend({}, getParsingFlags(this));
	    }

	    function invalidAt() {
	        return getParsingFlags(this).overflow;
	    }

	    function creationData() {
	        return {
	            input: this._i,
	            format: this._f,
	            locale: this._locale,
	            isUTC: this._isUTC,
	            strict: this._strict,
	        };
	    }

	    addFormatToken('N', 0, 0, 'eraAbbr');
	    addFormatToken('NN', 0, 0, 'eraAbbr');
	    addFormatToken('NNN', 0, 0, 'eraAbbr');
	    addFormatToken('NNNN', 0, 0, 'eraName');
	    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

	    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
	    addFormatToken('y', ['yy', 2], 0, 'eraYear');
	    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
	    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

	    addRegexToken('N', matchEraAbbr);
	    addRegexToken('NN', matchEraAbbr);
	    addRegexToken('NNN', matchEraAbbr);
	    addRegexToken('NNNN', matchEraName);
	    addRegexToken('NNNNN', matchEraNarrow);

	    addParseToken(
	        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],
	        function (input, array, config, token) {
	            var era = config._locale.erasParse(input, token, config._strict);
	            if (era) {
	                getParsingFlags(config).era = era;
	            } else {
	                getParsingFlags(config).invalidEra = input;
	            }
	        }
	    );

	    addRegexToken('y', matchUnsigned);
	    addRegexToken('yy', matchUnsigned);
	    addRegexToken('yyy', matchUnsigned);
	    addRegexToken('yyyy', matchUnsigned);
	    addRegexToken('yo', matchEraYearOrdinal);

	    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
	    addParseToken(['yo'], function (input, array, config, token) {
	        var match;
	        if (config._locale._eraYearOrdinalRegex) {
	            match = input.match(config._locale._eraYearOrdinalRegex);
	        }

	        if (config._locale.eraYearOrdinalParse) {
	            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
	        } else {
	            array[YEAR] = parseInt(input, 10);
	        }
	    });

	    function localeEras(m, format) {
	        var i,
	            l,
	            date,
	            eras = this._eras || getLocale('en')._eras;
	        for (i = 0, l = eras.length; i < l; ++i) {
	            switch (typeof eras[i].since) {
	                case 'string':
	                    // truncate time
	                    date = hooks(eras[i].since).startOf('day');
	                    eras[i].since = date.valueOf();
	                    break;
	            }

	            switch (typeof eras[i].until) {
	                case 'undefined':
	                    eras[i].until = +Infinity;
	                    break;
	                case 'string':
	                    // truncate time
	                    date = hooks(eras[i].until).startOf('day').valueOf();
	                    eras[i].until = date.valueOf();
	                    break;
	            }
	        }
	        return eras;
	    }

	    function localeErasParse(eraName, format, strict) {
	        var i,
	            l,
	            eras = this.eras(),
	            name,
	            abbr,
	            narrow;
	        eraName = eraName.toUpperCase();

	        for (i = 0, l = eras.length; i < l; ++i) {
	            name = eras[i].name.toUpperCase();
	            abbr = eras[i].abbr.toUpperCase();
	            narrow = eras[i].narrow.toUpperCase();

	            if (strict) {
	                switch (format) {
	                    case 'N':
	                    case 'NN':
	                    case 'NNN':
	                        if (abbr === eraName) {
	                            return eras[i];
	                        }
	                        break;

	                    case 'NNNN':
	                        if (name === eraName) {
	                            return eras[i];
	                        }
	                        break;

	                    case 'NNNNN':
	                        if (narrow === eraName) {
	                            return eras[i];
	                        }
	                        break;
	                }
	            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
	                return eras[i];
	            }
	        }
	    }

	    function localeErasConvertYear(era, year) {
	        var dir = era.since <= era.until ? +1 : -1;
	        if (year === undefined) {
	            return hooks(era.since).year();
	        } else {
	            return hooks(era.since).year() + (year - era.offset) * dir;
	        }
	    }

	    function getEraName() {
	        var i,
	            l,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (eras[i].since <= val && val <= eras[i].until) {
	                return eras[i].name;
	            }
	            if (eras[i].until <= val && val <= eras[i].since) {
	                return eras[i].name;
	            }
	        }

	        return '';
	    }

	    function getEraNarrow() {
	        var i,
	            l,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (eras[i].since <= val && val <= eras[i].until) {
	                return eras[i].narrow;
	            }
	            if (eras[i].until <= val && val <= eras[i].since) {
	                return eras[i].narrow;
	            }
	        }

	        return '';
	    }

	    function getEraAbbr() {
	        var i,
	            l,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (eras[i].since <= val && val <= eras[i].until) {
	                return eras[i].abbr;
	            }
	            if (eras[i].until <= val && val <= eras[i].since) {
	                return eras[i].abbr;
	            }
	        }

	        return '';
	    }

	    function getEraYear() {
	        var i,
	            l,
	            dir,
	            val,
	            eras = this.localeData().eras();
	        for (i = 0, l = eras.length; i < l; ++i) {
	            dir = eras[i].since <= eras[i].until ? +1 : -1;

	            // truncate time
	            val = this.clone().startOf('day').valueOf();

	            if (
	                (eras[i].since <= val && val <= eras[i].until) ||
	                (eras[i].until <= val && val <= eras[i].since)
	            ) {
	                return (
	                    (this.year() - hooks(eras[i].since).year()) * dir +
	                    eras[i].offset
	                );
	            }
	        }

	        return this.year();
	    }

	    function erasNameRegex(isStrict) {
	        if (!hasOwnProp(this, '_erasNameRegex')) {
	            computeErasParse.call(this);
	        }
	        return isStrict ? this._erasNameRegex : this._erasRegex;
	    }

	    function erasAbbrRegex(isStrict) {
	        if (!hasOwnProp(this, '_erasAbbrRegex')) {
	            computeErasParse.call(this);
	        }
	        return isStrict ? this._erasAbbrRegex : this._erasRegex;
	    }

	    function erasNarrowRegex(isStrict) {
	        if (!hasOwnProp(this, '_erasNarrowRegex')) {
	            computeErasParse.call(this);
	        }
	        return isStrict ? this._erasNarrowRegex : this._erasRegex;
	    }

	    function matchEraAbbr(isStrict, locale) {
	        return locale.erasAbbrRegex(isStrict);
	    }

	    function matchEraName(isStrict, locale) {
	        return locale.erasNameRegex(isStrict);
	    }

	    function matchEraNarrow(isStrict, locale) {
	        return locale.erasNarrowRegex(isStrict);
	    }

	    function matchEraYearOrdinal(isStrict, locale) {
	        return locale._eraYearOrdinalRegex || matchUnsigned;
	    }

	    function computeErasParse() {
	        var abbrPieces = [],
	            namePieces = [],
	            narrowPieces = [],
	            mixedPieces = [],
	            i,
	            l,
	            eras = this.eras();

	        for (i = 0, l = eras.length; i < l; ++i) {
	            namePieces.push(regexEscape(eras[i].name));
	            abbrPieces.push(regexEscape(eras[i].abbr));
	            narrowPieces.push(regexEscape(eras[i].narrow));

	            mixedPieces.push(regexEscape(eras[i].name));
	            mixedPieces.push(regexEscape(eras[i].abbr));
	            mixedPieces.push(regexEscape(eras[i].narrow));
	        }

	        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
	        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
	        this._erasNarrowRegex = new RegExp(
	            '^(' + narrowPieces.join('|') + ')',
	            'i'
	        );
	    }

	    // FORMATTING

	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });

	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });

	    function addWeekYearFormatToken(token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }

	    addWeekYearFormatToken('gggg', 'weekYear');
	    addWeekYearFormatToken('ggggg', 'weekYear');
	    addWeekYearFormatToken('GGGG', 'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	    // ALIASES

	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');

	    // PRIORITY

	    addUnitPriority('weekYear', 1);
	    addUnitPriority('isoWeekYear', 1);

	    // PARSING

	    addRegexToken('G', matchSigned);
	    addRegexToken('g', matchSigned);
	    addRegexToken('GG', match1to2, match2);
	    addRegexToken('gg', match1to2, match2);
	    addRegexToken('GGGG', match1to4, match4);
	    addRegexToken('gggg', match1to4, match4);
	    addRegexToken('GGGGG', match1to6, match6);
	    addRegexToken('ggggg', match1to6, match6);

	    addWeekParseToken(
	        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],
	        function (input, week, config, token) {
	            week[token.substr(0, 2)] = toInt(input);
	        }
	    );

	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = hooks.parseTwoDigitYear(input);
	    });

	    // MOMENTS

	    function getSetWeekYear(input) {
	        return getSetWeekYearHelper.call(
	            this,
	            input,
	            this.week(),
	            this.weekday(),
	            this.localeData()._week.dow,
	            this.localeData()._week.doy
	        );
	    }

	    function getSetISOWeekYear(input) {
	        return getSetWeekYearHelper.call(
	            this,
	            input,
	            this.isoWeek(),
	            this.isoWeekday(),
	            1,
	            4
	        );
	    }

	    function getISOWeeksInYear() {
	        return weeksInYear(this.year(), 1, 4);
	    }

	    function getISOWeeksInISOWeekYear() {
	        return weeksInYear(this.isoWeekYear(), 1, 4);
	    }

	    function getWeeksInYear() {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }

	    function getWeeksInWeekYear() {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
	    }

	    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	        var weeksTarget;
	        if (input == null) {
	            return weekOfYear(this, dow, doy).year;
	        } else {
	            weeksTarget = weeksInYear(input, dow, doy);
	            if (week > weeksTarget) {
	                week = weeksTarget;
	            }
	            return setWeekAll.call(this, input, week, weekday, dow, doy);
	        }
	    }

	    function setWeekAll(weekYear, week, weekday, dow, doy) {
	        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

	        this.year(date.getUTCFullYear());
	        this.month(date.getUTCMonth());
	        this.date(date.getUTCDate());
	        return this;
	    }

	    // FORMATTING

	    addFormatToken('Q', 0, 'Qo', 'quarter');

	    // ALIASES

	    addUnitAlias('quarter', 'Q');

	    // PRIORITY

	    addUnitPriority('quarter', 7);

	    // PARSING

	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });

	    // MOMENTS

	    function getSetQuarter(input) {
	        return input == null
	            ? Math.ceil((this.month() + 1) / 3)
	            : this.month((input - 1) * 3 + (this.month() % 3));
	    }

	    // FORMATTING

	    addFormatToken('D', ['DD', 2], 'Do', 'date');

	    // ALIASES

	    addUnitAlias('date', 'D');

	    // PRIORITY
	    addUnitPriority('date', 9);

	    // PARSING

	    addRegexToken('D', match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        return isStrict
	            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
	            : locale._dayOfMonthOrdinalParseLenient;
	    });

	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0]);
	    });

	    // MOMENTS

	    var getSetDayOfMonth = makeGetSet('Date', true);

	    // FORMATTING

	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	    // ALIASES

	    addUnitAlias('dayOfYear', 'DDD');

	    // PRIORITY
	    addUnitPriority('dayOfYear', 4);

	    // PARSING

	    addRegexToken('DDD', match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });

	    // HELPERS

	    // MOMENTS

	    function getSetDayOfYear(input) {
	        var dayOfYear =
	            Math.round(
	                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
	            ) + 1;
	        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
	    }

	    // FORMATTING

	    addFormatToken('m', ['mm', 2], 0, 'minute');

	    // ALIASES

	    addUnitAlias('minute', 'm');

	    // PRIORITY

	    addUnitPriority('minute', 14);

	    // PARSING

	    addRegexToken('m', match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);

	    // MOMENTS

	    var getSetMinute = makeGetSet('Minutes', false);

	    // FORMATTING

	    addFormatToken('s', ['ss', 2], 0, 'second');

	    // ALIASES

	    addUnitAlias('second', 's');

	    // PRIORITY

	    addUnitPriority('second', 15);

	    // PARSING

	    addRegexToken('s', match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);

	    // MOMENTS

	    var getSetSecond = makeGetSet('Seconds', false);

	    // FORMATTING

	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });

	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });

	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });

	    // ALIASES

	    addUnitAlias('millisecond', 'ms');

	    // PRIORITY

	    addUnitPriority('millisecond', 16);

	    // PARSING

	    addRegexToken('S', match1to3, match1);
	    addRegexToken('SS', match1to3, match2);
	    addRegexToken('SSS', match1to3, match3);

	    var token, getSetMillisecond;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }

	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }

	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }

	    getSetMillisecond = makeGetSet('Milliseconds', false);

	    // FORMATTING

	    addFormatToken('z', 0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');

	    // MOMENTS

	    function getZoneAbbr() {
	        return this._isUTC ? 'UTC' : '';
	    }

	    function getZoneName() {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }

	    var proto = Moment.prototype;

	    proto.add = add;
	    proto.calendar = calendar$1;
	    proto.clone = clone;
	    proto.diff = diff;
	    proto.endOf = endOf;
	    proto.format = format;
	    proto.from = from;
	    proto.fromNow = fromNow;
	    proto.to = to;
	    proto.toNow = toNow;
	    proto.get = stringGet;
	    proto.invalidAt = invalidAt;
	    proto.isAfter = isAfter;
	    proto.isBefore = isBefore;
	    proto.isBetween = isBetween;
	    proto.isSame = isSame;
	    proto.isSameOrAfter = isSameOrAfter;
	    proto.isSameOrBefore = isSameOrBefore;
	    proto.isValid = isValid$2;
	    proto.lang = lang;
	    proto.locale = locale;
	    proto.localeData = localeData;
	    proto.max = prototypeMax;
	    proto.min = prototypeMin;
	    proto.parsingFlags = parsingFlags;
	    proto.set = stringSet;
	    proto.startOf = startOf;
	    proto.subtract = subtract;
	    proto.toArray = toArray;
	    proto.toObject = toObject;
	    proto.toDate = toDate;
	    proto.toISOString = toISOString;
	    proto.inspect = inspect;
	    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
	        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
	            return 'Moment<' + this.format() + '>';
	        };
	    }
	    proto.toJSON = toJSON;
	    proto.toString = toString;
	    proto.unix = unix;
	    proto.valueOf = valueOf;
	    proto.creationData = creationData;
	    proto.eraName = getEraName;
	    proto.eraNarrow = getEraNarrow;
	    proto.eraAbbr = getEraAbbr;
	    proto.eraYear = getEraYear;
	    proto.year = getSetYear;
	    proto.isLeapYear = getIsLeapYear;
	    proto.weekYear = getSetWeekYear;
	    proto.isoWeekYear = getSetISOWeekYear;
	    proto.quarter = proto.quarters = getSetQuarter;
	    proto.month = getSetMonth;
	    proto.daysInMonth = getDaysInMonth;
	    proto.week = proto.weeks = getSetWeek;
	    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
	    proto.weeksInYear = getWeeksInYear;
	    proto.weeksInWeekYear = getWeeksInWeekYear;
	    proto.isoWeeksInYear = getISOWeeksInYear;
	    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
	    proto.date = getSetDayOfMonth;
	    proto.day = proto.days = getSetDayOfWeek;
	    proto.weekday = getSetLocaleDayOfWeek;
	    proto.isoWeekday = getSetISODayOfWeek;
	    proto.dayOfYear = getSetDayOfYear;
	    proto.hour = proto.hours = getSetHour;
	    proto.minute = proto.minutes = getSetMinute;
	    proto.second = proto.seconds = getSetSecond;
	    proto.millisecond = proto.milliseconds = getSetMillisecond;
	    proto.utcOffset = getSetOffset;
	    proto.utc = setOffsetToUTC;
	    proto.local = setOffsetToLocal;
	    proto.parseZone = setOffsetToParsedOffset;
	    proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    proto.isDST = isDaylightSavingTime;
	    proto.isLocal = isLocal;
	    proto.isUtcOffset = isUtcOffset;
	    proto.isUtc = isUtc;
	    proto.isUTC = isUtc;
	    proto.zoneAbbr = getZoneAbbr;
	    proto.zoneName = getZoneName;
	    proto.dates = deprecate(
	        'dates accessor is deprecated. Use date instead.',
	        getSetDayOfMonth
	    );
	    proto.months = deprecate(
	        'months accessor is deprecated. Use month instead',
	        getSetMonth
	    );
	    proto.years = deprecate(
	        'years accessor is deprecated. Use year instead',
	        getSetYear
	    );
	    proto.zone = deprecate(
	        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
	        getSetZone
	    );
	    proto.isDSTShifted = deprecate(
	        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
	        isDaylightSavingTimeShifted
	    );

	    function createUnix(input) {
	        return createLocal(input * 1000);
	    }

	    function createInZone() {
	        return createLocal.apply(null, arguments).parseZone();
	    }

	    function preParsePostFormat(string) {
	        return string;
	    }

	    var proto$1 = Locale.prototype;

	    proto$1.calendar = calendar;
	    proto$1.longDateFormat = longDateFormat;
	    proto$1.invalidDate = invalidDate;
	    proto$1.ordinal = ordinal;
	    proto$1.preparse = preParsePostFormat;
	    proto$1.postformat = preParsePostFormat;
	    proto$1.relativeTime = relativeTime;
	    proto$1.pastFuture = pastFuture;
	    proto$1.set = set;
	    proto$1.eras = localeEras;
	    proto$1.erasParse = localeErasParse;
	    proto$1.erasConvertYear = localeErasConvertYear;
	    proto$1.erasAbbrRegex = erasAbbrRegex;
	    proto$1.erasNameRegex = erasNameRegex;
	    proto$1.erasNarrowRegex = erasNarrowRegex;

	    proto$1.months = localeMonths;
	    proto$1.monthsShort = localeMonthsShort;
	    proto$1.monthsParse = localeMonthsParse;
	    proto$1.monthsRegex = monthsRegex;
	    proto$1.monthsShortRegex = monthsShortRegex;
	    proto$1.week = localeWeek;
	    proto$1.firstDayOfYear = localeFirstDayOfYear;
	    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

	    proto$1.weekdays = localeWeekdays;
	    proto$1.weekdaysMin = localeWeekdaysMin;
	    proto$1.weekdaysShort = localeWeekdaysShort;
	    proto$1.weekdaysParse = localeWeekdaysParse;

	    proto$1.weekdaysRegex = weekdaysRegex;
	    proto$1.weekdaysShortRegex = weekdaysShortRegex;
	    proto$1.weekdaysMinRegex = weekdaysMinRegex;

	    proto$1.isPM = localeIsPM;
	    proto$1.meridiem = localeMeridiem;

	    function get$1(format, index, field, setter) {
	        var locale = getLocale(),
	            utc = createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }

	    function listMonthsImpl(format, index, field) {
	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';

	        if (index != null) {
	            return get$1(format, index, field, 'month');
	        }

	        var i,
	            out = [];
	        for (i = 0; i < 12; i++) {
	            out[i] = get$1(format, i, field, 'month');
	        }
	        return out;
	    }

	    // ()
	    // (5)
	    // (fmt, 5)
	    // (fmt)
	    // (true)
	    // (true, 5)
	    // (true, fmt, 5)
	    // (true, fmt)
	    function listWeekdaysImpl(localeSorted, format, index, field) {
	        if (typeof localeSorted === 'boolean') {
	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        } else {
	            format = localeSorted;
	            index = format;
	            localeSorted = false;

	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }

	            format = format || '';
	        }

	        var locale = getLocale(),
	            shift = localeSorted ? locale._week.dow : 0,
	            i,
	            out = [];

	        if (index != null) {
	            return get$1(format, (index + shift) % 7, field, 'day');
	        }

	        for (i = 0; i < 7; i++) {
	            out[i] = get$1(format, (i + shift) % 7, field, 'day');
	        }
	        return out;
	    }

	    function listMonths(format, index) {
	        return listMonthsImpl(format, index, 'months');
	    }

	    function listMonthsShort(format, index) {
	        return listMonthsImpl(format, index, 'monthsShort');
	    }

	    function listWeekdays(localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	    }

	    function listWeekdaysShort(localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	    }

	    function listWeekdaysMin(localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	    }

	    getSetGlobalLocale('en', {
	        eras: [
	            {
	                since: '0001-01-01',
	                until: +Infinity,
	                offset: 1,
	                name: 'Anno Domini',
	                narrow: 'AD',
	                abbr: 'AD',
	            },
	            {
	                since: '0000-12-31',
	                until: -Infinity,
	                offset: 1,
	                name: 'Before Christ',
	                narrow: 'BC',
	                abbr: 'BC',
	            },
	        ],
	        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal: function (number) {
	            var b = number % 10,
	                output =
	                    toInt((number % 100) / 10) === 1
	                        ? 'th'
	                        : b === 1
	                        ? 'st'
	                        : b === 2
	                        ? 'nd'
	                        : b === 3
	                        ? 'rd'
	                        : 'th';
	            return number + output;
	        },
	    });

	    // Side effect imports

	    hooks.lang = deprecate(
	        'moment.lang is deprecated. Use moment.locale instead.',
	        getSetGlobalLocale
	    );
	    hooks.langData = deprecate(
	        'moment.langData is deprecated. Use moment.localeData instead.',
	        getLocale
	    );

	    var mathAbs = Math.abs;

	    function abs() {
	        var data = this._data;

	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days = mathAbs(this._days);
	        this._months = mathAbs(this._months);

	        data.milliseconds = mathAbs(data.milliseconds);
	        data.seconds = mathAbs(data.seconds);
	        data.minutes = mathAbs(data.minutes);
	        data.hours = mathAbs(data.hours);
	        data.months = mathAbs(data.months);
	        data.years = mathAbs(data.years);

	        return this;
	    }

	    function addSubtract$1(duration, input, value, direction) {
	        var other = createDuration(input, value);

	        duration._milliseconds += direction * other._milliseconds;
	        duration._days += direction * other._days;
	        duration._months += direction * other._months;

	        return duration._bubble();
	    }

	    // supports only 2.0-style add(1, 's') or add(duration)
	    function add$1(input, value) {
	        return addSubtract$1(this, input, value, 1);
	    }

	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function subtract$1(input, value) {
	        return addSubtract$1(this, input, value, -1);
	    }

	    function absCeil(number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }

	    function bubble() {
	        var milliseconds = this._milliseconds,
	            days = this._days,
	            months = this._months,
	            data = this._data,
	            seconds,
	            minutes,
	            hours,
	            years,
	            monthsFromDays;

	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (
	            !(
	                (milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0)
	            )
	        ) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }

	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;

	        seconds = absFloor(milliseconds / 1000);
	        data.seconds = seconds % 60;

	        minutes = absFloor(seconds / 60);
	        data.minutes = minutes % 60;

	        hours = absFloor(minutes / 60);
	        data.hours = hours % 24;

	        days += absFloor(hours / 24);

	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        data.days = days;
	        data.months = months;
	        data.years = years;

	        return this;
	    }

	    function daysToMonths(days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return (days * 4800) / 146097;
	    }

	    function monthsToDays(months) {
	        // the reverse of daysToMonths
	        return (months * 146097) / 4800;
	    }

	    function as(units) {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        var days,
	            months,
	            milliseconds = this._milliseconds;

	        units = normalizeUnits(units);

	        if (units === 'month' || units === 'quarter' || units === 'year') {
	            days = this._days + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            switch (units) {
	                case 'month':
	                    return months;
	                case 'quarter':
	                    return months / 3;
	                case 'year':
	                    return months / 12;
	            }
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week':
	                    return days / 7 + milliseconds / 6048e5;
	                case 'day':
	                    return days + milliseconds / 864e5;
	                case 'hour':
	                    return days * 24 + milliseconds / 36e5;
	                case 'minute':
	                    return days * 1440 + milliseconds / 6e4;
	                case 'second':
	                    return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond':
	                    return Math.floor(days * 864e5) + milliseconds;
	                default:
	                    throw new Error('Unknown unit ' + units);
	            }
	        }
	    }

	    // TODO: Use this.as('ms')?
	    function valueOf$1() {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }

	    function makeAs(alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }

	    var asMilliseconds = makeAs('ms'),
	        asSeconds = makeAs('s'),
	        asMinutes = makeAs('m'),
	        asHours = makeAs('h'),
	        asDays = makeAs('d'),
	        asWeeks = makeAs('w'),
	        asMonths = makeAs('M'),
	        asQuarters = makeAs('Q'),
	        asYears = makeAs('y');

	    function clone$1() {
	        return createDuration(this);
	    }

	    function get$2(units) {
	        units = normalizeUnits(units);
	        return this.isValid() ? this[units + 's']() : NaN;
	    }

	    function makeGetter(name) {
	        return function () {
	            return this.isValid() ? this._data[name] : NaN;
	        };
	    }

	    var milliseconds = makeGetter('milliseconds'),
	        seconds = makeGetter('seconds'),
	        minutes = makeGetter('minutes'),
	        hours = makeGetter('hours'),
	        days = makeGetter('days'),
	        months = makeGetter('months'),
	        years = makeGetter('years');

	    function weeks() {
	        return absFloor(this.days() / 7);
	    }

	    var round = Math.round,
	        thresholds = {
	            ss: 44, // a few seconds to seconds
	            s: 45, // seconds to minute
	            m: 45, // minutes to hour
	            h: 22, // hours to day
	            d: 26, // days to month/week
	            w: null, // weeks to month
	            M: 11, // months to year
	        };

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
	        var duration = createDuration(posNegDuration).abs(),
	            seconds = round(duration.as('s')),
	            minutes = round(duration.as('m')),
	            hours = round(duration.as('h')),
	            days = round(duration.as('d')),
	            months = round(duration.as('M')),
	            weeks = round(duration.as('w')),
	            years = round(duration.as('y')),
	            a =
	                (seconds <= thresholds.ss && ['s', seconds]) ||
	                (seconds < thresholds.s && ['ss', seconds]) ||
	                (minutes <= 1 && ['m']) ||
	                (minutes < thresholds.m && ['mm', minutes]) ||
	                (hours <= 1 && ['h']) ||
	                (hours < thresholds.h && ['hh', hours]) ||
	                (days <= 1 && ['d']) ||
	                (days < thresholds.d && ['dd', days]);

	        if (thresholds.w != null) {
	            a =
	                a ||
	                (weeks <= 1 && ['w']) ||
	                (weeks < thresholds.w && ['ww', weeks]);
	        }
	        a = a ||
	            (months <= 1 && ['M']) ||
	            (months < thresholds.M && ['MM', months]) ||
	            (years <= 1 && ['y']) || ['yy', years];

	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }

	    // This function allows you to set the rounding function for relative time strings
	    function getSetRelativeTimeRounding(roundingFunction) {
	        if (roundingFunction === undefined) {
	            return round;
	        }
	        if (typeof roundingFunction === 'function') {
	            round = roundingFunction;
	            return true;
	        }
	        return false;
	    }

	    // This function allows you to set a threshold for relative time strings
	    function getSetRelativeTimeThreshold(threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        if (threshold === 's') {
	            thresholds.ss = limit - 1;
	        }
	        return true;
	    }

	    function humanize(argWithSuffix, argThresholds) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }

	        var withSuffix = false,
	            th = thresholds,
	            locale,
	            output;

	        if (typeof argWithSuffix === 'object') {
	            argThresholds = argWithSuffix;
	            argWithSuffix = false;
	        }
	        if (typeof argWithSuffix === 'boolean') {
	            withSuffix = argWithSuffix;
	        }
	        if (typeof argThresholds === 'object') {
	            th = Object.assign({}, thresholds, argThresholds);
	            if (argThresholds.s != null && argThresholds.ss == null) {
	                th.ss = argThresholds.s - 1;
	            }
	        }

	        locale = this.localeData();
	        output = relativeTime$1(this, !withSuffix, th, locale);

	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }

	        return locale.postformat(output);
	    }

	    var abs$1 = Math.abs;

	    function sign(x) {
	        return (x > 0) - (x < 0) || +x;
	    }

	    function toISOString$1() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }

	        var seconds = abs$1(this._milliseconds) / 1000,
	            days = abs$1(this._days),
	            months = abs$1(this._months),
	            minutes,
	            hours,
	            years,
	            s,
	            total = this.asSeconds(),
	            totalSign,
	            ymSign,
	            daysSign,
	            hmsSign;

	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }

	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes = absFloor(seconds / 60);
	        hours = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

	        totalSign = total < 0 ? '-' : '';
	        ymSign = sign(this._months) !== sign(total) ? '-' : '';
	        daysSign = sign(this._days) !== sign(total) ? '-' : '';
	        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

	        return (
	            totalSign +
	            'P' +
	            (years ? ymSign + years + 'Y' : '') +
	            (months ? ymSign + months + 'M' : '') +
	            (days ? daysSign + days + 'D' : '') +
	            (hours || minutes || seconds ? 'T' : '') +
	            (hours ? hmsSign + hours + 'H' : '') +
	            (minutes ? hmsSign + minutes + 'M' : '') +
	            (seconds ? hmsSign + s + 'S' : '')
	        );
	    }

	    var proto$2 = Duration.prototype;

	    proto$2.isValid = isValid$1;
	    proto$2.abs = abs;
	    proto$2.add = add$1;
	    proto$2.subtract = subtract$1;
	    proto$2.as = as;
	    proto$2.asMilliseconds = asMilliseconds;
	    proto$2.asSeconds = asSeconds;
	    proto$2.asMinutes = asMinutes;
	    proto$2.asHours = asHours;
	    proto$2.asDays = asDays;
	    proto$2.asWeeks = asWeeks;
	    proto$2.asMonths = asMonths;
	    proto$2.asQuarters = asQuarters;
	    proto$2.asYears = asYears;
	    proto$2.valueOf = valueOf$1;
	    proto$2._bubble = bubble;
	    proto$2.clone = clone$1;
	    proto$2.get = get$2;
	    proto$2.milliseconds = milliseconds;
	    proto$2.seconds = seconds;
	    proto$2.minutes = minutes;
	    proto$2.hours = hours;
	    proto$2.days = days;
	    proto$2.weeks = weeks;
	    proto$2.months = months;
	    proto$2.years = years;
	    proto$2.humanize = humanize;
	    proto$2.toISOString = toISOString$1;
	    proto$2.toString = toISOString$1;
	    proto$2.toJSON = toISOString$1;
	    proto$2.locale = locale;
	    proto$2.localeData = localeData;

	    proto$2.toIsoString = deprecate(
	        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
	        toISOString$1
	    );
	    proto$2.lang = lang;

	    // FORMATTING

	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');

	    // PARSING

	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });

	    //! moment.js

	    hooks.version = '2.29.4';

	    setHookCallback(createLocal);

	    hooks.fn = proto;
	    hooks.min = min;
	    hooks.max = max;
	    hooks.now = now;
	    hooks.utc = createUTC;
	    hooks.unix = createUnix;
	    hooks.months = listMonths;
	    hooks.isDate = isDate;
	    hooks.locale = getSetGlobalLocale;
	    hooks.invalid = createInvalid;
	    hooks.duration = createDuration;
	    hooks.isMoment = isMoment;
	    hooks.weekdays = listWeekdays;
	    hooks.parseZone = createInZone;
	    hooks.localeData = getLocale;
	    hooks.isDuration = isDuration;
	    hooks.monthsShort = listMonthsShort;
	    hooks.weekdaysMin = listWeekdaysMin;
	    hooks.defineLocale = defineLocale;
	    hooks.updateLocale = updateLocale;
	    hooks.locales = listLocales;
	    hooks.weekdaysShort = listWeekdaysShort;
	    hooks.normalizeUnits = normalizeUnits;
	    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
	    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
	    hooks.calendarFormat = getCalendarFormat;
	    hooks.prototype = proto;

	    // currently HTML5 input type only supports 24-hour formats
	    hooks.HTML5_FMT = {
	        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
	        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
	        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
	        DATE: 'YYYY-MM-DD', // <input type="date" />
	        TIME: 'HH:mm', // <input type="time" />
	        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
	        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
	        WEEK: 'GGGG-[W]WW', // <input type="week" />
	        MONTH: 'YYYY-MM', // <input type="month" />
	    };

	    return hooks;

	})));
} (moment$1));

var momentRangeExports = {};
var momentRange = {
  get exports(){ return momentRangeExports; },
  set exports(v){ momentRangeExports = v; },
};

(function (module, exports) {
	!function(t,e){module.exports=e(momentExports);}(commonjsGlobal,function(t){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r});},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=3)}([function(t,e,n){var r=n(5)();t.exports=function(t){return t!==r&&null!==t};},function(t,e,n){t.exports=n(18)()?Symbol:n(20);},function(e,n){e.exports=t;},function(t,e,n){function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t){return t.range=function(e,n){var r=this;return "string"==typeof e&&y.hasOwnProperty(e)?new h(t(r).startOf(e),t(r).endOf(e)):new h(e,n)},t.rangeFromInterval=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t();if(t.isMoment(r)||(r=t(r)),!r.isValid())throw new Error("Invalid date.");var o=r.clone().add(n,e),i=[];return i.push(t.min(r,o)),i.push(t.max(r,o)),new h(i)},t.rangeFromISOString=function(e){var n=a(e),r=t.parseZone(n[0]),o=t.parseZone(n[1]);return new h(r,o)},t.parseZoneRange=t.rangeFromISOString,t.fn.range=t.range,t.range.constructor=h,t.isRange=function(t){return t instanceof h},t.fn.within=function(t){return t.contains(this.toDate())},t}function a(t){return t.split("/")}Object.defineProperty(e,"__esModule",{value:!0}),e.DateRange=void 0;var s=function(){function t(t,e){var n=[],r=!0,o=!1,i=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t;}finally{try{!r&&a.return&&a.return();}finally{if(o)throw i}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r);}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();e.extendMoment=u;var l=n(2),v=r(l),d=n(1),p=r(d),y={year:!0,quarter:!0,month:!0,week:!0,day:!0,hour:!0,minute:!0,second:!0},h=e.DateRange=function(){function t(e,n){i(this,t);var r=e,o=n;if(1===arguments.length||void 0===n)if("object"===(void 0===e?"undefined":c(e))&&2===e.length){var u=s(e,2);r=u[0],o=u[1];}else if("string"==typeof e){var f=a(e),l=s(f,2);r=l[0],o=l[1];}this.start=r||0===r?(0, v.default)(r):(0, v.default)(-864e13),this.end=o||0===o?(0, v.default)(o):(0, v.default)(864e13);}return f(t,[{key:"adjacent",value:function(t){var e=this.start.isSame(t.end),n=this.end.isSame(t.start);return e&&t.start.valueOf()<=this.start.valueOf()||n&&t.end.valueOf()>=this.end.valueOf()}},{key:"add",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{adjacent:!1};return this.overlaps(t,e)?new this.constructor(v.default.min(this.start,t.start),v.default.max(this.end,t.end)):null}},{key:"by",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{excludeEnd:!1,step:1},n=this;return o({},p.default.iterator,function(){var r=e.step||1,o=Math.abs(n.start.diff(n.end,t))/r,i=e.excludeEnd||!1,u=0;return e.hasOwnProperty("exclusive")&&(i=e.exclusive),{next:function(){var e=n.start.clone().add(u*r,t),a=i?!(u<o):!(u<=o);return u++,{done:a,value:a?void 0:e}}}})}},{key:"byRange",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{excludeEnd:!1,step:1},n=this,r=e.step||1,i=this.valueOf()/t.valueOf()/r,u=Math.floor(i),a=e.excludeEnd||!1,s=0;return e.hasOwnProperty("exclusive")&&(a=e.exclusive),o({},p.default.iterator,function(){return u===1/0?{done:!0}:{next:function(){var e=(0, v.default)(n.start.valueOf()+t.valueOf()*s*r),o=u===i&&a?!(s<u):!(s<=u);return s++,{done:o,value:o?void 0:e}}}})}},{key:"center",value:function(){var t=this.start.valueOf()+this.diff()/2;return (0, v.default)(t)}},{key:"clone",value:function(){return new this.constructor(this.start.clone(),this.end.clone())}},{key:"contains",value:function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{excludeStart:!1,excludeEnd:!1},r=this.start.valueOf(),o=this.end.valueOf(),i=e.valueOf(),u=e.valueOf(),a=n.excludeStart||!1,s=n.excludeEnd||!1;n.hasOwnProperty("exclusive")&&(a=s=n.exclusive),e instanceof t&&(i=e.start.valueOf(),u=e.end.valueOf());var c=r<i||r<=i&&!a,f=o>u||o>=u&&!s;return c&&f}},{key:"diff",value:function(t,e){return this.end.diff(this.start,t,e)}},{key:"duration",value:function(t,e){return this.diff(t,e)}},{key:"intersect",value:function(t){var e=this.start.valueOf(),n=this.end.valueOf(),r=t.start.valueOf(),o=t.end.valueOf(),i=e==n,u=r==o;if(i){var a=e;if(a==r||a==o)return null;if(a>r&&a<o)return this.clone()}else if(u){var s=r;if(s==e||s==n)return null;if(s>e&&s<n)return new this.constructor(s,s)}return e<=r&&r<n&&n<o?new this.constructor(r,n):r<e&&e<o&&o<=n?new this.constructor(e,o):r<e&&e<=n&&n<o?this.clone():e<=r&&r<=o&&o<=n?new this.constructor(r,o):null}},{key:"isEqual",value:function(t){return this.start.isSame(t.start)&&this.end.isSame(t.end)}},{key:"isSame",value:function(t){return this.isEqual(t)}},{key:"overlaps",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{adjacent:!1},n=null!==this.intersect(t);return e.adjacent&&!n?this.adjacent(t):n}},{key:"reverseBy",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{excludeStart:!1,step:1},n=this;return o({},p.default.iterator,function(){var r=e.step||1,o=Math.abs(n.start.diff(n.end,t))/r,i=e.excludeStart||!1,u=0;return e.hasOwnProperty("exclusive")&&(i=e.exclusive),{next:function(){var e=n.end.clone().subtract(u*r,t),a=i?!(u<o):!(u<=o);return u++,{done:a,value:a?void 0:e}}}})}},{key:"reverseByRange",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{excludeStart:!1,step:1},n=this,r=e.step||1,i=this.valueOf()/t.valueOf()/r,u=Math.floor(i),a=e.excludeStart||!1,s=0;return e.hasOwnProperty("exclusive")&&(a=e.exclusive),o({},p.default.iterator,function(){return u===1/0?{done:!0}:{next:function(){var e=(0, v.default)(n.end.valueOf()-t.valueOf()*s*r),o=u===i&&a?!(s<u):!(s<=u);return s++,{done:o,value:o?void 0:e}}}})}},{key:"snapTo",value:function(t){var e=this.clone();return e.start.isSame((0, v.default)(-864e13))||(e.start=e.start.startOf(t)),e.end.isSame((0, v.default)(864e13))||(e.end=e.end.endOf(t)),e}},{key:"subtract",value:function(t){var e=this.start.valueOf(),n=this.end.valueOf(),r=t.start.valueOf(),o=t.end.valueOf();return null===this.intersect(t)?[this]:r<=e&&e<n&&n<=o?[]:r<=e&&e<o&&o<n?[new this.constructor(o,n)]:e<r&&r<n&&n<=o?[new this.constructor(e,r)]:e<r&&r<o&&o<n?[new this.constructor(e,r),new this.constructor(o,n)]:e<r&&r<n&&o<n?[new this.constructor(e,r),new this.constructor(r,n)]:[]}},{key:"toDate",value:function(){return [this.start.toDate(),this.end.toDate()]}},{key:"toString",value:function(){return this.start.format()+"/"+this.end.format()}},{key:"valueOf",value:function(){return this.end.valueOf()-this.start.valueOf()}}]),t}();},function(t,e,n){var r,o=n(6),i=n(13),u=n(9),a=n(15);r=t.exports=function(t,e){var n,r,u,s,c;return arguments.length<2||"string"!=typeof t?(s=e,e=t,t=null):s=arguments[2],null==t?(n=u=!0,r=!1):(n=a.call(t,"c"),r=a.call(t,"e"),u=a.call(t,"w")),c={value:e,configurable:n,enumerable:r,writable:u},s?o(i(s),c):c},r.gs=function(t,e,n){var r,s,c,f;return "string"!=typeof t?(c=n,n=e,e=t,t=null):c=arguments[3],null==e?e=void 0:u(e)?null==n?n=void 0:u(n)||(c=n,n=void 0):(c=e,e=n=void 0),null==t?(r=!0,s=!1):(r=a.call(t,"c"),s=a.call(t,"e")),f={get:e,set:n,configurable:r,enumerable:s},c?o(i(c),f):f};},function(t,e,n){t.exports=function(){};},function(t,e,n){t.exports=n(7)()?Object.assign:n(8);},function(t,e,n){t.exports=function(){var t,e=Object.assign;return "function"==typeof e&&(t={foo:"raz"},e(t,{bar:"dwa"},{trzy:"trzy"}),t.foo+t.bar+t.trzy==="razdwatrzy")};},function(t,e,n){var r=n(10),o=n(14),i=Math.max;t.exports=function(t,e){var n,u,a,s=i(arguments.length,2);for(t=Object(o(t)),a=function(r){try{t[r]=e[r];}catch(t){n||(n=t);}},u=1;u<s;++u)e=arguments[u],r(e).forEach(a);if(void 0!==n)throw n;return t};},function(t,e,n){t.exports=function(t){return "function"==typeof t};},function(t,e,n){t.exports=n(11)()?Object.keys:n(12);},function(t,e,n){t.exports=function(){try{return Object.keys("primitive"),!0}catch(t){return !1}};},function(t,e,n){var r=n(0),o=Object.keys;t.exports=function(t){return o(r(t)?Object(t):t)};},function(t,e,n){var r=n(0),o=Array.prototype.forEach,i=Object.create,u=function(t,e){var n;for(n in t)e[n]=t[n];};t.exports=function(t){var e=i(null);return o.call(arguments,function(t){r(t)&&u(Object(t),e);}),e};},function(t,e,n){var r=n(0);t.exports=function(t){if(!r(t))throw new TypeError("Cannot use null or undefined");return t};},function(t,e,n){t.exports=n(16)()?String.prototype.contains:n(17);},function(t,e,n){var r="razdwatrzy";t.exports=function(){return "function"==typeof r.contains&&(!0===r.contains("dwa")&&!1===r.contains("foo"))};},function(t,e,n){var r=String.prototype.indexOf;t.exports=function(t){return r.call(this,t,arguments[1])>-1};},function(t,e,n){var r={object:!0,symbol:!0};t.exports=function(){var t;if("function"!=typeof Symbol)return !1;t=Symbol("test symbol");try{String(t);}catch(t){return !1}return !!r[typeof Symbol.iterator]&&(!!r[typeof Symbol.toPrimitive]&&!!r[typeof Symbol.toStringTag])};},function(t,e,n){t.exports=function(t){return !!t&&("symbol"==typeof t||!!t.constructor&&("Symbol"===t.constructor.name&&"Symbol"===t[t.constructor.toStringTag]))};},function(t,e,n){var r,o,i,u,a=n(4),s=n(21),c=Object.create,f=Object.defineProperties,l=Object.defineProperty,v=Object.prototype,d=c(null);if("function"==typeof Symbol){r=Symbol;try{String(r()),u=!0;}catch(t){}}var p=function(){var t=c(null);return function(e){for(var n,r,o=0;t[e+(o||"")];)++o;return e+=o||"",t[e]=!0,n="@@"+e,l(v,n,a.gs(null,function(t){r||(r=!0,l(this,n,a(t)),r=!1);})),n}}();i=function(t){if(this instanceof i)throw new TypeError("Symbol is not a constructor");return o(t)},t.exports=o=function t(e){var n;if(this instanceof t)throw new TypeError("Symbol is not a constructor");return u?r(e):(n=c(i.prototype),e=void 0===e?"":String(e),f(n,{__description__:a("",e),__name__:a("",p(e))}))},f(o,{for:a(function(t){return d[t]?d[t]:d[t]=o(String(t))}),keyFor:a(function(t){var e;s(t);for(e in d)if(d[e]===t)return e}),hasInstance:a("",r&&r.hasInstance||o("hasInstance")),isConcatSpreadable:a("",r&&r.isConcatSpreadable||o("isConcatSpreadable")),iterator:a("",r&&r.iterator||o("iterator")),match:a("",r&&r.match||o("match")),replace:a("",r&&r.replace||o("replace")),search:a("",r&&r.search||o("search")),species:a("",r&&r.species||o("species")),split:a("",r&&r.split||o("split")),toPrimitive:a("",r&&r.toPrimitive||o("toPrimitive")),toStringTag:a("",r&&r.toStringTag||o("toStringTag")),unscopables:a("",r&&r.unscopables||o("unscopables"))}),f(i.prototype,{constructor:a(o),toString:a("",function(){return this.__name__})}),f(o.prototype,{toString:a(function(){return "Symbol ("+s(this).__description__+")"}),valueOf:a(function(){return s(this)})}),l(o.prototype,o.toPrimitive,a("",function(){var t=s(this);return "symbol"==typeof t?t:t.toString()})),l(o.prototype,o.toStringTag,a("c","Symbol")),l(i.prototype,o.toStringTag,a("c",o.prototype[o.toStringTag])),l(i.prototype,o.toPrimitive,a("c",o.prototype[o.toPrimitive]));},function(t,e,n){var r=n(19);t.exports=function(t){if(!r(t))throw new TypeError(t+" is not a symbol");return t};}])});
	
} (momentRange));

/**
 * Возвращает utc hours
 * @param {Object} tournament Экземпляр объекта tournament
 * @return {string} День, месяц и точное время или "-"
 */

var getESTHours_1;
var hasRequiredGetESTHours;

function requireGetESTHours () {
	if (hasRequiredGetESTHours) return getESTHours_1;
	hasRequiredGetESTHours = 1;
	const getESTHours = (tournament, duration = 0) => {
	  const isStartDate = tournament["@date"] ?? 0;
	  const startDate = Number(isStartDate * 1000 - duration);

	  return new Date(Number(startDate)).toLocaleString("en-EN", {
	    hour12: false,
	    hour: "numeric",
	    minute: "numeric",
	    timeZone: 'UTC'
	  });
	};

	getESTHours_1 = { getESTHours };
	return getESTHours_1;
}

const moment = momentExports;
const MomentRange = momentRangeExports;
MomentRange.extendMoment(moment);

const { getESTHours } = requireGetESTHours();

const isOffpeak = (tournament, offpeak, duration = 0) => {
  const [hour, minutes] = getESTHours(tournament, duration).split(":");

  const {
    fromHour: fromHourQ,
    fromMinutes: fromMinutesQ,
    toHour: toHourQ,
    toMinutes: toMinutesQ,
  } = offpeak;

  const fromHour = Number(fromHourQ);
  const fromMinutes = Number(fromMinutesQ);
  const toHour = Number(toHourQ);
  const toMinutes = Number(toMinutesQ);
  const fromMs = fromHour * 3600 + fromMinutes * 60;
  const toMs = toHour * 3600 + toMinutes * 60;

  const start = new Date(2022, 4, 23, fromHour + 3, fromMinutes);
  const current = new Date(2022, 4, 23 + (toMs <= fromMs ? 1 : 0), Number(hour) + 3, minutes);
  const currentWithout1 = new Date(2022, 4, 23, Number(hour) + 3, minutes);
  const end = new Date(2022, 4, 23 + (toMs <= fromMs ? 1 : 0), toHour + 3, toMinutes);

  const range = moment.range(start, end);

  if (range.contains(current) || range.contains(currentWithout1)) {
    return true;
  }

  return false;
};

var isOffpeak_1 = { isOffpeak };

const validateNumber$1 = (value) => {
  return value
    .replace(/[^\d.]*/g, "")
    .replace(/([.])[.]+/g, "$1")
    .replace(/^[^\d]*(\d+([.]\d{0,5})?).*$/g, "$1");
};
var validateNumber_1 = { validateNumber: validateNumber$1 };

const { getNetwork } = getNetwork_1;
  const {
    FromTo: FromToQ,
    FromToName: FromToNameQ,
    BidGt: BidGtQ,
    BidGtName: BidGtNameQ,
    Ticket: TicketQ,
    BidName: BidNameQ,
    Name: NameQ,
    FromToGt: FromToGtQ,
    StartDay: StartDayQ,
    NotName: NotNameQ,
    Entrants: EntrantsQ,
    FLAGS: FLAGSQ,
  } = curry_1;
  const { isSuperTurbo: isSuperTurboS } = isSuperTurbo_1;
  const { isTurbo: isTurboS } = isTurbo_1;
  const { isNormal: isNormalS } = isNormal_1;
  const { isOffpeak: isOffpeakQ } = isOffpeak_1;
  const {validateNumber} = validateNumber_1;
  
  const filter = (ruleLevel, offpeak, tournament, isGetTournaments = false) => {
    const name = tournament["@name"]?.toLowerCase(),
      network = getNetwork(tournament["@network"]),
      bid = Number(tournament["@usdBid"]),
      prizepool = Math.round(Number(tournament["@usdPrizepool"])),
      weekDay = tournament["@getWeekday"],

      FromTo = FromToQ(bid),
      FromToName = FromToNameQ(name)(bid),
      BidGt = BidGtQ(bid)(prizepool),
      BidGtName = BidGtNameQ(name)(bid)(prizepool),
      FromToGt = FromToGtQ(bid)(prizepool);
      TicketQ(name)(bid)(tournament["@tickets"] ?? 0);
      const Entrants = EntrantsQ(tournament?.["@totalEntrants"] ?? 0),
      BidName = BidNameQ(name)(bid),
      StartDay = StartDayQ(weekDay),
      Name = NameQ(name),
      NotName = NotNameQ(name),
      FLAGS = FLAGSQ(tournament),
      ability1 = tournament['@ability'],
      ability2 = tournament['@abilityBid'];

    const isTurbo = isTurboS(tournament);
    const isOffpeak = isOffpeakQ(tournament, offpeak, Number(tournament['@realDuration'] ?? 0) * 1000);
    const isSuperTurbo = isSuperTurboS(tournament);
    const isKo = isNormalS(tournament);
    const isNormal = !isTurbo && !isSuperTurbo;
    const isAbility1 = ability1 && ability1 !== '-';
    const isAbility2 = ability2 && ability2 !== '-';

    const level = (ruleLevel[0] === 'A' || ruleLevel[0] === 'B')? ruleLevel[0] : validateNumber(ruleLevel);
    const effmu = ruleLevel.replace(level, "").replace("-", "");
  
    if (!name || !bid) return { valid: false, guarantee: 1, rules: false };

    if((FromTo(1,3.3))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,3))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,3))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,4.5))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6.6))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Bounty Builder"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '10'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '10'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Bounty Builder"))
    && network === 'PS.eu'&& level === '10'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '10'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '11'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '11'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Bounty Builder"))
    && network === 'PS.eu'&& level === '11'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '11'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '12'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '12'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Bounty Builder"))
    && network === 'PS.eu'&& level === '12'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '12'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '13'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '13'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Bounty Builder"))
    && network === 'PS.eu'&& level === '13'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '13'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Bounty Builder"))
    && network === 'PS.eu'&& level === '15'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '15'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '15'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '15'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '14'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '14'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Bounty Builder"))
    && network === 'PS.eu'&& level === '14'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '14'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FLAGS("od"))
    && network === 'PS.eu'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'PS.eu'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'PS.eu'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'PS.eu'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'PS.eu'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'Chico'&& level === '16'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'PS.es'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'PS.es'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'PS.es'&& level === '16'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'PS.es'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'PS.es'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'Party'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'Party'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'Party'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'Party'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'Party'&& level === '16'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'GG'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'GG'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'GG'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'GG'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'GG'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'GG'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((NotName("All-In or Fold"))
    && network === 'GG'&& level === '16'&& effmu === 'A'&& isNormal&& isGetTournaments && (NotName("Flip & Go"))
    && network === 'GG'&& level === '16'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === '888'&& level === '16'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === '888'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === '888'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === '888'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === '888'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'WNMX'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'WNMX'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'WNMX'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'WNMX'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(2,10000))
    && network === 'WNMX'&& level === '16'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'WPN'&& level === '16'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'WPN'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'WPN'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '16'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'WPN'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sng"))
    && network === 'WPN'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '16'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1E"))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY"))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY"))
    && network === 'WNMX'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY"))
    && network === 'WNMX'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY"))
    && network === 'WNMX'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY"))
    && network === 'WNMX'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1B"))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1C"))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1B"))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1C"))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,13.2))
    && network === '888'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10000))
    && network === 'PS.eu'&& level === '16'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((FromTo(1,8.8))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isSuperTurbo&& !isKo&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isSuperTurbo&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,8.8))
    && network === 'PS.eu'&& level === '13'&& isSuperTurbo&& !isKo&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '13'&& isSuperTurbo&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '10'&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '10'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidName(210,"MYSTERY BOUNTY"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(210,"MYSTERY BOUNTY"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(210,"MYSTERY BOUNTY"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((FromTo(1,13.2))
    && network === '888'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,13.2))
    && network === '888'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((FromTo(1,13.2))
    && network === '888'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((FromTo(1,13.2))
    && network === '888'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((FromTo(1,13.2))
    && network === '888'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '15'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '14'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '13'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '12'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '11'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '10'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGt(50,2000))
    && network === 'WNMX'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(50,2000))
    && network === 'WNMX'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(50,2000))
    && network === 'WNMX'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(50,2000))
    && network === 'WNMX'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(50,2000))
    && network === 'WNMX'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(50,2000))
    && network === 'WNMX'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Bounty Builder"))
    && network === 'PS.eu'&& level === '9'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '9'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '9'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '9'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '9'&& isTurbo&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '9'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '8'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidName(33,"Bounty Builder"))
    && network === 'PS.eu'&& level === '8'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '8'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '8'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '8'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '7'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '7'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '7'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '7'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '7'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '6'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '6'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidName(11,"Bounty Builder"))
    && network === 'PS.eu'&& level === '6'&& isTurbo&& isGetTournaments && (FLAGS("od"))
    && network === 'PS.eu'&& level === '6'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '5'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '5'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '4'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '4'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '3'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((FromTo(1,4.5))
    && network === 'PS.eu'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '3'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '2'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((FromTo(0,4.5))
    && network === 'PS.eu'&& level === '2'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '2'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((FromTo(0,4.5))
    && network === 'PS.eu'&& level === '1'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '1'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '1'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,1.5))
    && network === 'PS.eu'&& level === '0'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '0'&& isNormal&& isGetTournaments && (Entrants(45))
    && network === 'PS.eu'&& level === '0'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((BidGtName(22,1090,"$109 Sunday Big Shot"))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((BidGtName(16.5,3270,"$109 Sunday Big Shot"))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3270, color: "green" };if((BidGtName(11,50000,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(11,100000,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 100000, color: "green" };if((BidGtName(11,15000,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((BidGtName(11,15000,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((BidGtName(11,10000,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(11,10000,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '4'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '7'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '8'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '10'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '11'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '12'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '13'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(11,"Road to the Sunday Million"))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '9'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '8'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(20,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGtName(10,1000,"€100 Sunday Special"))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(50,2000))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1E"))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1E"))
    && network === 'WNMX'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(50,2000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1E"))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(30,2000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2000, color: "green" };if((BidGt(10,500))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 500, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"$52.50 Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& isGetTournaments && (FLAGS("sat"))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"$52.50 Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '2'&& isTurbo&& isGetTournaments && (FLAGS("sat"))
    && network === 'GG'&& level === '2'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"$52.50 Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '3'&& isTurbo&& isGetTournaments && (FLAGS("sat"))
    && network === 'GG'&& level === '3'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"$52.50 Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '4'&& isTurbo&& isGetTournaments && (FLAGS("sat"))
    && network === 'GG'&& level === '4'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"$52.50 Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '5'&& isTurbo&& isGetTournaments && (FLAGS("sat"))
    && network === 'GG'&& level === '5'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"$52.50 Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '6'&& isTurbo&& isGetTournaments && (FLAGS("sat"))
    && network === 'GG'&& level === '6'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10.5,"SundaySqueeze"))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(15,4875))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("315"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 4875, color: "green" };if((BidGt(26,2625))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("Bounty Hunters"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("525"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2625, color: "green" };if((BidGt(125,10500))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("1050"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10500, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(15,4875))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("315"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 4875, color: "green" };if((BidGt(26,2625))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("Bounty Hunters"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("525"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2625, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(15,4875))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("315"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 4875, color: "green" };if((BidGt(125,10500))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("1050"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10500, color: "green" };if((BidGt(26,2625))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("Bounty Hunters"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("525"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2625, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(125,10500))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("1050"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10500, color: "green" };if((BidGt(26,2625))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("Bounty Hunters"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("525"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2625, color: "green" };if((BidGt(125,10500))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("1050"))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10500, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(26,2625))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("Bounty Hunters"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("525"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2625, color: "green" };if((BidGt(26,2625))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("Bounty Hunters"))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("525"))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2625, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(30,3000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 3000, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '5'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '5'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(20,2250))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '4'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '4'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((BidGt(15,2250))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 2250, color: "green" };if((FromTo(1,3))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(5.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '10'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '12'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(8.88,0))
    && network === 'PS.eu'&& level === '12'&& isSuperTurbo&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '12'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '13'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(8.88,0))
    && network === 'PS.eu'&& level === '13'&& isSuperTurbo&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '13'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(8.88,0))
    && network === 'PS.eu'&& level === '14'&& isSuperTurbo&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '14'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Stage 1]"))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1B"))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1C"))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'Party'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'Party'&& level === '15'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'Party'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,3.3))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Webnesday"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Webnesday"))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,4.5))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("sng"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments && (Entrants(36))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(11,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((FromTo(1,3))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(30,"Big Weekly"))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(10,"Weekender KO"))
    && network === 'IP'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(33,6400))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(33,6400))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(33,6400))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(125,10500))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("GGMasters High Rollers $1K"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10500, color: "green" };if((BidGt(108,10500))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments && (Name("GGMasters High Rollers $1K"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10500, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Webnesday"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(30,6400))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(15,4800))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 4800, color: "green" };if((BidGt(15,4800))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 4800, color: "green" };if((BidGt(30,6400))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(15,4800))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 4800, color: "green" };if((BidGt(30,6400))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(15,4800))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 4800, color: "green" };if((BidGt(30,6400))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(15,4800))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 4800, color: "green" };if((BidGt(30,6400))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(15,4800))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 4800, color: "green" };if((BidGt(30,6400))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Day 1"))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,1090,"Sunday Million"))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1090, color: "green" };if((FromTo(1,5))
    && network === 'IP'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'IP'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'IP'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'IP'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'IP'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'IP'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(95,1900,"Beast & SnC Venom MEGA"))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1900, color: "green" };if((BidGtName(95,1900,"Beast & SnC Venom MEGA"))
    && network === 'WPN'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1900, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(95,1900,"Beast & SnC Venom MEGA"))
    && network === 'WPN'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1900, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(16.5,50000,"Sunday Squeeze"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "green" };if((BidGtName(95,1900,"Beast & SnC Venom MEGA"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1900, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Thusday"))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '1'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(6,"Bounty Hunters Sunday Main Event"))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((Name("short"))
    && network === 'GG'&& level === '16'&& effmu === 'C'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(95,1900,"Beast & SnC Venom MEGA"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1900, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(265,"MILLION DOLLAR SUNDAY"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments && (StartDay("Webnesday"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,25))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,25))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,25))
    && network === 'IP'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,25))
    && network === 'IP'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,50))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,25))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,25))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,50))
    && network === 'IP'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,50))
    && network === 'IP'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'IP'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'IP'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(33,6400))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(33,6400))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(33,6400))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(33,6400))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(33,6400))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(33,6400))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments && (Name("320"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 6400, color: "green" };if((BidGt(20,15000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((BidGt(20,15000))
    && network === 'GG'&& level === '4'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '4'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((BidGt(20,15000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((BidGt(20,15000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (Name("GGMasters"))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (Name("150"))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '1'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(7.5,"Mini Slam KO"))
    && network === 'IP'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,33))
    && network === 'Chico'&& level === '16'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '16'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '16'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,3))
    && network === 'Chico'&& level === '2'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '2'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,3))
    && network === 'Chico'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,3))
    && network === 'Chico'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,3))
    && network === 'Chico'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'Chico'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'Chico'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'Chico'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'Chico'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'Chico'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,33))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,33))
    && network === 'Chico'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,33))
    && network === 'Chico'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,33))
    && network === 'Chico'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,33))
    && network === 'Chico'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Chico'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Chico'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'Party'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'Party'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'Party'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'Party'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'Party'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'Party'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'Party'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'Party'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'Party'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'Party'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'Party'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'Party'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'Party'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'Party'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'WNMX'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'WNMX'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'WNMX'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'WNMX'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'WNMX'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(125,"MAIN EVENT - DAY 1E"))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WNMX'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WNMX'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,2.2))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3.3))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,2.2))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,2.2))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,4.4))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,3.3))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,3.3))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5.5))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,4.4))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,4.4))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5.5))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5.5))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5.5))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5.5))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(11,15000,"Saturday Rebuy"))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(11,15000,"Saturday Rebuy"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(11,15000,"Saturday Rebuy"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((BidGtName(11,15000,"Saturday Rebuy"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Sunday Rebuy"))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(33,"Sunday Rebuy"))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.eu'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,2))
    && network === 'PS.es'&& level === '2'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '2'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3))
    && network === 'PS.es'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3))
    && network === 'PS.es'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'PS.es'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'PS.es'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,5))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '10'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'PS.es'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'PS.es'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3))
    && network === '888'&& level === '2'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '2'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3))
    && network === '888'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3))
    && network === '888'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6))
    && network === '888'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6))
    && network === '888'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6))
    && network === '888'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,13.2))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(0,3.3))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGtName(2.5,10000,"The Dime"))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "green" };if((BidGtName(2.5,10000,"The Dime"))
    && network === 'WPN'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "green" };if((BidGtName(2.5,10000,"The Dime"))
    && network === 'WPN'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "green" };if((FromTo(1,6.6))
    && network === 'WPN'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6.6))
    && network === 'WPN'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6.6))
    && network === 'WPN'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6.6))
    && network === 'WPN'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6.6))
    && network === 'WPN'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6.6))
    && network === 'WPN'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6.6))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,6.6))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'WPN'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '12'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'WPN'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '13'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FromTo(1,12))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("rebuy"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments && (FLAGS("!sat"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidGt(10,250))
    && network === 'WNMX'&& level === '3'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250, color: "green" };if((BidGt(10,500))
    && network === 'WNMX'&& level === '2'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '2'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 500, color: "green" };if((BidGt(10,250))
    && network === 'WNMX'&& level === '4'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250, color: "green" };if((BidGt(10,250))
    && network === 'WNMX'&& level === '5'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250, color: "green" };if((BidGt(10,250))
    && network === 'WNMX'&& level === '6'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250, color: "green" };if((BidGt(10,250))
    && network === 'WNMX'&& level === '7'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250, color: "green" };if((BidGt(10,250))
    && network === 'WNMX'&& level === '8'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250, color: "green" };if((BidGt(10,250))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250, color: "green" };if((BidGt(10,250))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250, color: "green" };if((BidGt(10,250))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments && (FLAGS("sat"))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '3'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '4'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '5'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '7'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '8'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '12'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(15,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(25,1500,"GGMasters Overlay Edition $150"))
    && network === 'GG'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1500, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '10'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'WPN'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Saturday"))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Friday"))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments && (StartDay("Thursday"))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidGtName(66,150000,"First"))
    && network === 'WPN'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "green" };if((BidName(50,"Last Call"))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Call"))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Chance"))
    && network === 'GG'&& level === '13'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Minute"))
    && network === 'GG'&& level === '13'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Minute"))
    && network === 'GG'&& level === '14'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Chance"))
    && network === 'GG'&& level === '14'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Chance"))
    && network === 'GG'&& level === '15'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Minute"))
    && network === 'GG'&& level === '15'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Minute"))
    && network === 'GG'&& level === '12'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Chance"))
    && network === 'GG'&& level === '12'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Chance"))
    && network === 'GG'&& level === '11'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Minute"))
    && network === 'GG'&& level === '11'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Minute"))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50," Last Chance "))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50," Last Chance "))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Minute"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Chance"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Minute"))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Chance"))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((BidName(50,"Last Chance"))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "green" };if((FLAGS("rebuy"))
    && network === 'PS.eu') return { valid: false, guarantee: 1, rules: false };if((FLAGS("od"))
    && network === 'PS.eu') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sng"))
    && network === 'PS.eu') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sat"))
    && network === 'PS.eu') return { valid: false, guarantee: 1, rules: false };if((FLAGS("rebuy"))
    && network === 'IP') return { valid: false, guarantee: 1, rules: false };if((FLAGS("od"))
    && network === 'IP') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sng"))
    && network === 'IP') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sat"))
    && network === 'IP') return { valid: false, guarantee: 1, rules: false };if((FLAGS("rebuy"))
    && network === 'Chico') return { valid: false, guarantee: 1, rules: false };if((FLAGS("od"))
    && network === 'Chico') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sng"))
    && network === 'Chico') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sat"))
    && network === 'Chico') return { valid: false, guarantee: 1, rules: false };if((FLAGS("rebuy"))
    && network === 'PS.es') return { valid: false, guarantee: 1, rules: false };if((FLAGS("od"))
    && network === 'PS.es') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sng"))
    && network === 'PS.es') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sat"))
    && network === 'PS.es') return { valid: false, guarantee: 1, rules: false };if((FLAGS("rebuy"))
    && network === 'Party') return { valid: false, guarantee: 1, rules: false };if((FLAGS("od"))
    && network === 'Party') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sng"))
    && network === 'Party') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sat"))
    && network === 'Party') return { valid: false, guarantee: 1, rules: false };if((FLAGS("rebuy"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((FLAGS("od"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sng"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sat"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((FLAGS("rebuy"))
    && network === '888') return { valid: false, guarantee: 1, rules: false };if((FLAGS("od"))
    && network === '888') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sng"))
    && network === '888') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sat"))
    && network === '888') return { valid: false, guarantee: 1, rules: false };if((FLAGS("rebuy"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((FLAGS("od"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sng"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sat"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((FLAGS("rebuy"))
    && network === 'WPN') return { valid: false, guarantee: 1, rules: false };if((FLAGS("od"))
    && network === 'WPN') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sng"))
    && network === 'WPN') return { valid: false, guarantee: 1, rules: false };if((FLAGS("sat"))
    && network === 'WPN') return { valid: false, guarantee: 1, rules: false };if((Name("[10 bb]"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((Name("Flip & Go"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((Name("All-In or Fold"))
    && network === 'GG'&& level === '16'&& effmu === 'A') return { valid: false, guarantee: 1, rules: false };if((Name("Flipout"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((Name("snap"))
    && network === '888') return { valid: false, guarantee: 1, rules: false };if((BidName(50,"[Final"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((Name("Zodiac MILLION$ [Final Stage]"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((Name("MAIN EVENT - DAY 1"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((Name("trident"))
    && network === 'WNMX'&& isSuperTurbo) return { valid: false, guarantee: 1, rules: false };if((BidName(10.5,"[Stage 1]"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((BidName(66,"[Day2]"))
    && network === 'WPN') return { valid: false, guarantee: 1, rules: false };if((BidName(525,"1 Seat"))
    && network === 'GG'&& level === '16') return { valid: false, guarantee: 1, rules: false };if((BidName(50,"MILLION WEEK KO - DAY 1"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((Name("$15 Mega to GGMasters Overlay Edition"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((Name("The Festival Nottingham Satellite: 1 x £1,500 Package Gtd [Phase Final]"))
    && network === 'Party') return { valid: false, guarantee: 1, rules: false };if((Name("Short:"))
    && network === 'PS.eu'&& isSuperTurbo) return { valid: false, guarantee: 1, rules: false };if((Name("Poker Pro Masters Satellite"))
    && network === 'PS.es') return { valid: false, guarantee: 1, rules: false };if((Name("MB Festival - $300,000 Main Event (day 1)"))
    && network === '888') return { valid: false, guarantee: 1, rules: false };if((Name("MB Festival - $300,000 Main Event (day 2)"))
    && network === '888') return { valid: false, guarantee: 1, rules: false };if((Name("Zodiac Bounty MILLION$, ¥1M GTD [Final Stage]"))
    && network === 'GG'&& isNormal) return { valid: false, guarantee: 1, rules: false };if((BidName(2,"W SERIES GIANT KO - DAY 1"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(125,"W SERIES 3 MILLION EVENT KO - DAY 1"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(5,"W SERIES HIGH FIVE MYSTERY - DAY 1"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(20,"W SERIES COLOSSUS MILLION KO - DAY 1"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(50,"W SERIES MILLION EVENT MYSTERY - DAY 1"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(2," Ligue des Clubs - Division I"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(2,"Ligue des Clubs - Division II"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(50,"Buy-in SISMIX Marrakech"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(2,"DLPoker Winamax Live B"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(2," La Liga EducaPoker"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(22,"Polska Liga Pokera $22"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((BidName(5.5,"Polska Liga Pokera 5.5$"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((BidName(11,"POPS - Road to Pokahnights Liège"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((BidName(2,"Val de Morteau Champ A"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(2,"Angoulême PC Winamax Live A"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(2,"Atlantic PA Winamax Live B"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(20,"SZTOS Rozvadov Final"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((BidName(2.5,"$2.50 Mega to Global MILLION$, $1M"))
    && network === 'GG') return { valid: false, guarantee: 1, rules: false };if((BidName(5,"Poitiers Winamax Live"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidName(11,"PokerNews Monthly MTT"))
    && network === 'PS.eu') return { valid: false, guarantee: 1, rules: false };if((BidName(1.1,"TM Builder"))
    && network === 'Chico') return { valid: false, guarantee: 1, rules: false };if((FromToName(1,11,"Reserved for .FR players only"))
    && network === 'PS.es') return { valid: false, guarantee: 1, rules: false };if((FromToName(1,11,"Minutes"))
    && network === 'PS.es') return { valid: false, guarantee: 1, rules: false };if((BidName(10,"Package SISMIX Marrakech"))
    && network === 'WNMX') return { valid: false, guarantee: 1, rules: false };if((BidGt(11,50000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(7.5,30000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(5.5,20000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(11,100000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(7.5,50000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(5.5,35000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(11,100000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(7.5,30000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(5.5,25000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(4.4,5000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(11,200000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(7.5,50000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(5.5,40000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(4.4,8000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((FromToGt(8.8,11,40000))
    && network === 'GG'&& level === '0'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(4.5,7.5,15000))
    && network === 'GG'&& level === '0'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,80000))
    && network === 'GG'&& level === '0'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(4.5,7.5,20000))
    && network === 'GG'&& level === '0'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(8.8,11,80000))
    && network === 'GG'&& level === '0'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(4.5,7.5,15000))
    && network === 'GG'&& level === '0'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,150000))
    && network === 'GG'&& level === '0'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(4.5,7.5,20000))
    && network === 'GG'&& level === '0'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(27,70000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(22,50000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(16.5,30000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(11,15000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(27,150000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(22,100000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(22,100000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(11,25000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(22,200000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(16.5,100000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(11,40000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(7.5,22500))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 22500, color: "blue" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(30,33,60000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(22,30000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(22,50000))
    && network === '888'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(16.5,30000))
    && network === '888'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(30,33,120000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(22,60000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(16.5,40000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,100000))
    && network === '888'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(16.5,60000))
    && network === '888'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(22,33,60000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,15000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,6000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(5.6,7.6,2000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 2000, color: "blue" };if((FromToGt(25,33,150000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(16,24,60000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(12,15,30000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(8.8,11,15000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(5.6,7.6,4000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(8.8,11,25000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(8.8,11,40000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(4.5,7.5,15000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(30,80000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(20,30000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(15,15000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(30,150000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,30000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,20000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(20,100000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(15,40000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(33,50000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(27,40000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,30000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(11,10000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(27,70000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(22,50000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(16.5,30000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(11,15000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(27,70000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(22,40000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(16.5,25000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(11,12000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((BidGt(33,200000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(27,150000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(22,100000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(30,33,40000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(16.5,5000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(30,33,80000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(22,20000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(16.5,10000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(30,33,60000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(22,30000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(30,33,120000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(22,60000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(16.5,40000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(34,49,150000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(25,33,50000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(16,24,30000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(12,15,10000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(34,49,250000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(25,33,100000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,20000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(25,33,60000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,15000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,6000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(5.6,7.6,2000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 2000, color: "blue" };if((FromToGt(25,33,150000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(16,24,60000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(1050,750000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(12,15,30000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(530,isOffpeak && isGetTournaments ? 0 : 300000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,15000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(5.6,7.6,4000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((BidGt(1050,400000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(530,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(30,50000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(20,25000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(10,7500))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((BidGt(30,100000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(20,40000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(10,12000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((BidGt(30,100000))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(20,50000))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(10,12500))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((BidGt(30,200000))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(20,100000))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(1050,600000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(530,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(40,35000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(30,25000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(40,50000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(30,40000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,80000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(20,30000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(15,15000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(30,150000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,30000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(109,1500000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1500000, color: "blue" };if((BidGt(109,2500000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 2500000, color: "blue" };if((BidGt(44,100000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,160000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(33,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(33,75000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(27,25000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(27,50000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(22,15000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(22,30000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,10000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(33,50000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(27,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,30000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(11,10000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(27,70000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(22,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(16.5,25000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(11,12000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((BidGt(1050,750000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(530,300000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(320,120000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(1050,750000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(530,300000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(1050,1000000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(320,150000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(55,66,250000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(44,100000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(33,40000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,25000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(22,15000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(16.5,10000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(55,66,500000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(44,160000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(33,75000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(27,50000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(22,30000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(33,50000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(27,40000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,30000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(11,10000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(33,100000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(27,70000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(22,40000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(16.5,25000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(11,12000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((BidGt(55,150000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,60000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(30,33,20000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(22,5000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(55,300000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(44,100000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(30,33,40000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(22,10000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(30,33,40000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(22,10000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,5000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(30,33,80000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(22,20000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(16.5,10000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.es'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(500,200000))
    && network === 'WNMX'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(500,150000))
    && network === 'WNMX'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(50,200000))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(30,40000))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(20,12500))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((BidGt(50,400000))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(30,75000))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(20,25000))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,50000))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(20,25000))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,100000))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(20,40000))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(80,120,750000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(80,120,1500000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "blue" };if((FromToGt(67,79,1000000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((FromToGt(50,66,500000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(34,49,150000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(25,33,50000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(16,24,20000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,66,400000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(34,49,150000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(25,33,50000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(16,24,30000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(12,15,10000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,66,750000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(34,49,250000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(25,33,100000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,20000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,125000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(40,30000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(30,20000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,200000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(40,40000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,30000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(40,35000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(30,25000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(40,50000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(30,40000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(215,500000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 48000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 48000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,750000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 350000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 88000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 88000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,100000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,150000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,80000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(109,120000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,100000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,150000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(215,300000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,500000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(160,150000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,250000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,100000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,150000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(250,500000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(250,750000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(250,750000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(250,1000000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(125,200000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(125,300000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(100,150000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(100,200000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(256,375,700000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 700000, color: "blue" };if((FromToGt(256,375,1000000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((FromToGt(151,255,500000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(151,255,750000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,350000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(80,120,125000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(121,150,250000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(121,150,400000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(80,120,100000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(1050,750000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(530,300000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,150000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(1050,1000000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(320,200000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(530,500000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(320,200000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,75000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(530,750000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(320,300000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(200,250000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,350000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(1050,1000000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(320,150000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(320,200000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(320,200000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,100000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(215,50000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(320,300000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,175000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(215,75000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.es'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(250,100000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,175000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(751,1050,1000000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((FromToGt(376,575,300000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(376,575,500000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(256,375,300000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(151,255,150000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(84,120,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(500,150000))
    && network === 'WNMX'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(500,300000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(500,500000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(320,600000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(320,1000000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(215,400000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,500000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(109,80000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(109,120000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,450000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((BidGt(250,600000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(215,200000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,300000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(215,300000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,500000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(160,150000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,250000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,450000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((BidGt(250,600000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(250,500000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(250,750000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(256,375,500000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(256,375,750000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(151,255,400000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,500000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(121,150,150000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,250000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 65000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 65000, color: "blue" };if((FromToGt(52.2,66,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(52.2,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(256,375,700000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 700000, color: "blue" };if((FromToGt(256,375,1000000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((FromToGt(151,255,500000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(151,255,750000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,350000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(80,120,125000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(200,350000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(109,750000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(44,80000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(33,15000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(27,12500))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((BidGt(22,8000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((BidGt(109,1500000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "blue" };if((BidGt(44,150000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(33,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,30000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(22,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,1000000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(44,100000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(33,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,25000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(22,15000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(16.5,10000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,2000000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 2000000, color: "blue" };if((BidGt(44,160000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(33,75000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(27,50000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(22,30000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(55,66,150000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,80000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(33,15000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(27,12500))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((BidGt(22,8000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((FromToGt(55,66,300000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(44,150000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(33,40000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,30000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(22,20000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(55,66,250000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(44,100000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(33,40000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,25000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(22,15000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(16.5,10000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(55,66,500000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(44,160000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(33,75000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(27,50000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(22,30000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,75000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,40000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(30,33,10000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,150000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,80000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(30,33,20000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,150000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,60000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(30,33,20000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(22,5000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(55,300000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(44,100000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(30,33,40000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(50,125000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(30,15000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(20,5000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(50,250000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(30,35000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(20,15000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(50,200000))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(30,40000))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(20,12500))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((BidGt(50,400000))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(30,75000))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(20,25000))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(80,120,500000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(67,79,300000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,66,150000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(34,49,60000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(25,33,12500))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((FromToGt(80,120,1000000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((FromToGt(67,79,600000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(50,66,300000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(34,49,100000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(25,33,30000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(70,100000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,20000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(30,15000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(70,150000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(40,25000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,20000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,125000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(40,30000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(70,200000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(40,40000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,30000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(30,20000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,350000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(82,180000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 180000, color: "blue" };if((BidGt(44,40000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(33,10000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(27,7500))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((BidGt(109,600000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(82,320000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 320000, color: "blue" };if((BidGt(55,175000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(44,80000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(33,25000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(27,15000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(109,500000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(44,80000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(33,15000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(27,12500))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((BidGt(22,8000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((BidGt(109,1000000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(44,150000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(33,40000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,30000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(22,20000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(55,66,100000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,30000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(33,10000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(55,66,160000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(44,75000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(33,25000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(55,66,150000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,80000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(33,15000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(27,12500))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((FromToGt(55,66,300000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(44,150000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(33,40000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,30000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(109,250000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,150000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,40000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,30000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(30,33,5000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(109,500000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(88,250000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(55,100000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,75000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(30,33,10000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,75000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,40000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(30,33,10000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,150000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,80000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(30,33,20000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(125,250000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(100,250000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(125,500000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(100,500000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(50,125000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(30,25000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(50,125000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(30,15000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(20,5000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(50,250000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(30,35000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(20,15000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(80,120,300000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(67,79,175000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(50,66,100000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(34,49,40000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(25,33,10000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(80,120,500000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(67,79,375000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((FromToGt(50,66,175000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(34,49,80000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(25,33,20000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(80,120,400000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(80,120,800000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "blue" };if((FromToGt(67,79,600000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(50,66,300000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(34,49,100000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(25,33,30000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(70,80000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,15000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(70,120000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(40,20000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,100000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,20000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(30,15000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(70,150000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(40,25000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,20000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(320,400000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(320,600000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(215,200000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,300000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(320,600000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(320,1000000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(215,400000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,500000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(215,200000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,300000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,300000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,400000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,150000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(215,250000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,450000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((BidGt(250,600000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(215,200000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,300000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,100000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(160,150000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,300000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,400000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(250,450000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((BidGt(250,600000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,200000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(256,375,500000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(256,375,750000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(151,255,400000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,500000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(121,150,150000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,250000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(80,120,120000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 65000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 65000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 6000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((BidGt(109,300000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,350000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(82,180000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 180000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 7500))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((BidGt(109,600000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(109,150000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,250000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(109,350000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 180000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 180000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(109,600000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 320000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 320000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(109,150000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,250000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,250000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(30,33,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(109,500000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(30,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,1000000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(125,250000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(100,200000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,1500000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "blue" };if((BidGt(125,400000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(100,300000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(125,350000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(100,250000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(125,500000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(100,500000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(121,150,300000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(80,120,150000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(28,33,isOffpeak && isGetTournaments ? 0 : 6000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(121,150,500000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(80,120,250000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(320,200000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(215,75000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(28,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(320,300000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(80,120,300000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(80,120,500000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 375000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(320,300000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(215,150000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 12000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((BidGt(320,375000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(215,250000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 28000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 28000, color: "blue" };if((BidGt(320,300000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 12000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((BidGt(320,400000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,200000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(320,600000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(215,300000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(320,200000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(320,300000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(320,300000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(320,375000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(215,200000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(320,300000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(320,375000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(215,200000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(215,200000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,300000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(320,200000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(320,300000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,175000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(215,75000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,300000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,200000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,100000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(160,40000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(320,375000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(250,300000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,60000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,300000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,200000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,100000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(320,375000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(250,300000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,300000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,75000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,400000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,250000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(160,100000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,100000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,175000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(250,200000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(250,300000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(250,200000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(250,300000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,400000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(376,575,300000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(376,575,500000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(256,375,300000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(151,255,150000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,50000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(84,120,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,250000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(121,150,75000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,250000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(121,150,75000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(500,300000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(500,500000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(109,100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(109,150000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,200000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 6000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((BidGt(109,100000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,150000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,150000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,250000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,100000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,150000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(109,150000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,250000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(250,750000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(125,200000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(100,150000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,1000000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(125,300000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(100,200000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(250,1000000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(125,250000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(100,200000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,1500000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "blue" };if((BidGt(125,400000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(100,300000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(121,150,250000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(80,120,100000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,150,400000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(80,120,150000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(121,150,300000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(80,120,150000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(121,150,500000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(80,120,250000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(30,80000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(20,30000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(15,15000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(30,150000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(20,50000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,30000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(20,50000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,20000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(20,100000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(15,40000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(40,35000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(30,25000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(50,125000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(40,50000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(30,40000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,80000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(20,30000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(15,15000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(30,150000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(20,50000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,30000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(500,200000))
    && network === 'IP'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(500,150000))
    && network === 'IP'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(70,125000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(40,30000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(30,20000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,200000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(40,40000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,30000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(40,35000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(30,25000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(40,50000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(30,40000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(200,250000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,350000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(500,150000))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(500,300000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(500,500000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(200,250000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,350000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(100,150000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(70,100000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,20000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(30,15000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(100,250000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(70,150000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(40,25000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,20000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,125000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(40,30000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(70,200000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(40,40000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,30000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(30,20000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(100,125000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(70,80000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,15000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(100,200000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(70,120000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(50,25000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(40,20000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(100,150000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(70,100000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,20000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(30,15000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(100,250000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(70,150000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(40,25000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,20000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(500,300000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(500,500000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(1050,600000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(530,200000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(320,90000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 90000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(530,400000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(320,200000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(1050,600000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(530,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 90000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 90000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 90000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 90000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(530,400000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(1050,750000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(530,500000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(320,200000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,75000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(530,375000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(320,180000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 180000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(530,750000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(320,300000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(215,75000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(215,150000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(751,1050,450000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((FromToGt(576,750,250000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(376,575,150000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(256,375,60000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(751,1050,650000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 650000, color: "blue" };if((FromToGt(576,750,350000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(376,575,200000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(256,375,100000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(751,1050,700000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 700000, color: "blue" };if((FromToGt(576,750,450000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((FromToGt(376,575,250000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(256,375,125000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(751,1050,900000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 900000, color: "blue" };if((FromToGt(576,750,550000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 550000, color: "blue" };if((FromToGt(376,575,300000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(256,375,150000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(751,1050,750000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(576,750,400000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(376,575,250000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(256,375,125000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(576,750,550000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 550000, color: "blue" };if((FromToGt(376,575,300000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(256,375,150000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === '888'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 90000))
    && network === '888'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 90000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(250,100000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(215,50000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.es'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.es'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(250,300000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(500,isOffpeak && isGetTournaments ? 0 : 190000))
    && network === 'WNMX'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 190000, color: "blue" };if((BidGt(500,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'WNMX'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(500,125000))
    && network === 'WNMX'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(500,200000))
    && network === 'WNMX'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(500,200000))
    && network === 'WNMX'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(200,75000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(200,125000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(250,125000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(200,75000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(250,200000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(200,125000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(250,175000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(200,100000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(250,225000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 225000, color: "blue" };if((BidGt(200,150000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(500,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'IP'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(500,isOffpeak && isGetTournaments ? 0 : 190000))
    && network === 'IP'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 190000, color: "blue" };if((BidGt(500,125000))
    && network === 'IP'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(500,200000))
    && network === 'IP'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(500,200000))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(320,1250000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1250000, color: "blue" };if((BidGt(320,800000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 800000, color: "blue" };if((BidGt(215,500000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 48000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 48000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,750000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 350000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 88000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 88000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(109,300000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(82,320000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 320000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(67,79,500000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(50,66,250000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(34,49,100000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(25,33,25000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(16,24,12500))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((FromToGt(80,120,1500000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "blue" };if((FromToGt(50,66,500000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(67,79,1000000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((FromToGt(34,49,150000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(25,33,50000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(16,24,20000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(50,75000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(30,10000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(80,120,150000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(67,79,300000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,66,150000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(34,49,60000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(25,33,12500))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((FromToGt(67,79,500000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(50,66,250000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(34,49,100000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(25,33,25000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(16,24,12500))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((FromToGt(4.5,7.5,7500))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(256,375,200000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(151,255,75000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(121,150,30000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(84,120,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,300000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(151,255,150000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,40000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,300000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(151,255,150000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,40000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,125000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,600000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(151,255,300000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,125000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,600000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(151,255,300000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(530,250000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(320,120000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === '888'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(1050,400000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(530,150000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(320,90000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 90000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(1050,600000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(530,200000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(320,120000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(1050,600000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(530,250000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(320,150000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(1050,1000000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(530,375000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(320,200000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(320,400000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,250000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 28000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 28000, color: "blue" };if((FromToGt(751,1050,600000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(576,750,350000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(376,575,200000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(256,375,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(751,1050,800000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "blue" };if((FromToGt(576,750,500000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(376,575,300000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(256,375,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(376,575,250000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(256,375,125000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(376,575,300000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(256,375,175000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(256,375,200000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(151,255,100000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(256,375,200000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(151,255,100000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(121,150,30000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,50000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(256,375,300000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(151,255,150000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,40000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,250000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(121,150,75000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(256,375,300000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(151,255,150000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,40000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,250000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(121,150,75000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,125000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(56,66,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(256,375,600000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(151,255,300000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(56,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,125000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(56,66,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(256,375,600000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(151,255,300000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(56,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(80,120,300000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(80,120,650000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 650000, color: "blue" };if((FromToGt(80,120,300000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(67,79,250000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(50,66,120000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(34,49,50000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(25,33,10000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(80,120,650000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 650000, color: "blue" };if((FromToGt(67,79,500000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(50,66,250000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(34,49,80000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(25,33,28000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 28000, color: "blue" };if((FromToGt(80,120,400000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(67,79,300000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,66,150000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(34,49,50000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(25,33,10000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(80,120,800000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "blue" };if((FromToGt(67,79,600000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(50,66,300000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(34,49,80000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(25,33,28000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 28000, color: "blue" };if((FromToGt(80,120,600000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(67,79,450000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((FromToGt(50,66,200000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(34,49,80000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(25,33,20000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(17,24,10000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(80,120,1200000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1200000, color: "blue" };if((FromToGt(67,79,800000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "blue" };if((FromToGt(50,66,400000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(34,49,120000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(25,33,40000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(17,24,15000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,66,300000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(34,49,120000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(25,33,40000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(17,24,25000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,66,600000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(34,49,200000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(25,33,80000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(17,24,30000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(50,66,300000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(34,49,120000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(25,33,40000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(17,24,25000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,66,600000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(34,49,200000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(25,33,80000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(17,24,30000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(50,66,400000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(34,49,150000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(25,33,50000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(16,24,30000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(12,15,10000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,66,750000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(34,49,250000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(25,33,100000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,20000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,66,400000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(34,49,150000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(25,33,50000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(16,24,30000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(12,15,10000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,66,750000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(34,49,250000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(25,33,100000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,20000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(25,33,60000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,15000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,6000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(7.7,8.4,4000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(5.6,7.6,2000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 2000, color: "blue" };if((FromToGt(25,33,150000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(16,24,60000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(12,15,30000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(8.8,11,15000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(7.7,8.4,8000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((FromToGt(5.6,7.6,4000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(25,33,60000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,15000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,6000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(7.7,8.4,4000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(5.6,7.6,2000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 2000, color: "blue" };if((FromToGt(25,33,150000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(16,24,60000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(12,15,30000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(8.8,11,15000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(7.7,8.4,8000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((FromToGt(5.6,7.6,4000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(16,24,100000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(12,15,50000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(8.8,11,25000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(7.7,8.4,15000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(4.5,7.5,7500))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((FromToGt(16,24,200000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(12,15,100000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(8.8,11,40000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(7.7,8.4,30000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(4.5,7.5,15000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(16,24,100000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(12,15,50000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(8.8,11,25000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(7.7,8.4,15000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(4.5,7.5,7500))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((FromToGt(16,24,200000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(12,15,100000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(8.8,11,40000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(7.7,8.4,30000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(4.5,7.5,15000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(16,24,125000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(12,15,75000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(8.8,11,30000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(7.7,8.4,20000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(4.5,7.5,7500))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((FromToGt(16,24,250000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(12,15,125000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(8.8,11,50000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(7.7,8.4,35000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(4.5,7.5,15000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Chico'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 90000))
    && network === 'Chico'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 90000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(320,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(320,150000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(320,200000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(320,200000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,100000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(215,50000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 0))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 0))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((BidGt(320,300000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,175000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(215,75000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,200000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,100000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(215,50000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(320,300000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,175000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(215,75000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,300000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,200000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,100000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(160,40000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(320,375000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(250,300000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,60000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,300000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,200000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,100000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(320,375000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(250,300000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 0))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,300000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,75000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 0))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,400000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,250000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(160,100000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 0))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,300000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,400000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,250000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,450000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((BidGt(215,200000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(160,100000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,600000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(215,300000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,150000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,450000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((BidGt(215,200000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,600000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(215,300000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(215,300000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,150000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,75000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,500000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(160,250000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,100000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(215,300000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,150000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,75000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,500000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(160,250000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,100000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,100000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,150000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(109,100000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,150000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(109,150000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,250000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,150000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,250000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,250000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(30,33,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(109,500000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(30,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,250000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,150000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,40000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,30000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(30,33,5000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(109,500000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(88,250000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(55,100000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,75000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(30,33,10000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,75000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,40000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(30,33,10000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,150000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,80000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(30,33,20000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,75000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,40000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(30,33,10000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,150000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,80000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(30,33,20000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,150000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,60000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(30,33,20000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(22,5000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(55,300000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(44,100000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(30,33,40000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,150000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,60000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(30,33,20000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(22,5000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(55,300000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(44,100000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(30,33,40000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(30,33,40000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(16.5,5000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(30,33,80000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(22,20000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(16.5,10000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(30,33,40000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(16.5,5000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(30,33,80000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(22,20000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(16.5,10000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(30,33,60000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(22,30000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(30,33,120000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(22,60000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(16.5,40000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(30,33,60000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(22,30000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(30,33,120000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(22,60000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(16.5,40000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,50000))
    && network === 'Chico'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(16.5,30000))
    && network === 'Chico'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(22,100000))
    && network === 'Chico'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(16.5,60000))
    && network === 'Chico'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(751,1050,450000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((FromToGt(576,750,275000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 275000, color: "blue" };if((FromToGt(376,575,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(256,375,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(751,1050,650000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 650000, color: "blue" };if((FromToGt(576,750,350000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(376,575,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(256,375,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,200000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(151,255,75000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(84,120,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,150000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,250000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(215,750000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 48000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 48000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,1000000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 350000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 88000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 88000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(215,500000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(215,750000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(215,200000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(215,300000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(215,200000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(162,40000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 12000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((BidGt(215,300000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(162,70000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 28000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 28000, color: "blue" };if((BidGt(530,500000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(320,250000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(215,100000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(530,1000000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(320,300000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,200000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(1050,1000000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(530,400000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(320,200000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,80000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(1050,1330000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1330000, color: "blue" };if((BidGt(530,530000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 530000, color: "blue" };if((BidGt(320,260000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 260000, color: "blue" };if((BidGt(215,120000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(162,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(80,120,100000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(151,255,500000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(151,255,750000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(121,150,350000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(80,120,125000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(151,255,500000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(121,150,150000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(151,255,750000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(121,150,250000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(80,120,120000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 65000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 65000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,125000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(80,120,50000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(151,255,300000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,100000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "blue" };if((FromToGt(52.5,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,150000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,75000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(80,120,20000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,500000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(151,255,250000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(121,150,125000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(80,120,40000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(376,575,400000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(256,375,200000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(84,120,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(376,575,750000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(256,375,300000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(84,120,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(751,1050,900000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 900000, color: "blue" };if((FromToGt(576,750,600000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(376,575,300000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(256,375,150000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(751,1050,1200000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1200000, color: "blue" };if((FromToGt(576,750,700000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 700000, color: "blue" };if((FromToGt(376,575,400000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(256,375,200000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(151,255,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,100000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,150000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,80000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,120000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(215,200000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,300000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,200000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(215,300000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(530,500000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(320,200000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,75000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(530,1000000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(320,300000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(1050,800000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 800000, color: "blue" };if((BidGt(530,335000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 335000, color: "blue" };if((BidGt(320,160000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(215,80000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(1050,1330000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1330000, color: "blue" };if((BidGt(530,500000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(320,240000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 240000, color: "blue" };if((BidGt(215,105000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 105000, color: "blue" };if((BidGt(125,200000))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(100,150000))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(125,300000))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(100,200000))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(250,500000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,750000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(250,450000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 450000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(250,600000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(250,300000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,400000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(250,200000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(250,300000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(250,100000))
    && network === 'PS.es'&& level === '13'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '13'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '13'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,175000))
    && network === 'PS.es'&& level === '13'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '13'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '13'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(250,100000))
    && network === 'PS.es'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(250,150000))
    && network === 'PS.es'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(125,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.es'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(151,255,250000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(121,150,150000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(80,120,50000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(56,66,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(151,255,400000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(121,150,250000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(80,120,100000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(56,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,75000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(80,120,50000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(256,375,500000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(151,255,300000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(121,150,125000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(80,120,100000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "blue" };if((FromToGt(256,375,200000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(151,255,150000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(121,150,40000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(256,375,400000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(151,255,250000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(121,150,75000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(109,100000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,150000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(215,300000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,150000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,75000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,500000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(160,250000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,100000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(215,200000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,300000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,300000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,75000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,400000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,250000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(160,100000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,200000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,100000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(160,40000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,300000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,60000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,200000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,100000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(215,50000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(320,300000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,175000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(215,75000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,160000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(250,100000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(215,50000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(320,200000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,125000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(215,80000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,100000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(109,150000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(215,300000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,150000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,75000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,500000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(160,250000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,100000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(215,200000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(215,300000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(250,300000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,75000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,400000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(215,250000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(160,100000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(250,200000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(215,100000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(160,40000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,0))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,300000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(215,150000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(160,60000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,200000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,100000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(215,50000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(109,0))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((BidGt(88,0))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((BidGt(320,300000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(250,175000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(215,75000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(320,160000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(250,100000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(215,50000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(320,200000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(250,125000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(215,80000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(160,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(200,250000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,350000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(250,200000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(200,125000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(250,250000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,150000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(500,300000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(200,75000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(500,500000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(200,125000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(500,250000))
    && network === 'WNMX'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(500,350000))
    && network === 'WNMX'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(200,250000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,350000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((BidGt(500,300000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(500,500000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(500,250000))
    && network === 'IP'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(500,350000))
    && network === 'IP'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,162,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(121,162,40000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(121,162,75000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(121,162,40000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(121,162,75000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(121,162,40000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(121,162,75000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(121,162,120000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,162,200000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(121,162,120000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,162,200000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(121,162,120000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,162,200000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(121,162,160000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(121,162,250000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(121,162,160000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(121,162,250000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(121,162,160000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(121,162,250000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(121,162,200000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,162,350000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(121,162,200000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,162,350000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(121,162,200000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,162,350000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(109,200000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(77,88,100000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,300000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(77,88,175000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,350000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 180000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 180000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(109,600000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(77,88,isOffpeak && isGetTournaments ? 0 : 320000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 320000, color: "blue" };if((FromToGt(55,66,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(55,66,150000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,80000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(33,15000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(27,12500))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((FromToGt(55,66,300000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(44,150000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(33,40000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,30000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(55,66,250000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(44,100000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(33,40000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,25000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(22,15000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(16.5,10000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(55,66,500000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(44,160000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(33,75000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(27,50000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(22,30000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(33,50000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(27,40000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,30000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(11,10000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(33,100000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(27,70000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(22,40000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(16.5,25000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(11,12000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((FromToGt(67,79,300000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,66,150000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(34,49,50000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(25,33,10000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(67,79,600000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(50,66,300000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(34,49,80000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(25,33,28000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 28000, color: "blue" };if((FromToGt(50,66,300000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(34,49,120000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(25,33,40000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(17,24,25000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,66,600000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(34,49,200000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(25,33,80000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(17,24,30000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(50,66,400000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(34,49,150000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(25,33,50000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(16,24,30000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(12,15,10000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,66,750000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(34,49,250000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(25,33,100000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,20000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(25,33,100000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,15000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,6000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(7.7,8.4,4000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(5.6,7.6,2000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 2000, color: "blue" };if((FromToGt(25,33,200000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(16,24,60000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(12,15,30000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(8.8,11,15000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(7.7,8.4,8000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((FromToGt(5.6,7.6,4000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(16,24,100000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(12,15,50000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(8.8,11,35000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(7.7,8.4,20000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(5.6,7.6,7500))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((FromToGt(16,24,200000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(12,15,100000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(8.8,11,50000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(7.7,8.4,35000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(5.6,7.6,15000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(16,24,125000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(12,15,75000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(8.8,11,30000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(7.7,8.4,20000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(4.5,7.5,7500))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((FromToGt(16,24,250000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(12,15,125000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(8.8,11,50000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(7.7,8.4,35000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(4.5,7.5,15000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(109,250000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(82,125000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 6000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((BidGt(109,400000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(82,200000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,500000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(82,180000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 180000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 7500))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((BidGt(109,1000000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(82,320000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 320000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(44,80000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(33,15000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(27,12500))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((BidGt(22,8000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((BidGt(44,150000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(33,40000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,30000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(22,20000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(44,100000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(33,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(27,25000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(22,15000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(16.5,10000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(44,160000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "blue" };if((BidGt(33,75000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(27,50000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(22,30000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(33,50000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(27,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,30000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(11,10000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(27,70000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(22,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(16.5,25000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(11,12000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((BidGt(22,50000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(16.5,30000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(11,15000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(27,150000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(22,100000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(22,100000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(11,25000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(22,200000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(16.5,100000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(11,40000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(7.5,22500))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 22500, color: "blue" };if((BidGt(11,100000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(7.5,30000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(11,200000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(7.5,50000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(5.5,25000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(4.4,5000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(5.5,40000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(4.4,8000))
    && network === 'PS.eu'&& level === '0'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((FromToGt(121,150,300000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(80,120,250000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(121,150,500000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(80,120,400000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(67,79,175000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(67,79,375000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(67,79,300000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,66,150000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(34,49,60000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(25,33,12500))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((FromToGt(67,79,600000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((FromToGt(50,66,300000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(34,49,100000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(25,33,30000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(67,79,500000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(50,66,250000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(34,49,100000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(25,33,25000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(16,24,12500))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((FromToGt(80,120,1500000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "blue" };if((FromToGt(67,79,1000000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((FromToGt(50,66,500000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(34,49,150000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(25,33,50000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(16,24,20000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,66,400000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((FromToGt(34,49,150000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(25,33,50000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(16,24,30000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(12,15,10000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,66,750000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(34,49,250000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(25,33,100000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,20000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(25,33,100000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(16,24,40000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(12,15,15000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,6000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(5.6,7.6,2000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 2000, color: "blue" };if((FromToGt(25,33,200000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(16,24,60000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(12,15,30000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(8.8,11,15000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(5.6,7.6,4000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(8.8,11,25000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(4.5,7.5,7500))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "blue" };if((FromToGt(8.8,11,40000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(4.5,7.5,15000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,80000))
    && network === 'GG'&& level === '0'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(4.5,7.5,15000))
    && network === 'GG'&& level === '0'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(8.8,11,150000))
    && network === 'GG'&& level === '0'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(4.5,7.5,20000))
    && network === 'GG'&& level === '0'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,200000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(88,100000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,300000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(88,150000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,250000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(30,33,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(109,500000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(30,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,75000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,40000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(30,33,10000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,150000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,80000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(30,33,20000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,150000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,60000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(30,33,20000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(22,5000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(55,300000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(44,100000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(30,33,40000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(30,33,40000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(16.5,5000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(30,33,80000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(22,20000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(16.5,10000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(22,30000))
    && network === '888'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === '888'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(22,60000))
    && network === '888'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(16.5,40000))
    && network === '888'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,50000))
    && network === '888'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(16.5,30000))
    && network === '888'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(22,100000))
    && network === '888'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(16.5,60000))
    && network === '888'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(109,200000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(88,100000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(109,300000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(88,150000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(109,250000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(30,33,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(109,500000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(88,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(30,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,75000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(44,40000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(30,33,10000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(55,150000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,80000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(30,33,20000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(55,150000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(44,60000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(30,33,20000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(22,5000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(55,300000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(44,100000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(30,33,40000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(30,33,40000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,10000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(16.5,5000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(30,33,80000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(22,20000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(16.5,10000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(22,30000))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(22,60000))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(16.5,40000))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(22,50000))
    && network === 'Chico'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(16.5,30000))
    && network === 'Chico'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(22,100000))
    && network === 'Chico'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(16.5,60000))
    && network === 'Chico'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(250,1000000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1000000, color: "blue" };if((BidGt(125,250000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(100,200000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(250,1500000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "blue" };if((BidGt(125,400000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(100,300000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(100,250000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(100,500000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(50,125000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(30,15000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(20,5000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((BidGt(50,250000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(30,35000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(20,15000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(50,200000))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(30,40000))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(20,12500))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((BidGt(50,400000))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(30,75000))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(20,25000))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,50000))
    && network === 'PS.es'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(20,25000))
    && network === 'PS.es'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,100000))
    && network === 'PS.es'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(20,40000))
    && network === 'PS.es'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,100000))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(20,50000))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(10,12500))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "blue" };if((BidGt(30,200000))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(20,100000))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,100000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,20000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(30,15000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(70,150000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(40,25000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,20000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,125000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(40,30000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(30,20000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,200000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(40,40000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,30000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(40,35000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(30,25000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(40,50000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(30,40000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,80000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(20,30000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(15,15000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(30,150000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,30000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(20,100000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(100,150000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(70,100000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,20000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(30,15000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(100,250000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(70,150000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(40,25000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(30,20000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,125000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(40,30000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(30,20000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(70,200000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(40,40000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,30000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(40,35000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((BidGt(30,25000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((BidGt(40,50000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(30,40000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(30,80000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(20,30000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(15,15000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(30,150000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(20,50000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,30000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(20,50000))
    && network === 'IP'&& level === '1'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,20000))
    && network === 'IP'&& level === '1'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(20,100000))
    && network === 'IP'&& level === '1'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(15,40000))
    && network === 'IP'&& level === '1'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(100,125,15000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(100,125,80000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,100000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,150000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,100000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,150000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,200000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,200000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,200000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(100,125,150000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,250000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(100,125,150000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,250000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(100,125,150000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,250000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(80,120,150000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,100000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(20,50000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(15,20000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,200000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(20,100000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(15,40000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,20000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,30000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,40000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,60000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(25,40000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,60000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(25,15000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(25,20000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,20000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,30000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,20000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,30000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,15000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(25,20000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,15000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(25,20000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(150,30000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(150,50000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(150,40000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(150,75000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(150,50000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(150,75000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'WNMX'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(150,30000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(150,50000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(150,30000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(150,50000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,50000))
    && network === 'WNMX'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,80000))
    && network === 'WNMX'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(250,300,125000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(250,300,200000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(250,300,125000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(250,300,200000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'WNMX'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'WNMX'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,75000))
    && network === 'WNMX'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,100000))
    && network === 'WNMX'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'WNMX'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(250,300,175000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(200,100000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(150,40000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(250,300,225000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 225000, color: "blue" };if((BidGt(200,150000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(250,300,250000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,150000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(250,300,312000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 312000, color: "blue" };if((BidGt(200,200000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(250,300,250000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,150000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(250,300,312000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 312000, color: "blue" };if((BidGt(200,200000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(250,300,250000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,150000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,40000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(250,300,312000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 312000, color: "blue" };if((BidGt(200,200000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,80000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(250,300,375000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(200,200000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,500000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(200,300000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(150,150000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(250,300,400000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(200,300000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(150,100000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,600000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(200,400000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(150,150000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(250,300,375000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(200,200000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,500000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(200,300000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(150,150000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(200,250000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(150,150000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,75000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(150,200000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(150,150000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(100,75000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(150,200000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(100,125000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(150,150000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,75000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(150,200000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(100,125,80000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,80000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,100000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,150000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '15'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'IP'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '15'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '14'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'IP'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '14'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'IP'&& level === '14'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(250,300,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '14'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,75000))
    && network === 'IP'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '14'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,100000))
    && network === 'IP'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '14'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(250,300,50000))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "blue" };if((FromToGt(250,300,80000))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(150,200,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,125000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(200,75000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(150,30000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(100,125,0))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((FromToGt(250,300,200000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(200,125000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(150,50000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(250,300,125000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(200,75000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(150,30000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(100,125,0))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((FromToGt(250,300,200000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(200,125000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(150,50000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(250,300,125000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(200,75000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(150,30000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(250,300,200000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(200,125000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(150,50000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(250,300,175000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(150,40000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(250,300,225000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 225000, color: "blue" };if((BidGt(200,150000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(200,100000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(250,300,200000))
    && network === 'IP'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(200,125000))
    && network === 'IP'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(150,50000))
    && network === 'IP'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '12'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(250,300,250000))
    && network === 'IP'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,150000))
    && network === 'IP'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'IP'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '12'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(250,300,175000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((BidGt(200,100000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(150,40000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(250,300,225000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 225000, color: "blue" };if((BidGt(200,150000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(250,300,250000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,150000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(250,300,312000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 312000, color: "blue" };if((BidGt(200,200000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(250,300,250000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,150000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(250,300,312000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 312000, color: "blue" };if((BidGt(200,200000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(250,300,250000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((BidGt(200,150000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(150,75000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(250,300,312000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 312000, color: "blue" };if((BidGt(200,200000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(250,300,375000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(200,200000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,500000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(200,300000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(150,150000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(250,300,400000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(200,300000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(150,100000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,600000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "blue" };if((BidGt(200,400000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "blue" };if((BidGt(150,150000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(250,300,375000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 375000, color: "blue" };if((BidGt(200,200000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(150,100000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(250,300,500000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((BidGt(200,300000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((BidGt(150,150000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(150,150000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,75000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(150,200000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(150,150000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((BidGt(100,75000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(150,200000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(100,125000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(150,150000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,75000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(150,200000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(100,125,80000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,80000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,80000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,100000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,150000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,100000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,150000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,100000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(100,125,150000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,200000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "blue" };if((FromToGt(100,125,125000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(100,125,200000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidName(32.1,"Short"))
    && network === 'GG'&& level === '16'&& effmu === 'C') return { valid: true, rules: true, guarantee: 1, color: "blue" };if((FromToGt(7.7,8.55,30000))
    && network === 'GG'&& level === '0'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(7.7,8.55,50000))
    && network === 'GG'&& level === '0'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(7.7,8.55,30000))
    && network === 'GG'&& level === '0'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(7.7,8.55,50000))
    && network === 'GG'&& level === '0'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(7.7,8.55,30000))
    && network === 'GG'&& level === '0'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(7.7,8.55,50000))
    && network === 'GG'&& level === '0'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(7.7,8.55,4000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(7.7,8.55,8000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((FromToGt(7.7,8.55,15000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(7.7,8.55,30000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(7.7,8.55,15000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(7.7,8.55,30000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(7.7,8.55,4000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(7.7,8.55,8000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((FromToGt(7.7,8.55,4000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "blue" };if((FromToGt(7.7,8.55,8000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((FromToGt(80,120,100000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 6000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(80,120,150000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 12000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 28000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 28000, color: "blue" };if((FromToGt(67,79,125000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(67,79,200000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 28000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 28000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,150,350000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(80,120,125000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(80,120,100000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 6000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(80,120,150000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 12000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((FromToGt(80,120,100000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 6000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 6000, color: "blue" };if((FromToGt(80,120,150000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(25,33,isOffpeak && isGetTournaments ? 0 : 12000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(80,120,125000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(121,150,350000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 350000, color: "blue" };if((FromToGt(80,120,125000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(80,120,125000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(256,375,500000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,150000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(256,375,750000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(151,255,300000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(80,120,125000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,80000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "blue" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(80,120,125000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(256,375,500000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,150000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(256,375,750000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "blue" };if((FromToGt(151,255,300000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(151,255,200000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(121,150,150000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(151,255,300000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(80,120,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(67,79,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,66,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(50,55,300000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,55,500000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(50,55,150000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(50,55,300000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,55,250000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(50,55,500000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(50,55,250000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "blue" };if((FromToGt(50,55,500000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "blue" };if((FromToGt(50,55,100000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,55,175000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(50,55,150000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(50,55,300000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,55,150000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "blue" };if((FromToGt(50,55,300000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 175000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 175000, color: "blue" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((FromTo(22,55))
    && network === 'PS.eu'&& level === '16'&& effmu === 'C'&& isNormal&& isKo && (StartDay("Monday"))
    && network === 'PS.eu'&& level === '16'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((FromTo(22,55))
    && network === 'PS.eu'&& level === '16'&& effmu === 'C'&& isNormal&& isKo && (StartDay("Friday"))
    && network === 'PS.eu'&& level === '16'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((FromTo(22,55))
    && network === 'GG'&& level === '16'&& effmu === 'C'&& isNormal && (StartDay("Monday"))
    && network === 'GG'&& level === '16'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((FromTo(22,55))
    && network === 'GG'&& level === '16'&& effmu === 'C'&& isNormal && (StartDay("Friday"))
    && network === 'GG'&& level === '16'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "blue" };if((BidGt(25,50000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(25,100000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(25,100000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(25,200000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(25,100000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(25,200000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(25,30000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,40000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,50000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(25,100000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(25,50000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "blue" };if((BidGt(25,100000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(25,15000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(25,30000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,30000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,30000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,8000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((BidGt(25,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,15000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(25,30000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,15000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(25,30000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,8000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((BidGt(25,20000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,8000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "blue" };if((BidGt(25,20000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,75000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,60,125000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,60000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,60,75000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,60,125000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(50,60,75000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,60,125000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(50,60,25000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,60000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(25,40000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,60000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(25,100000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(25,200000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(25,100000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(25,200000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((BidGt(25,20000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,30000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,40000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,60000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(25,40000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,60000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(25,15000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(25,20000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,20000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,30000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,20000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,30000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "blue" };if((BidGt(25,15000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(25,20000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((BidGt(25,15000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(25,20000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,60000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,60,20000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,25000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,25000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,25000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((BidGt(25,40000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((BidGt(25,60000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((BidGt(25,100000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "blue" };if((BidGt(25,200000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "blue" };if((FromToGt(50,60,75000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,60,125000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,60000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,60,75000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,60,125000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(50,60,75000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "blue" };if((FromToGt(50,60,125000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "blue" };if((FromToGt(50,60,25000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,60000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,60000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "blue" };if((FromToGt(50,60,20000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,25000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,25000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,25000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,40000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "blue" };if((FromToGt(50,60,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "blue" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(11,25000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(4.4,5000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(3.3,3000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 3000, color: "red" };if((BidGt(16.5,80000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(11,40000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(7.5,25000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,40000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10.75,13,50000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(8.4,10.5,35000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(20,75000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(15,30000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(10,15000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(20,120000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(15,60000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(10,30000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(7.5,15000))
    && network === 'WNMX'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(15,50000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(10,30000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(7.5,15000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(15,75000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(10,50000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(7.5,25000))
    && network === 'WNMX'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,100000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(22,60000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(16.5,35000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(4.4,3000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 3000, color: "red" };if((BidGt(27,130000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(22,80000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(11,25000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(11,25000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(4.4,5000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(3.3,3000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 3000, color: "red" };if((BidGt(16.5,80000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(11,40000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 7500))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isSuperTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 7500))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isSuperTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((FromToGt(21,33,100000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(21,33,200000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(14,20,60000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10.75,13,50000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(8.4,10.5,35000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(20,60000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5,5000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(20,80000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(10,25000))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(5,7500))
    && network === 'PS.es'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(10,25000))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(5,7500))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(10,40000))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(5,10000))
    && network === 'PS.es'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(200,300,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(200,300,30000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(30,100000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,20000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,150000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(20,80000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(15,40000))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(20,75000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(15,30000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(20,120000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(15,60000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(10,30000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(7.5,15000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(10,15000))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(33,50000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,100000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,70000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,40000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,30000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(22,40000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,20000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(16.5,25000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(11,10000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(11,12000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "red" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,75000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(22,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(5.5,4000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "red" };if((BidGt(33,150000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(27,100000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(22,60000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(16.5,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(27,100000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(22,60000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(16.5,35000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(215,100000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(215,150000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(5.5,5000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(4.4,3000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 3000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,130000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 16000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 16000, color: "red" };if((BidGt(22,80000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(11,25000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(4.4,5000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(20,40000))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(10,15000))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(20,60000))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(20,80000))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(10,25000))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,14,15000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(21,33,100000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,30000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(21,33,100000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,200000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(14,20,60000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,75000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(20,30000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(15,10000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(30,100000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,20000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,150000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(20,80000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(15,40000))
    && network === 'WNMX'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(215,1000000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 1000000, color: "red" };if((BidGt(109,300000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((BidGt(82,215000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 215000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(215,1500000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "red" };if((BidGt(109,500000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((BidGt(82,330000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 330000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(109,300000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((BidGt(82,215000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 215000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(109,500000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((BidGt(82,375000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((BidGt(215,100000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(215,150000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(215,150000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(109,60000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(215,200000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(109,80000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(200,300,150000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(200,300,150000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(215,600000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((BidGt(215,800000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "red" };if((BidGt(109,250000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(109,325000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 325000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(215,1000000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 1000000, color: "red" };if((BidGt(215,1500000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "red" };if((BidGt(109,300000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((BidGt(109,500000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((BidGt(82,215000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 215000, color: "red" };if((BidGt(82,330000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 330000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(200,300,800000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(121,150,400000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((BidGt(44,120000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,75000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(44,200000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,75000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(22,50000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,75000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(22,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(5.5,4000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "red" };if((BidGt(33,150000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(27,100000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(22,60000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(16.5,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(55,66,150000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(44,80000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,15000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(27,12500))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((BidGt(22,8000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(55,66,300000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((BidGt(44,150000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(33,40000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(20,30000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(10,15000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(20,50000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(20,40000))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(10,15000))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(20,60000))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(34,49,120000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,50000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(34,49,200000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(21,33,100000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,30000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(40,125000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,75000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,200000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(30,125000))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,75000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(20,30000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(15,10000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(30,120000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,25000))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(44,150000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(44,120000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,75000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(44,200000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,75000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(22,50000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,40000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(30,75000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(20,30000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(20,30000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(10,15000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(20,50000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(50,66,200000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,120000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,50000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,15000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10.75,13,5000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(50,66,400000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(34,49,150000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,62000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 62000, color: "red" };if((BidGt(15,25000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10.75,13,10000))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(34,49,120000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,50000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(34,49,200000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(50,150000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,100000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,50000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,250000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(40,150000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,100000))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,75000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(30,125000))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(215,400000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((BidGt(215,600000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((BidGt(109,150000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(109,225000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 225000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "red" };if((BidGt(215,600000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((BidGt(215,800000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "red" };if((BidGt(109,250000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(109,325000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 325000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(200,300,800000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(121,150,400000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(55,150000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(215,150000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(109,60000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(215,200000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(109,80000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(50,66,150000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(215,250000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(109,100000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(50,66,250000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(215,400000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((BidGt(109,150000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 109000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 109000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 62000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 62000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(215,250000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(109,100000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(215,400000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((BidGt(109,150000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 109000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 109000, color: "red" };if((BidGt(215,400000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((BidGt(109,150000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(215,600000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((BidGt(109,225000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 225000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(200,300,150000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(200,300,250000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(200,300,250000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(121,150,125000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(200,300,250000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(121,150,125000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(109,300000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((BidGt(82,215000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 215000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(109,500000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((BidGt(82,375000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(50,66,150000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,66,250000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(20,75000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(15,30000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(20,120000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(15,60000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(7.5,15000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(15,50000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(7.5,15000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(15,75000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(7.5,25000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(30,100000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,50000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,20000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,150000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(20,80000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(15,40000))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(20,75000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(15,30000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(20,120000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(15,60000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(7.5,15000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(33,50000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,100000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,70000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,40000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,30000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(22,40000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(16.5,25000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(11,10000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(11,12000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal&& !isKo) return { valid: true, rules: true, guarantee: 12000, color: "red" };if((BidGt(30,75000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(20,30000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(15,10000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(30,100000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,50000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,20000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,150000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(20,80000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(15,40000))
    && network === 'IP'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,125000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,75000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,200000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(30,125000))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,75000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(20,30000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(15,10000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(30,120000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(20,50000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,25000))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(50,150000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,100000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,50000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,250000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(40,150000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,100000))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,75000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(30,125000))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 0))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 1, color: "red" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 4000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "red" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 7500))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(215,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(200,300,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(200,300,40000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(200,300,60000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(200,300,75000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(121,150,40000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(200,300,125000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(121,150,60000))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(200,300,100000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(100,150,40000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(100,150,60000))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(121,150,75000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(75,120,60000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(200,300,250000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(121,150,125000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(75,120,75000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(75,120,125000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(75,120,75000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(75,120,125000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,100000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.es'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.es'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(200,300,45000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((FromToGt(121,150,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(200,300,800000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "red" };if((FromToGt(121,150,400000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(121,150,75000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(75,120,60000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(121,150,125000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 62000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 62000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(11,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(44,120000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,75000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(27,50000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(22,35000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,15000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(11,5000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,62000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 62000, color: "red" };if((BidGt(22,50000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,25000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(11,10000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(27,50000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(22,35000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(27,50000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(22,35000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(5.5,7500))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(4.4,5000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(7.5,20000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5.5,10000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(4.4,7500))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(3.5,5000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(7.5,20000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5.5,10000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(4.4,7500))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(3.3,5000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(5.5,15000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(4.4,10000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(3.3,5000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(5.5,20000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(4.4,15000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(3.3,6000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 6000, color: "red" };if((BidGt(20,0))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 1, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(30,100000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,50000))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(20,50000))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,100000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(75,120,300000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(75,120,300000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 4000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 8000))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(5.26,8.25,7500))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((FromToGt(14,20,40000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(5.26,8.25,7500))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((FromToGt(5.26,8.25,8000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(5.26,8.25,8000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(5.26,8.25,15000))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(5.26,8.25,15000))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(5.26,8.25,20000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(2.5,5.25,5000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(5.26,8.25,25000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(2.5,5.25,10000))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(5.26,8.25,20000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(2.5,5.25,5000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(5.26,8.25,25000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(2.5,5.25,10000))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(8.4,10.5,50000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(5.26,8.25,35000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(2.5,5.25,15000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,100000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(5.26,8.25,50000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(2.5,5.25,25000))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(30,120000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,25000))
    && network === 'WNMX'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(30,120000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(20,50000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,25000))
    && network === 'IP'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(34,49,120000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,50000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(34,49,120000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,50000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(8.4,10.5,50000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(5.26,8.25,35000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(2.5,5.25,15000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,100000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(5.26,8.25,50000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(2.5,5.25,25000))
    && network === 'WPN'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(11,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(200,300,100000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(100,150,40000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(200,300,150000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(100,150,60000))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(200,300,250000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(121,150,125000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(75,120,60000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(200,300,250000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(121,150,125000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(75,120,60000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(75,120,75000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(75,120,125000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(75,120,75000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(75,120,125000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(200,300,800000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "red" };if((FromToGt(121,150,400000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(200,300,800000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "red" };if((FromToGt(121,150,400000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(200,300,1000000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 1000000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,100000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(200,300,1500000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 1500000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WPN'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,100000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(75,120,300000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(75,120,300000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(50,66,150000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 4000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "red" };if((FromToGt(50,66,250000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 8000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(50,66,150000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 4000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "red" };if((FromToGt(50,66,250000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 8000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 62000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 62000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(34,49,120000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,50000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(10.75,13,5000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(34,49,150000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,62000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 62000, color: "red" };if((FromToGt(10.75,13,10000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(5.26,8.25,7500))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((FromToGt(34,49,200000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(5.26,8.25,7500))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((FromToGt(34,49,200000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(5.26,8.25,8000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(21,33,100000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,30000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(5.26,8.25,8000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(21,33,100000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,30000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,100000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,200000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(14,20,60000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(5.26,8.25,15000))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(21,33,100000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,200000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(14,20,60000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(5.26,8.25,15000))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(5.26,8.25,20000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(2.5,5.25,5000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(10.75,13,50000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(8.4,10.5,35000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(5.26,8.25,25000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(2.5,5.25,10000))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(5.26,8.25,20000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(2.5,5.25,5000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(10.75,13,50000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(8.4,10.5,35000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(5.26,8.25,25000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(2.5,5.25,10000))
    && network === 'WPN'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(8.4,10.5,50000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(5.26,8.25,35000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(2.5,5.25,15000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,100000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(5.26,8.25,50000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(2.5,5.25,25000))
    && network === 'WPN'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,50000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(5.26,8.25,35000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(2.5,5.25,15000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,100000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(5.26,8.25,50000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(2.5,5.25,25000))
    && network === 'WPN'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(109,300000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((BidGt(82,215000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 215000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(109,500000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((BidGt(82,375000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 375000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(109,300000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((BidGt(82,215000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 215000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(109,500000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((BidGt(82,330000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 330000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(215,600000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((BidGt(109,250000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(215,800000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "red" };if((BidGt(109,325000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 325000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(109,150000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,225000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 225000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 160000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 160000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,100000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,150000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 109000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 109000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(215,200000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(109,75000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(215,250000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(109,100000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(215,130000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(109,50000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(215,200000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(109,70000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(82,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(67,79,150000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,66,100000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(67,79,250000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,66,200000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,100000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(121,150,400000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(121,150,125000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(75,120,75000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(75,120,125000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(200,300,150000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(121,150,50000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(75,120,60000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(200,300,250000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(121,150,80000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(200,300,100000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(100,150,50000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(200,300,150000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(100,150,75000))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(20,0))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 1, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.es'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.es'&& level === '13'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.es'&& level === '13'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(100,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '13'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.es'&& level === '13'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(100,50000))
    && network === 'PS.es'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.es'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(100,135000))
    && network === 'PS.es'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 135000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.es'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,66,150000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 4000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "red" };if((FromToGt(50,66,250000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 8000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((FromToGt(75,120,400000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,74,200000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(121,150,500000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 500000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,100000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(121,150,750000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 750000, color: "red" };if((FromToGt(75,120,250000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,74,125000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WPN'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((FromToGt(200,300,600000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 600000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,74,50000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(200,300,800000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 800000, color: "red" };if((FromToGt(121,150,400000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(75,120,150000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,74,75000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(75,120,75000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(121,150,300000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 300000, color: "red" };if((FromToGt(75,120,125000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(50,74,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(200,300,250000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(121,150,125000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((FromToGt(75,120,60000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(200,300,400000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(121,150,200000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(75,120,100000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(51,74,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '12'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'IP'&& level === '12'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(70,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 62000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 62000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(34,49,120000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,50000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(5.26,8.25,7500))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((FromToGt(34,49,200000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(5.26,8.25,8000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(21,33,100000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,30000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,100000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,200000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(14,20,60000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(5.26,8.25,15000))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(5.26,8.25,20000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(2.5,5.25,5000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(10.75,13,50000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(8.4,10.5,35000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(5.26,8.25,25000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(2.5,5.25,10000))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(8.4,10.5,50000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(5.26,8.25,35000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(2.5,5.25,15000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,100000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(5.26,8.25,50000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(2.5,5.25,25000))
    && network === 'WPN'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,50000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(5.26,8.25,35000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(2.5,5.25,15000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,100000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(5.26,8.25,50000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(2.5,5.25,25000))
    && network === 'WPN'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(67,79,150000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,66,100000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(67,79,250000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,66,200000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WPN'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(11,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 62000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 62000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(11,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(44,120000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,75000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(27,50000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(22,35000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(44,200000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,75000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(22,50000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,40000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(33,100000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,75000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(22,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(5.5,4000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "red" };if((BidGt(33,150000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(27,100000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(22,60000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(16.5,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(27,100000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(22,60000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(16.5,35000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(11,20000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(4.4,3000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 3000, color: "red" };if((BidGt(27,130000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(22,80000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(16.5,50000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(11,25000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(4.4,5000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(11,25000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(4.4,5000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(3.3,3000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 3000, color: "red" };if((BidGt(11,40000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(7.5,20000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5.5,10000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(4.4,7500))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(3.3,5000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(7.5,25000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(5.5,15000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(4.4,10000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(3.3,5000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(7.5,40000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(5.5,20000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(4.4,15000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(3.3,6000))
    && network === 'PS.eu'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 6000, color: "red" };if((FromToGt(50,66,150000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(50,66,250000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(34,49,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(21,33,isOffpeak && isGetTournaments ? 0 : 62000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 62000, color: "red" };if((BidGt(15,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10.75,13,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(34,49,120000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((FromToGt(21,33,50000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(5.26,8.25,7500))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((FromToGt(34,49,200000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,75000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(14,20,20000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10.75,13,15000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,12500))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 12500, color: "red" };if((FromToGt(5.26,8.25,8000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((FromToGt(21,33,100000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,30000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,100000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(14,20,40000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10.75,13,25000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(8.4,10.5,20000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(5.26,8.25,10000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(21,33,200000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(14,20,60000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(5.26,8.25,15000))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10.75,13,35000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(8.4,10.5,25000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(5.26,8.25,20000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(2.5,5.25,5000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(10.75,13,50000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(8.4,10.5,35000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(5.26,8.25,25000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(2.5,5.25,10000))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(8.4,10.5,50000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(5.26,8.25,35000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(2.5,5.25,15000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(8.4,10.5,100000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(5.26,8.25,50000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(2.5,5.25,25000))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.es'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(20,30000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(10,15000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(20,50000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(20,40000))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(10,15000))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(20,60000))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(20,50000))
    && network === 'PS.es'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(10,20000))
    && network === 'PS.es'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(20,80000))
    && network === 'PS.es'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(10,25000))
    && network === 'PS.es'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(10,25000))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(5,7500))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(10,40000))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(5,10000))
    && network === 'PS.es'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 75000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,75000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(20,30000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(15,10000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(30,120000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,25000))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(30,100000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,50000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,20000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,150000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(20,80000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(15,40000))
    && network === 'WNMX'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(20,75000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(15,30000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(10,15000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(20,120000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(15,60000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(10,30000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(7.5,15000))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(15,50000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(10,30000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(7.5,15000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(15,75000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(10,50000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(7.5,25000))
    && network === 'WNMX'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'IP'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 250000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'IP'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,75000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(30,125000))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,75000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(20,30000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(15,10000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(30,120000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(20,50000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,25000))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(30,100000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(20,50000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,20000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(30,150000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(20,80000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(15,40000))
    && network === 'IP'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(20,75000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(15,30000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(7.5,7500))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(20,120000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(15,60000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(7.5,15000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(15,50000))
    && network === 'IP'&& level === '1'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(10,30000))
    && network === 'IP'&& level === '1'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(7.5,15000))
    && network === 'IP'&& level === '1'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(15,75000))
    && network === 'IP'&& level === '1'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((BidGt(10,50000))
    && network === 'IP'&& level === '1'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(7.5,25000))
    && network === 'IP'&& level === '1'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(50,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 125000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 125000, color: "red" };if((BidGt(30,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'WNMX'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((FromToGt(10,12.5,15000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((FromToGt(10,12.5,30000))
    && network === 'IP'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(10,12.5,30000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(10,12.5,50000))
    && network === 'IP'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(15,50000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(10,12.5,30000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(7.5,15000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(15,75000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 75000, color: "red" };if((FromToGt(10,12.5,50000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(7.5,25000))
    && network === 'IP'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,12.5,15000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,12.5,30000))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(10,12.5,15000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,12.5,30000))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(14,20,15000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(14,20,25000))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(14,20,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'PS.eu'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 4000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 4000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 7500))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 200000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(50,55,250000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,55,250000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,55,150000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,55,150000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,55,200000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(50,55,400000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((FromToGt(50,55,150000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((FromToGt(50,55,250000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 250000, color: "red" };if((FromToGt(50,55,200000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 200000, color: "red" };if((FromToGt(50,55,400000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 400000, color: "red" };if((BidGt(11,25000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === '888'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,40000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(7.5,20000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5.5,10000))
    && network === '888'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(7.5,25000))
    && network === '888'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(5.5,15000))
    && network === '888'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,40000))
    && network === '888'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(5.5,20000))
    && network === '888'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,25000))
    && network === '888'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(5.5,15000))
    && network === '888'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,40000))
    && network === '888'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(5.5,20000))
    && network === '888'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,20000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(11,25000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === '888'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === '888'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,25000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === '888'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,40000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(7.5,20000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5.5,10000))
    && network === '888'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(11,25000))
    && network === '888'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === '888'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === '888'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,40000))
    && network === '888'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(7.5,20000))
    && network === '888'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5.5,10000))
    && network === '888'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(16.5,20000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(16.5,40000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === '888'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(11,20000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(11,25000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === '888'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === '888'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,20000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(11,25000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === '888'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === '888'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(16.5,20000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10,11,15000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === '888'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(16.5,40000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10,11,20000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === '888'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(16.5,20000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(16.5,40000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === '888'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(16.5,20000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(16.5,40000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === '888'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,35000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,15000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,11,5000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,50000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,25000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,11,10000))
    && network === '888'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,35000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,20000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10,11,15000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === '888'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(22,50000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,40000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10,11,20000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === '888'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,35000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,20000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10,11,15000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === '888'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(22,50000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,40000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10,11,20000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === '888'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === '888'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === '888'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '15'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '15'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === '888'&& level === '15'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === '888'&& level === '15'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(11,20000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(11,25000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,20000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(11,25000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(16.5,40000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,35000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,15000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,11,5000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,50000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,25000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,11,10000))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,35000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10,11,15000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(22,50000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10,11,20000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,35000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10,11,15000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(22,50000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10,11,20000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(109,60000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(109,80000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '15'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '15'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Party'&& level === '15'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Party'&& level === '15'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(11,25000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,40000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(7.5,20000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5.5,10000))
    && network === 'Chico'&& level === '1'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(7.5,25000))
    && network === 'Chico'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(5.5,15000))
    && network === 'Chico'&& level === '1'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,40000))
    && network === 'Chico'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(5.5,20000))
    && network === 'Chico'&& level === '1'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,25000))
    && network === 'Chico'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(5.5,15000))
    && network === 'Chico'&& level === '1'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,40000))
    && network === 'Chico'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(5.5,20000))
    && network === 'Chico'&& level === '1'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,20000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(11,25000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'Chico'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,25000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,40000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(7.5,20000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5.5,10000))
    && network === 'Chico'&& level === '2'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(11,25000))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,40000))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(7.5,20000))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(5.5,10000))
    && network === 'Chico'&& level === '2'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(11,20000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(11,25000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(11,20000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(5.5,5000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(11,25000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(7.5,15000))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(5.5,7500))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10,11,15000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(16.5,40000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10,11,20000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(11,15000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,8000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 8000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(11,20000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,35000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,15000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,11,5000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,50000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,25000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,11,10000))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,35000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10,11,15000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(22,50000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10,11,20000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,35000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,20000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(10,11,15000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(7.5,7500))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 7500, color: "red" };if((BidGt(22,50000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,40000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(10,11,20000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(7.5,10000))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(10,11,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(16.5,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 120000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 120000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 150000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 150000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(22,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '10'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(40,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'Chico'&& level === '10'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 100000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 100000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(50,55,isOffpeak && isGetTournaments ? 0 : 130000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 130000, color: "red" };if((BidGt(44,isOffpeak && isGetTournaments ? 0 : 80000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(33,isOffpeak && isGetTournaments ? 0 : 45000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 45000, color: "red" };if((BidGt(27,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '10'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((FromToGt(27,33,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 60000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 15000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 15000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 70000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 70000, color: "red" };if((FromToGt(44,55,isOffpeak && isGetTournaments ? 0 : 25000))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 25000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '15'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '15'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '15'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '15'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 10000))
    && network === 'Chico'&& level === '15'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 10000, color: "red" };if((BidGt(109,isOffpeak && isGetTournaments ? 0 : 20000))
    && network === 'Chico'&& level === '15'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 20000, color: "red" };if((BidGt(25,60000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(25,80000))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(25,40000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(25,60000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(25,60000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(25,80000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(25,60000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(25,80000))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 80000, color: "red" };if((BidGt(25,35000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(25,50000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(25,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(25,60000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(25,40000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(25,60000))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 60000, color: "red" };if((BidGt(25,35000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(25,50000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(25,35000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(25,50000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(25,35000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(25,50000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 35000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 35000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 50000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 50000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 40000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 40000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 5000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& isKo) return { valid: true, rules: true, guarantee: 5000, color: "red" };if((BidGt(25,isOffpeak && isGetTournaments ? 0 : 30000))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo&& !isKo) return { valid: true, rules: true, guarantee: 30000, color: "red" };if((Name("big"))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& !isKo&& isGetTournaments && (FromTo(1,5.5))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((Name("Bounty Builder"))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments && (FromTo(1,5.5))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidGtName(25,30000,"GGMasters"))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 30000, color: "brown" };if((BidGt(8.88,10000))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "brown" };if((BidGt(8.88,10000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "brown" };if((BidGt(8.88,8000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 8000, color: "brown" };if((BidGt(8.88,5000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 5000, color: "brown" };if((BidGt(8.88,8000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 8000, color: "brown" };if((BidGt(8.88,5000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'B'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 5000, color: "brown" };if((BidGt(8.88,0))
    && network === 'PS.eu'&& level === '8'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidName(22,"Supersonic"))
    && network === 'PS.eu'&& level === '10'&& effmu === 'A'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidName(22,"Supersonic"))
    && network === 'PS.eu'&& level === '11'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidName(22,"Supersonic"))
    && network === 'PS.eu'&& level === '12'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidName(22,"Supersonic"))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidName(215,"Sunday Supersonic"))
    && network === 'PS.eu'&& level === '15'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidGtName(150,400000,"GGMasters"))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 400000, color: "brown" };if((BidGtName(150,250000,"GGMasters"))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 250000, color: "brown" };if((BidGtName(150,175000,"GGMasters"))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 175000, color: "brown" };if((BidGtName(150,250000,"GGMasters"))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 250000, color: "brown" };if((BidGtName(150,150000,"GGMasters"))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "brown" };if((BidGtName(150,175000,"GGMasters"))
    && network === 'GG'&& level === '8'&& effmu === 'B'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 175000, color: "brown" };if((BidGtName(525,1000000,"Bounty Hunters HR"))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000000, color: "brown" };if((BidGtName(525,1000000,"Bounty Hunters H"))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000000, color: "brown" };if((BidGtName(66,25000,"BIG10"))
    && network === 'WPN'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 25000, color: "brown" };if((BidGtName(66,25000,"BIG10"))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 25000, color: "brown" };if((BidGtName(66,25000,"BIG10"))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 25000, color: "brown" };if((BidGtName(1000,400000,"Super Tuesday"))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 400000, color: "brown" };if((BidGtName(1000,300000,"Thursday Thrill"))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 300000, color: "brown" };if((BidName(215,"Supersonic"))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& isGetTournaments && (StartDay("Sunday"))
    && network === 'PS.eu'&& level === '15'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidName(22,"Mini Supersonic"))
    && network === 'PS.eu'&& level === '13'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((FromTo(1,8.8))
    && network === 'PS.eu'&& level === '13'&& isSuperTurbo&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((FromTo(1,8.8))
    && network === 'PS.eu'&& level === '12'&& isSuperTurbo&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((FromTo(1,8.8))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isSuperTurbo&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((FromTo(1,8.8))
    && network === 'PS.eu'&& level === '11'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((FromTo(1,8.8))
    && network === 'PS.eu'&& level === '10'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidGtName(1050,1000000,"GGMasters High Rollers"))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000000, color: "brown" };if((BidGtName(1050,1000000,"GGMasters High Rollers"))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000000, color: "brown" };if((BidName(200,"Sunday Eliminator"))
    && network === 'PS.es'&& level === '15'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidGtName(66,25000,"BIG10"))
    && network === 'WPN'&& level === '11'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 25000, color: "brown" };if((BidGtName(11,10000,"Mini Battle Royale"))
    && network === 'PS.eu'&& level === '1'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "brown" };if((BidGtName(11,10000,"Mini Saturday KO"))
    && network === 'PS.eu'&& level === '1'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "brown" };if((BidGtName(150,150000,"GGMasters"))
    && network === 'GG'&& level === '9'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "brown" };if((BidGtName(109,20000,"Sunday Major"))
    && network === 'Chico'&& level === '13'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 20000, color: "brown" };if((BidGtName(109,20000,"Sunday Major"))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 20000, color: "brown" };if((BidGtName(109,30000,"Sunday Major"))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 30000, color: "brown" };if((BidGtName(109,50000,"Sunday Major"))
    && network === 'Chico'&& level === '10'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "brown" };if((BidGtName(109,50000,"Sunday Major"))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "brown" };if((BidGtName(109,75000,"Sunday Major"))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 75000, color: "brown" };if((BidGtName(109,200000,"Sunday Major"))
    && network === 'Chico'&& level === '8'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 200000, color: "brown" };if((BidGtName(109,75000,"Sunday Major"))
    && network === 'Chico'&& level === '8'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 75000, color: "brown" };if((BidGtName(109,200000,"Sunday Major"))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 200000, color: "brown" };if((BidGtName(109,250000,"Sunday Major"))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250000, color: "brown" };if((BidGtName(109,250000,"Sunday Major"))
    && network === 'Chico'&& level === '6'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250000, color: "brown" };if((BidGt(109,0))
    && network === 'Chico'&& level === '11'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidGtName(525,1000000,"Bounty Hunters"))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000000, color: "brown" };if((BidGt(8.88,5000))
    && network === 'PS.eu'&& level === '8'&& effmu === 'C'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 5000, color: "brown" };if((BidGt(8.88,0))
    && network === 'PS.eu'&& level === '9'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidName(82,"Bounty Builder"))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidGtName(109,10000,"Sunday Wrap-Up"))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "brown" };if((BidGtName(109,10000,"Monday 6-Max"))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "brown" };if((FromToName(1,44,"hot"))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidName(22,"Supersonic"))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((FromToName(1,82,"hot"))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidName(215,"Thursday Thrill"))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1, color: "brown" };if((BidGtName(150,175000,"GGMasters"))
    && network === 'GG'&& level === '8'&& effmu === 'C'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 175000, color: "brown" };if((BidGtName(1050,1000000,"GGMasters High Rollers"))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 1000000, color: "brown" };if((BidGtName(109,200000,"Sunday Major"))
    && network === 'Chico'&& level === '8'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 200000, color: "brown" };if((BidGtName(109,75000,"Sunday Major"))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 75000, color: "brown" };if((BidGtName(109,30000,"Sunday Major"))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 30000, color: "brown" };if((BidGtName(109,30000,"Sunday Major"))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 30000, color: "brown" };if((BidGtName(109,50000,"Sunday Major"))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 50000, color: "brown" };if((BidGtName(109,30000,"Sunday Major"))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 30000, color: "brown" };if((BidGtName(109,20000,"Sunday Major"))
    && network === 'Chico'&& level === '14'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 20000, color: "brown" };if((BidGt(8.88,8000))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 8000, color: "brown" };if((BidGt(8.88,10000))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isSuperTurbo&& isGetTournaments) return { valid: true, rules: true, guarantee: 10000, color: "brown" };if((BidGtName(150,250000,"GGMasters"))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 250000, color: "brown" };if((BidGtName(150,400000,"GGMasters"))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 400000, color: "brown" };if((BidGtName(109,250000,"Sunday Major"))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isNormal&& isGetTournaments) return { valid: true, rules: true, guarantee: 250000, color: "brown" };if((BidGtName(108,100000,"GGMasters Bonus Bounty"))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 100000, color: "brown" };if((BidGtName(108,100000,"GGMasters Bonus Bounty"))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 100000, color: "brown" };if((BidGtName(320,500000,"GGMasters"))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 500000, color: "brown" };if((BidGtName(320,500000,"GGMasters"))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 500000, color: "brown" };if((BidGtName(55,15000,"Fifty Stack"))
    && network === 'GG'&& level === '10'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 15000, color: "brown" };if((BidGtName(320,500000,"GGMasters Bounty"))
    && network === 'GG'&& level === '8'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 500000, color: "brown" };if((BidGtName(320,400000,"GGMasters Bounty"))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 400000, color: "brown" };if((BidGtName(320,300000,"GGMasters Bounty"))
    && network === 'GG'&& level === '10'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 300000, color: "brown" };if((BidGtName(320,400000,"GGMasters Bounty"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 400000, color: "brown" };if((BidGtName(320,400000,"GGMasters Bounty"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 400000, color: "brown" };if((BidGtName(320,300000,"GGMasters Bounty"))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 300000, color: "brown" };if((BidGtName(320,300000,"GGMasters Bounty"))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 300000, color: "brown" };if((BidGtName(150,150000,"GGMasters"))
    && network === 'GG'&& level === '10'&& effmu === 'B'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "brown" };if((BidGtName(150,150000,"GGMasters"))
    && network === 'GG'&& level === '10'&& effmu === 'C'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "brown" };if((BidGtName(150,150000,"GGMasters"))
    && network === 'GG'&& level === '9'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 150000, color: "brown" };if((BidGtName(25,25000,"GGMasters"))
    && network === 'GG'&& level === '5'&& isTurbo&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 25000, color: "brown" };if((BidGtName(150,400000,"GGMasters"))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isNormal&& !isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 400000, color: "brown" };if((BidGtName(54,500000,"Hunters"))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal&& isKo&& isGetTournaments) return { valid: true, rules: true, guarantee: 500000, color: "brown" };if((FromTo(1,3.3))
    && network === 'PS.eu'&& level === '0'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,2.2))
    && network === 'GG'&& level === '1'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,4.4))
    && network === 'GG'&& level === '1'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,7.5))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,3.3))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,16.5))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal && (FLAGS("deepstack"))
    && network === 'PS.eu'&& level === '2'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5.5))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,2.2))
    && network === 'PS.eu'&& level === '2'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,11))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5.25))
    && network === 'GG'&& level === '2'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5.5))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,2.2))
    && network === 'GG'&& level === '2'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,20))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,10))
    && network === 'WNMX'&& level === '2'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,10))
    && network === 'WNMX'&& level === '2'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,10))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,20))
    && network === 'IP'&& level === '2'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,4.4))
    && network === 'PS.eu'&& level === '3'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,3.3))
    && network === 'PS.eu'&& level === '3'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'Party'&& level === '3'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,3.3))
    && network === 'Party'&& level === '3'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === '888'&& level === '3'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === '888'&& level === '3'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === '888'&& level === '3'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,3.3))
    && network === '888'&& level === '3'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,15))
    && network === 'GG'&& level === '3'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'GG'&& level === '3'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal && (FLAGS("deepstack"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal && (FLAGS("deepstack"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,4.4))
    && network === 'PS.eu'&& level === '4'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Party'&& level === '4'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'Party'&& level === '4'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === '888'&& level === '4'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'GG'&& level === '4'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,15))
    && network === 'GG'&& level === '4'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '5'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'PS.eu'&& level === '5'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === '888'&& level === '4'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === '888'&& level === '5'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === '888'&& level === '5'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === '888'&& level === '5'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '5'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5))
    && network === 'PS.es'&& level === '5'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10.5))
    && network === 'GG'&& level === '5'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.25))
    && network === 'GG'&& level === '5'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'IP'&& level === '5'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '5'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '6'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === '888'&& level === '6'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === '888'&& level === '6'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27.5))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,13))
    && network === 'GG'&& level === '6'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10.5))
    && network === 'GG'&& level === '6'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '7'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '7'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '7'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,13))
    && network === 'GG'&& level === '7'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'GG'&& level === '7'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,4.4))
    && network === 'PS.eu'&& level === '0'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '8'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '8'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '8'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '8'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '9'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'Party'&& level === '9'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === '888'&& level === '9'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === '888'&& level === '9'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'GG'&& level === '9'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'GG'&& level === '9'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,40))
    && network === 'IP'&& level === '9'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'IP'&& level === '9'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,40))
    && network === 'WNMX'&& level === '9'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,15))
    && network === 'WNMX'&& level === '10'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,40))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '10'&& effmu === 'B'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,15))
    && network === 'IP'&& level === '10'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,40))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'IP'&& level === '10'&& effmu === 'B'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'PS.eu'&& level === '11'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'PS.eu'&& level === '11'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,66))
    && network === 'Party'&& level === '11'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'Party'&& level === '11'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === '888'&& level === '11'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === '888'&& level === '11'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'PS.es'&& level === '11'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '11'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,66))
    && network === 'GG'&& level === '11'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'GG'&& level === '11'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '11'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,15))
    && network === 'IP'&& level === '11'&& effmu === 'B'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '11'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,15))
    && network === 'WNMX'&& level === '11'&& effmu === 'B'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'PS.eu'&& level === '12'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Party'&& level === '12'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '12'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '12'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,80))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'GG'&& level === '12'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,66))
    && network === 'GG'&& level === '12'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === 'PS.eu'&& level === '13'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'PS.eu'&& level === '13'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === 'Party'&& level === '13'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,77))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === '888'&& level === '13'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,110))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,88))
    && network === 'GG'&& level === '13'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,80))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'GG'&& level === '13'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'WNMX'&& level === '13'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'IP'&& level === '13'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'PS.eu'&& level === '14'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'PS.eu'&& level === '14'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'Party'&& level === '14'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Party'&& level === '14'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,160))
    && network === '888'&& level === '14'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === '888'&& level === '14'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === '888'&& level === '14'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === '888'&& level === '14'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'PS.es'&& level === '14'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '14'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,110))
    && network === 'GG'&& level === '14'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,100))
    && network === 'WNMX'&& level === '14'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WNMX'&& level === '14'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'WNMX'&& level === '14'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '14'&& effmu === 'B'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,100))
    && network === 'IP'&& level === '14'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'IP'&& level === '14'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'IP'&& level === '14'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '14'&& effmu === 'B'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === 'PS.eu'&& level === '15'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'PS.eu'&& level === '15'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === 'Party'&& level === '15'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'Party'&& level === '15'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,160))
    && network === '888'&& level === '15'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === '888'&& level === '15'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,125))
    && network === 'PS.es'&& level === '15'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'PS.es'&& level === '15'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,110))
    && network === 'GG'&& level === '15'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,110))
    && network === 'GG'&& level === '15'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,100))
    && network === 'WNMX'&& level === '15'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WNMX'&& level === '15'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,100))
    && network === 'IP'&& level === '15'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'IP'&& level === '15'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,110))
    && network === 'WPN'&& level === '15'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,110))
    && network === 'WPN'&& level === '15'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'IP'&& level === '16'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'IP'&& level === '16'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'Chico'&& level === '16'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'Chico'&& level === '16'&& effmu === 'A'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'PS.eu'&& level === '10'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '10'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Party'&& level === '13'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,66))
    && network === 'Party'&& level === '12'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Party'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,110))
    && network === 'GG'&& level === '14'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,88))
    && network === 'GG'&& level === '14'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'GG'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'GG'&& level === '10'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'GG'&& level === '10'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === '888'&& level === '12'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === '888'&& level === '10'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '13'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'PS.es'&& level === '12'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '10'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '10'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '13'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'WNMX'&& level === '12'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WNMX'&& level === '12'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '12'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'WNMX'&& level === '11'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WNMX'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'WNMX'&& level === '10'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '13'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'IP'&& level === '12'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'IP'&& level === '12'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '12'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'IP'&& level === '11'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'IP'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'IP'&& level === '10'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'WPN'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'PS.eu'&& level === '8'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '8'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal && (FLAGS("deepstack"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'PS.eu'&& level === '6'&& isNormal && (FLAGS("deepstack"))
    && network === 'PS.eu'&& level === '6'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'PS.eu'&& level === '5'&& isNormal && (FLAGS("deepstack"))
    && network === 'PS.eu'&& level === '5'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '3'&& isNormal && (FLAGS("deepstack"))
    && network === 'PS.eu'&& level === '3'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,2.2))
    && network === 'PS.eu'&& level === '1'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'PS.eu'&& level === '1'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Party'&& level === '8'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Party'&& level === '7'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'Party'&& level === '4'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === '888'&& level === '8'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === '888'&& level === '7'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === '888'&& level === '4'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,12))
    && network === '888'&& level === '2'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,3.3))
    && network === '888'&& level === '2'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === '888'&& level === '1'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,3.3))
    && network === '888'&& level === '1'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '9'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '9'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '8'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '7'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '6'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '6'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5))
    && network === 'PS.es'&& level === '4'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '4'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '3'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5))
    && network === 'PS.es'&& level === '3'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5))
    && network === 'PS.es'&& level === '2'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,2))
    && network === 'PS.es'&& level === '2'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'GG'&& level === '8'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'GG'&& level === '8'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'GG'&& level === '7'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'GG'&& level === '5'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.25))
    && network === 'GG'&& level === '4'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.25))
    && network === 'GG'&& level === '3'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(1,10))
    && network === 'WNMX'&& level === '9'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 10, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '8'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'WNMX'&& level === '7'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '7'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '7'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'WNMX'&& level === '6'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '6'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '6'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '5'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '3'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '1'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5))
    && network === 'WNMX'&& level === '1'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'IP'&& level === '9'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'IP'&& level === '8'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'IP'&& level === '7'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '7'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'IP'&& level === '7'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'IP'&& level === '6'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '6'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'IP'&& level === '6'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '5'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'IP'&& level === '3'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'WPN'&& level === '8'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.25))
    && network === 'WPN'&& level === '4'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Chico'&& level === '8'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,110))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,80))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,88))
    && network === 'WPN'&& level === '14'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WPN'&& level === '14'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,80))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,66))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WPN'&& level === '13'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'WPN'&& level === '13'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,66))
    && network === 'WPN'&& level === '12'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'WPN'&& level === '12'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'WPN'&& level === '12'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'WPN'&& level === '11'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'WPN'&& level === '10'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WPN'&& level === '10'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'WPN'&& level === '9'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WPN'&& level === '9'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WPN'&& level === '8'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,13))
    && network === 'WPN'&& level === '8'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27.5))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,13))
    && network === 'WPN'&& level === '7'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10.5))
    && network === 'WPN'&& level === '7'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'WPN'&& level === '6'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10.5))
    && network === 'WPN'&& level === '6'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.25))
    && network === 'WPN'&& level === '6'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'WPN'&& level === '5'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'WPN'&& level === '5'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.25))
    && network === 'WPN'&& level === '5'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'WPN'&& level === '4'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'WPN'&& level === '4'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.25))
    && network === 'WPN'&& level === '3'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,2.2))
    && network === 'WPN'&& level === '3'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5.5))
    && network === 'WPN'&& level === '2'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,2.2))
    && network === 'WPN'&& level === '2'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5.5))
    && network === 'WPN'&& level === '1'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,2.2))
    && network === 'WPN'&& level === '1'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,100))
    && network === 'PS.es'&& level === '13'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'PS.es'&& level === '13'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,160))
    && network === 'Chico'&& level === '15'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'Chico'&& level === '15'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,160))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'Chico'&& level === '14'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Chico'&& level === '14'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === 'Chico'&& level === '13'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'Chico'&& level === '13'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'Chico'&& level === '12'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'Chico'&& level === '11'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'Chico'&& level === '11'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'Chico'&& level === '10'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Chico'&& level === '7'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'Chico'&& level === '5'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Chico'&& level === '4'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Chico'&& level === '4'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'Chico'&& level === '4'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'Chico'&& level === '3'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,3.3))
    && network === 'Chico'&& level === '3'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === 'Chico'&& level === '2'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,3.3))
    && network === 'Chico'&& level === '2'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === 'Chico'&& level === '1'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,3.3))
    && network === 'Chico'&& level === '1'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '9'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'PS.eu'&& level === '11'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'PS.eu'&& level === '12'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'PS.eu'&& level === '13'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'PS.eu'&& level === '13'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === 'PS.eu'&& level === '14'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'PS.eu'&& level === '14'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'GG'&& level === '9'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'GG'&& level === '11'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,66))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'GG'&& level === '12'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,80))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'GG'&& level === '13'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,88))
    && network === 'GG'&& level === '14'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'Party'&& level === '10'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Party'&& level === '10'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'Party'&& level === '11'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Party'&& level === '12'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,77))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === 'Party'&& level === '14'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Party'&& level === '14'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '8'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '11'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '12'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'PS.es'&& level === '13'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,100))
    && network === 'PS.es'&& level === '14'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'PS.es'&& level === '14'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,13))
    && network === 'WPN'&& level === '8'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WPN'&& level === '10'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'WPN'&& level === '12'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,66))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'WPN'&& level === '13'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,80))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WPN'&& level === '14'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === '888'&& level === '9'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === '888'&& level === '11'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === '888'&& level === '14'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === '888'&& level === '14'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,44))
    && network === 'Chico'&& level === '11'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'Chico'&& level === '13'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,109))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Chico'&& level === '14'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '8'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,40))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '10'&& effmu === 'C'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,15))
    && network === 'WNMX'&& level === '11'&& effmu === 'C'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'WNMX'&& level === '14'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '14'&& effmu === 'C'&& isSuperTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '8'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,30))
    && network === 'IP'&& level === '9'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,40))
    && network === 'IP'&& level === '10'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,50))
    && network === 'IP'&& level === '13'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,70))
    && network === 'IP'&& level === '14'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'Party'&& level === '4'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,3.3))
    && network === 'Party'&& level === '3'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10.5))
    && network === 'WPN'&& level === '7'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.25))
    && network === 'WPN'&& level === '6'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'WPN'&& level === '5'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'WPN'&& level === '4'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,2.2))
    && network === 'WPN'&& level === '3'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,27))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal && (FLAGS("deepstack"))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '7'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'PS.eu'&& level === '5'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal && (FLAGS("deepstack"))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,4.4))
    && network === 'PS.eu'&& level === '4'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,3.3))
    && network === 'PS.eu'&& level === '3'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5.5))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,2.2))
    && network === 'PS.eu'&& level === '2'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,3.3))
    && network === 'PS.eu'&& level === '0'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,13))
    && network === 'GG'&& level === '7'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10.5))
    && network === 'GG'&& level === '6'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.25))
    && network === 'GG'&& level === '5'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,15))
    && network === 'GG'&& level === '4'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'GG'&& level === '3'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5.5))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,2.2))
    && network === 'GG'&& level === '2'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,4.4))
    && network === 'GG'&& level === '1'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === '888'&& level === '6'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === '888'&& level === '5'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === '888'&& level === '5'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === '888'&& level === '4'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === '888'&& level === '3'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'Chico'&& level === '5'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Chico'&& level === '4'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,3.3))
    && network === 'Chico'&& level === '3'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'PS.es'&& level === '7'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5))
    && network === 'PS.es'&& level === '5'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,10))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5))
    && network === 'WNMX'&& level === '2'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,5))
    && network === 'IP'&& level === '1'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,125))
    && network === 'WNMX'&& level === '15'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,125))
    && network === 'WNMX'&& level === '14'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,125))
    && network === 'WNMX'&& level === '13'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,12.5))
    && network === 'IP'&& level === '1'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,12.5))
    && network === 'IP'&& level === '2'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,12.5))
    && network === 'IP'&& level === '2'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'IP'&& level === '4'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '4'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '4'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'IP'&& level === '5'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'IP'&& level === '5'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,125))
    && network === 'IP'&& level === '15'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,125))
    && network === 'IP'&& level === '14'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,125))
    && network === 'IP'&& level === '13'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,55))
    && network === 'PS.eu'&& level === '15'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'PS.eu'&& level === '16'&& effmu === 'A') return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'IP'&& level === '16'&& effmu === 'A') return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'Chico'&& level === '16'&& effmu === 'A') return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'PS.es'&& level === '16'&& effmu === 'A') return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'Party'&& level === '16'&& effmu === 'A') return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'GG'&& level === '16'&& effmu === 'A') return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === '888'&& level === '16'&& effmu === 'A') return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'WNMX'&& level === '16'&& effmu === 'A') return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,10000))
    && network === 'WPN'&& level === '16'&& effmu === 'A') return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(88,0))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(109,0))
    && network === '888'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(100,125))
    && network === 'WNMX'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(100,125))
    && network === 'IP'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(88,0))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(109,0))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(109,0))
    && network === 'Party'&& level === '12'&& effmu === 'A'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(109,0))
    && network === 'Party'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(109,0))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(88,0))
    && network === '888'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(88,0))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(109,0))
    && network === '888'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((BidGt(109,0))
    && network === 'Party'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(100,125))
    && network === 'WNMX'&& level === '13'&& effmu === 'C'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(100,125))
    && network === 'WNMX'&& level === '13'&& effmu === 'B'&& isNormal&& isKo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,4.4))
    && network === 'GG'&& level === '0'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,3.3))
    && network === 'GG'&& level === '0'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(0,3.3))
    && network === 'GG'&& level === '0'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === '888'&& level === '13'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === '888'&& level === '12'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === '888'&& level === '12'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === '888'&& level === '12'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === '888'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === '888'&& level === '10'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === '888'&& level === '9'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === '888'&& level === '9'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === '888'&& level === '9'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === '888'&& level === '8'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === '888'&& level === '7'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === '888'&& level === '7'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === '888'&& level === '7'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === '888'&& level === '6'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === '888'&& level === '6'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === '888'&& level === '6'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === '888'&& level === '5'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,3.3))
    && network === '888'&& level === '3'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Party'&& level === '9'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Party'&& level === '9'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Party'&& level === '8'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Party'&& level === '7'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'Party'&& level === '7'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'Party'&& level === '7'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,11))
    && network === 'Party'&& level === '6'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'Party'&& level === '6'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'Party'&& level === '6'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'Party'&& level === '5'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'Party'&& level === '5'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,5.5))
    && network === 'Party'&& level === '5'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'Chico'&& level === '5'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === 'Chico'&& level === '6'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'Chico'&& level === '6'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,7.5))
    && network === 'Chico'&& level === '6'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Chico'&& level === '7'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === 'Chico'&& level === '7'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,12))
    && network === 'Chico'&& level === '7'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Chico'&& level === '8'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Chico'&& level === '9'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Chico'&& level === '9'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,16.5))
    && network === 'Chico'&& level === '9'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Chico'&& level === '10'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Chico'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Chico'&& level === '12'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Chico'&& level === '12'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,22))
    && network === 'Chico'&& level === '12'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,33))
    && network === 'Chico'&& level === '13'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'PS.eu'&& level === '6'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'PS.eu'&& level === '6'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'PS.eu'&& level === '9'&& effmu === 'A'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'PS.eu'&& level === '10'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'PS.eu'&& level === '11'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'PS.eu'&& level === '12'&& effmu === 'B'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'PS.eu'&& level === '12'&& effmu === 'C'&& isTurbo) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'WNMX'&& level === '4'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '4'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '4'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'WNMX'&& level === '5'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,25))
    && network === 'WNMX'&& level === '5'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,60))
    && network === 'WNMX'&& level === '8'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,60))
    && network === 'WNMX'&& level === '9'&& effmu === 'B'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,60))
    && network === 'WNMX'&& level === '9'&& effmu === 'C'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'IP'&& level === '3'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,20))
    && network === 'WNMX'&& level === '3'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };if((FromTo(1,60))
    && network === 'IP'&& level === '8'&& effmu === 'A'&& isNormal) return { valid: true, rules: true, guarantee: 1, color: "black" };

    if(isGetTournaments && isAbility1 && isAbility2 && Number(ability1) <= Number(ability2)) return { valid: true, rules: false, guarantee: 1 } 
    
    return { valid: false, guarantee: 1, rules: false };
  };
  
  var filter_1 = {
    filter,
  };

module.exports = filter_1;
